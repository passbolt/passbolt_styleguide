/*! For license information please see 2340.0366bc71.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[2340],{"./src/react-extension/components/Share/SharePermissionItemSkeleton.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");class SharePermissionItemSkeleton extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{className:"row skeleton"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"avatar"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"aro"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"aro-name"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"aro-details"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"select rights"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"actions"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"shimmer"}))}}SharePermissionItemSkeleton.propTypes={};const __WEBPACK_DEFAULT_EXPORT__=SharePermissionItemSkeleton;SharePermissionItemSkeleton.__docgenInfo={description:"",methods:[],displayName:"SharePermissionItemSkeleton"}},"./src/react-extension/components/UserGroup/EditUserGroup/EditUserGroup.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_list__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-list/react-list.js"),react_list__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react_list__WEBPACK_IMPORTED_MODULE_1__),prop_types__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_17___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_17__),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),_contexts_UserWorkspaceContext__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/react-extension/contexts/UserWorkspaceContext.js"),_Common_Inputs_Autocomplete_Autocomplete__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/react-extension/components/Common/Inputs/Autocomplete/Autocomplete.js"),react_router_dom__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/react-router/esm/react-router.js"),react_i18next__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),_Share_SharePermissionItemSkeleton__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./src/react-extension/components/Share/SharePermissionItemSkeleton.js"),_EditUserGroupItem__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./src/react-extension/components/UserGroup/EditUserGroup/EditUserGroupItem.js"),_lib_Error_InputValidator__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./src/react-extension/lib/Error/InputValidator.js"),_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./src/shared/components/Icons/Icon.js"),_shared_constants_inputs_const__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./src/shared/constants/inputs.const.js");class EditUserGroup extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.createRefs(),this.bindHandlers()}get defaultState(){return{groupToEdit:{name:"",groupsUsers:[]},actions:{processing:!1,loading:!0},errors:{},nameWarning:"",validation:{hasAlreadyBeenValidated:!1}}}componentDidMount(){this.populate()}componentDidUpdate(){if(this.groupToEdit&&this.isLoading){const actions=Object.assign(this.state.actions,{loading:!1});this.setState({actions})}}createRefs(){this.references={name:react__WEBPACK_IMPORTED_MODULE_0__.createRef()},this.listRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef()}bindHandlers(){this.handleSubmit=this.handleSubmit.bind(this),this.handleClose=this.handleClose.bind(this),this.handleNameChange=this.handleNameChange.bind(this),this.handleMemberRoleChange=this.handleMemberRoleChange.bind(this),this.handleMemberRemoved=this.handleMemberRemoved.bind(this),this.handleAutocompleteSelect=this.handleAutocompleteSelect.bind(this),this.handleAutocompleteClose=this.handleAutocompleteClose.bind(this),this.handleAutocompleteOpen=this.handleAutocompleteOpen.bind(this),this.fetchAutocompleteItems=this.fetchAutocompleteItems.bind(this),this.renderItem=this.renderItem.bind(this)}populate(){const name=this.groupToEdit.name,groupsUsers=JSON.parse(JSON.stringify(this.groupToEdit.groups_users));groupsUsers.map(this.decorateGroupUserWithUser.bind(this)),this.sortGroupsUsersAlphabeticallyByUserFullName(groupsUsers),this.setState({groupToEdit:{name,groupsUsers}})}sortGroupsUsersAlphabeticallyByUserFullName(groupsUsers){groupsUsers.sort(((groupUserA,groupUserB)=>this.getUserFullname(groupUserA.user).localeCompare(this.getUserFullname(groupUserB.user))))}decorateGroupUserWithUser(groupUser){return groupUser.user=this.findUser(groupUser.user_id),groupUser}findUser(userId){return this.props.context.users.find((user=>user.id===userId))}get groupToEdit(){return this.props.userWorkspaceContext.groupToEdit}get isProcessing(){return this.state.actions.processing}get isLoading(){return this.state.actions.loading}get areActionsAllowed(){return!this.isProcessing&&!this.isLoading}isLoggedInUserAdmin(){return this.props.context.loggedInUser&&"admin"===this.props.context.loggedInUser.role.name}get hasMembersChanges(){const groupsUsers=this.state.groupToEdit.groupsUsers;return!(this.groupToEdit.groups_users.length===groupsUsers.length)||groupsUsers.some((groupUser=>this.isMemberChanged(groupUser)))}get hasMembers(){return this.groupsUsers.length>0}get hasManager(){return this.groupsUsers.filter((groupUser=>groupUser.is_admin)).length>0}get isManager(){return this.groupToEdit.groups_users.some((group_user=>group_user.user_id===this.props.context.loggedInUser.id&&group_user.is_admin))}get groupsUsers(){return this.state.groupToEdit.groupsUsers}get hasSubmitDisabled(){return!this.hasManager||!this.areActionsAllowed}handleNameChange(event){this.updateName(event.target.value)}handleMemberRoleChange(event,groupUser){const isManager=!0===event.target.value;this.updateMemberRole(groupUser,isManager)}handleMemberRemoved(event,groupUser){this.removeMember(groupUser)}async handleSubmit(event){event.preventDefault(),this.resetErrors();const actions=Object.assign(this.state.actions,{processing:!0});if(this.setState({actions}),this.validate(),this.hasErrors())return this.handleValidateError();await this.updateGroup().then(this.onEditSuccess.bind(this)).catch(this.onEditFailure.bind(this)).finally((()=>{const actions=Object.assign(this.state.actions,{processing:!1});this.setState({actions})}))}handleValidateError(){const actions=Object.assign(this.state.actions,{processing:!1});this.setState({actions}),this.focusFieldError()}focusFieldError(){this.hasErrors("name")&&this.references.name.current.focus()}handleClose(){this.close()}handleAutocompleteOpen(){this.setState({autocompleteOpen:!0})}handleAutocompleteClose(){this.setState({autocompleteOpen:!1})}handleAutocompleteSelect(user){const groupUser=this.groupToEdit.groups_users.find((groupUser=>groupUser.user_id===user.id));groupUser?this.restoreMember(groupUser):this.addMember(user)}isMember(user){return this.groupsUsers.some((groupUser=>groupUser.user_id===user.id))}isMemberChanged(groupUser){const originalGroupUser=this.groupToEdit.groups_users.find((originalGroupUser=>originalGroupUser.id===groupUser.id));return void 0===originalGroupUser||originalGroupUser.is_admin!==groupUser.is_admin}isMemberAdded(groupUser){return void 0===groupUser.id}updateName(name){if(this.setState({groupToEdit:Object.assign({},this.state.groupToEdit,{name})}),this.state.validation.hasAlreadyBeenValidated)this.validateName();else{const nameWarning=(0,_lib_Error_InputValidator__WEBPACK_IMPORTED_MODULE_15__.d)(name,_shared_constants_inputs_const__WEBPACK_IMPORTED_MODULE_16__.nX,this.translate);this.setState({nameWarning})}}updateGroupsUsers(groupsUsers,shouldScrollToEnd){const groupToEdit=Object.assign({},this.state.groupToEdit,{groups_users:groupsUsers});this.setState({groupToEdit},(()=>{shouldScrollToEnd&&this.listRef.current.scrollTo(this.groupsUsers.length-1)}))}updateMemberRole(groupUserToUpdate,isManager){const indexToUpdate=this.groupsUsers.findIndex((groupUser=>groupUser.user_id===groupUserToUpdate.user_id));groupUserToUpdate.is_admin=isManager,this.groupsUsers[indexToUpdate]=groupUserToUpdate,this.updateGroupsUsers(this.groupsUsers)}addMember(user){const mustBeAdmin=!this.hasManager,groupUser={user_id:user.id,is_admin:mustBeAdmin};this.decorateGroupUserWithUser(groupUser),this.groupsUsers.push(groupUser),this.updateGroupsUsers(this.groupsUsers,!0)}restoreMember(groupUserToRestore){this.decorateGroupUserWithUser(groupUserToRestore),this.groupsUsers.push(groupUserToRestore),this.updateGroupsUsers(this.groupsUsers,!0)}removeMember(groupUserToRemove){const indexToRemove=this.groupsUsers.findIndex((groupUser=>groupUser.user_id===groupUserToRemove.user_id)),groupsUsers=this.groupsUsers;groupsUsers.splice(indexToRemove,1),this.updateGroupsUsers(groupsUsers)}validate(){this.validateName(),this.setState({validation:Object.assign({},this.state.validation,{hasAlreadyBeenValidated:!0})})}validateName(){this.resetErrors("name");""===this.state.groupToEdit.name.trim()&&this.setError("name","empty")}setError(domain,type,value){value=value||!0;const errors=this.state.errors||{};errors[domain]=errors[domain]||{},errors[domain][type]=value,this.setState({errors})}resetErrors(domain){let errors={};domain&&(errors=this.state.errors,delete errors[domain]),this.setState({errors})}hasErrors(domain,type){const errors=this.state.errors||{};if(!errors)return!1;if(!domain){const errorsReducer=(accumulator,errorPropertyName)=>accumulator||this.hasErrors(errorPropertyName);return Object.getOwnPropertyNames(errors).reduce(errorsReducer,!1)}return type?errors[domain]&&void 0!==errors[domain][type]:"object"==typeof errors[domain]}hasGroupNameAlreadyExists(errorData){return errorData?.body?.name?.group_unique}async updateGroup(){const groupDto={id:this.groupToEdit.id,name:this.state.groupToEdit.name,groups_users:this.groupsUsers.map((groupUser=>({id:groupUser.id||void 0,user_id:groupUser.user_id,is_admin:groupUser.is_admin})))};await this.props.context.port.request("passbolt.groups.update",groupDto)}async onEditSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.translate("The group has been updated successfully")),this.close()}onEditFailure(error){"UserAbortsOperationError"===error.name?this.setState({processing:!1}):this.hasGroupNameAlreadyExists(error.data)?(this.setError("name","alreadyExists"),this.setState({processing:!1})):(console.error(error),this.onError(error),this.setState({processing:!1}))}onError(error){const errorDialogProps={error};this.props.dialogContext.open(_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_8__.A,errorDialogProps)}close(){this.props.location.pathname.includes("groups/edit")&&this.props.history.push(this.props.location.pathname.replace("edit","view")),this.props.onClose()}formatFingerprint(fingerprint){const result=fingerprint.toUpperCase().replace(/.{4}/g,"$& ");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,result.substr(0,24),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),result.substr(25))}getUserFullname(user){return`${user.profile.first_name} ${user.profile.last_name}`}async fetchAutocompleteItems(keyword){const words=(keyword=keyword.toLowerCase())&&keyword.split(/\s+/)||[""],matchWord=(word,value)=>(word=>new RegExp((word=>word.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"))(word),"i"))(word).test(value),matchUser=(word,user)=>((word,user)=>matchWord(word,user.username))(word,user)||((word,user)=>matchWord(word,user.profile.first_name)||matchWord(word,user.profile.last_name))(word,user);let currentCount=0;return this.props.context.users.filter((user=>{const isUserMatching=currentCount<_Common_Inputs_Autocomplete_Autocomplete__WEBPACK_IMPORTED_MODULE_10__.A.DISPLAY_LIMIT&&!0===user.active&&!this.isMember(user)&&(user=>words.every((word=>matchUser(word,user))))(user);return isUserMatching&&currentCount++,isUserMatching}))}renderItem(index,key){const groupUser=this.groupsUsers[index],isMemberChanged=this.isMemberChanged(groupUser),isMemberAdded=this.isMemberAdded(groupUser),editUserGroupItemKey=groupUser.user_id;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_EditUserGroupItem__WEBPACK_IMPORTED_MODULE_13__.A,{key:editUserGroupItemKey,itemKey:editUserGroupItemKey,isMemberChanged,isMemberAdded,groupUser,onMemberRoleChange:this.handleMemberRoleChange,onMemberRemoved:this.handleMemberRemoved,areActionsAllowed:this.areActionsAllowed,isLastItemDisplayed:key>=2})}renderContainer(items,ref){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{className:"permissions groups_users",ref},items)}get isSuspendedUserFeatureEnabled(){return this.props.context.siteSettings.canIUse("disableUser")}get translate(){return this.props.t}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_5__.A,{className:"edit-group-dialog",title:this.translate("Edit group"),onClose:this.handleClose,disabled:!this.areActionsAllowed},this.props.context.loggedInUser&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{className:"group-form",onSubmit:this.handleSubmit,noValidate:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`input text required ${this.hasErrors("name")?"error":""} ${this.areActionsAllowed&&this.isLoggedInUserAdmin()?"":"disabled"}`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:"js_field_name"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"Group name")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{id:"group-name-input","aria-required":!0,ref:this.references.name,value:this.state.groupToEdit.name,maxLength:"50",type:"text",placeholder:this.translate("group name"),onChange:this.handleNameChange,disabled:!this.areActionsAllowed||!this.isLoggedInUserAdmin()}),this.hasErrors("name","empty")&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"name error-message"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"A name is required.")),this.hasErrors("name","alreadyExists")&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"name error-message"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"The group name already exists.")),this.state.nameWarning&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"name warning-message"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"Warning:"))," ",this.state.nameWarning)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input required"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"Group members"),this.state.nameWarning&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_14__.A,{name:"exclamation"})))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"group_members"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content scroll permission-edit"},this.isLoading&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{className:"permissions groups_users"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Share_SharePermissionItemSkeleton__WEBPACK_IMPORTED_MODULE_12__.A,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Share_SharePermissionItemSkeleton__WEBPACK_IMPORTED_MODULE_12__.A,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Share_SharePermissionItemSkeleton__WEBPACK_IMPORTED_MODULE_12__.A,null)),!this.isLoading&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_list__WEBPACK_IMPORTED_MODULE_1___default(),{ref:this.listRef,itemRenderer:this.renderItem,itemsRenderer:this.renderContainer,length:this.groupsUsers.length,minSize:4,type:this.groupsUsers.length<3?"simple":"uniform",threshold:30})),!this.isLoading&&!this.hasMembers&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"message warning"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"The group is empty, please add a group manager."))),this.hasMembers&&!this.hasManager&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"message error at-least-one-manager"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"Please make sure there is at least one group manager."))),!this.isLoading&&!this.isManager&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"message warning feedback cannot-add-user"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"Only the group manager can add new people to a group."))),this.hasMembersChanges&&this.hasManager&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"message warning feedback"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_11__.x6,null,"You need to click save for the changes to take place.")))),this.isManager&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content permission-add"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_Autocomplete_Autocomplete__WEBPACK_IMPORTED_MODULE_10__.A,{id:"user-name-input",name:"name",label:this.translate("Add people"),placeholder:this.translate("Start typing a person name"),searchCallback:this.fetchAutocompleteItems,onSelect:this.handleAutocompleteSelect,onOpen:this.handleAutocompleteOpen,onClose:this.handleAutocompleteClose,disabled:!this.areActionsAllowed,baseUrl:this.props.context.userSettings.getTrustedDomain(),canShowUserAsSuspended:this.isSuspendedUserFeatureEnabled})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__.A,{onClick:this.handleClose,disabled:!this.areActionsAllowed}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__.A,{value:this.translate("Save"),disabled:this.hasSubmitDisabled,processing:this.isProcessing}))))}}EditUserGroup.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_17___default().any,actionFeedbackContext:prop_types__WEBPACK_IMPORTED_MODULE_17___default().any,onClose:prop_types__WEBPACK_IMPORTED_MODULE_17___default().func,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_17___default().any,location:prop_types__WEBPACK_IMPORTED_MODULE_17___default().object,history:prop_types__WEBPACK_IMPORTED_MODULE_17___default().object,userWorkspaceContext:prop_types__WEBPACK_IMPORTED_MODULE_17___default().object,t:prop_types__WEBPACK_IMPORTED_MODULE_17___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_2__.L)((0,react_router_dom__WEBPACK_IMPORTED_MODULE_18__.y)((0,_contexts_UserWorkspaceContext__WEBPACK_IMPORTED_MODULE_9__.zY)((0,_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__.ot)((0,_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_4__.z9)((0,react_i18next__WEBPACK_IMPORTED_MODULE_11__.CI)("common")(EditUserGroup))))));EditUserGroup.__docgenInfo={description:"This component allows to edit an user group",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"createRefs",docblock:"Creates references",modifiers:[],params:[],returns:null,description:"Creates references"},{name:"bindHandlers",docblock:"Binds the component handlers",modifiers:[],params:[],returns:null,description:"Binds the component handlers"},{name:"populate",docblock:"Populate the component with initial data",modifiers:[],params:[],returns:null,description:"Populate the component with initial data"},{name:"sortGroupsUsersAlphabeticallyByUserFullName",docblock:"Sort a list of groups users by their\n@param {array} groupsUsers",modifiers:[],params:[{name:"groupsUsers",type:{name:"array"},optional:!1}],returns:null,description:"Sort a list of groups users by their"},{name:"decorateGroupUserWithUser",docblock:"Decorate a group user with its associated user\n@param {Object} groupUser The group user to decorate",modifiers:[],params:[{name:"groupUser",description:"The group user to decorate",type:{name:"Object"},optional:!1}],returns:null,description:"Decorate a group user with its associated user"},{name:"findUser",docblock:"Find a user\n@param {string} userId\n@returns {object}",modifiers:[],params:[{name:"userId",type:{name:"string"},optional:!1}],returns:{type:{name:"object"}},description:"Find a user"},{name:"groupToEdit",docblock:"The group to edit at component initialization\n@type {object}",modifiers:["get"],params:[],returns:null,description:"The group to edit at component initialization"},{name:"isProcessing",docblock:"Returns true if the component is processing\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if the component is processing"},{name:"isLoading",docblock:"Returns true if the component is loading\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if the component is loading"},{name:"areActionsAllowed",docblock:"Returns true if the current user can perform actions\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if the current user can perform actions"},{name:"isLoggedInUserAdmin",docblock:"Is the logged in user admin\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is the logged in user admin"},{name:"hasMembersChanges",docblock:"Returns true if there are some changes on the group members\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if there are some changes on the group members"},{name:"hasMembers",docblock:"Returns true if the group to edit has members\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if the group to edit has members"},{name:"hasManager",docblock:"Returns true if the group to edit has at least one manager\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if the group to edit has at least one manager"},{name:"isManager",docblock:"Returns true if the current user is one of the group managers\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Returns true if the current user is one of the group managers"},{name:"groupsUsers",docblock:"Returns the current list of members\n@type {array}",modifiers:["get"],params:[],returns:null,description:"Returns the current list of members"},{name:"hasSubmitDisabled",docblock:"Return true if submit button should be disabled\nTrue if there is no manager or if all input should be disabled\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Return true if submit button should be disabled\nTrue if there is no manager or if all input should be disabled"},{name:"handleNameChange",docblock:"Whenever the group name change",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Whenever the group name change"},{name:"handleMemberRoleChange",docblock:"Whenever a member's permission has changed\n@param {Event} event A select DOM event\n@param {object} groupUser A group user",modifiers:[],params:[{name:"event",description:"A select DOM event",type:{name:"Event"},optional:!1},{name:"groupUser",description:"A group user",type:{name:"object"},optional:!1}],returns:null,description:"Whenever a member's permission has changed"},{name:"handleMemberRemoved",docblock:"Whenever a member's is removed from the group\n@param {Event} event A click DOM event\n@param {object} groupUser A group user",modifiers:[],params:[{name:"event",description:"A click DOM event",type:{name:"Event"},optional:!1},{name:"groupUser",description:"A group user",type:{name:"object"},optional:!1}],returns:null,description:"Whenever a member's is removed from the group"},{name:"handleSubmit",docblock:"Whenever the user wants to submit the changes\n@param {Event} event A submit DOM event\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"event",description:"A submit DOM event",type:{name:"Event"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Whenever the user wants to submit the changes"},{name:"handleValidateError",docblock:"Handle validation error.",modifiers:[],params:[],returns:null,description:"Handle validation error."},{name:"focusFieldError",docblock:"Focus the field of the form which is in error state.",modifiers:[],params:[],returns:null,description:"Focus the field of the form which is in error state."},{name:"handleClose",docblock:"Whenever the user will to close the dialog",modifiers:[],params:[],returns:null,description:"Whenever the user will to close the dialog"},{name:"handleAutocompleteOpen",docblock:"handleAutocompleteOpen",modifiers:[],params:[],returns:null,description:"handleAutocompleteOpen"},{name:"handleAutocompleteClose",docblock:"handleAutocompleteClose",modifiers:[],params:[],returns:null,description:"handleAutocompleteClose"},{name:"handleAutocompleteSelect",docblock:"handleAutocompleteSelect\nWhat happens when an item in the autocomplete list is selected\ne.g. if it's not already in the list, add it and scroll\n@param {object} user The selected user",modifiers:[],params:[{name:"user",description:"The selected user",type:{name:"object"},optional:!1}],returns:null,description:"handleAutocompleteSelect\nWhat happens when an item in the autocomplete list is selected\ne.g. if it's not already in the list, add it and scroll"},{name:"isMember",docblock:"Check if a user is already member of the new list.\n@param {object} user The user\n@returns {boolean}",modifiers:[],params:[{name:"user",description:"The user",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Check if a user is already member of the new list."},{name:"isMemberChanged",docblock:"Returns true if the group user membership has changed.\n@param {object} groupUser the group user\n@returns {boolean}",modifiers:[],params:[{name:"groupUser",description:"the group user",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the group user membership has changed."},{name:"isMemberAdded",docblock:"Returns true of the member has been added\n@returns {boolean}",modifiers:[],params:[{name:"groupUser",optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true of the member has been added"},{name:"updateName",docblock:"Changes the group name\n@param name The new name",modifiers:[],params:[{name:"name",description:"The new name",optional:!1}],returns:null,description:"Changes the group name"},{name:"updateGroupsUsers",docblock:"Changes the group groups users\n@param {array} The new groups users\n@param {boolean} shouldScrollToEnd if true triggers a scroll to the end of the list",modifiers:[],params:[{name:"groupsUsers",optional:!1},{name:"shouldScrollToEnd",description:"if true triggers a scroll to the end of the list",type:{name:"boolean"},optional:!1}],returns:null,description:"Changes the group groups users"},{name:"updateMemberRole",docblock:"Update a member's group membership role\n@param {object} groupUserToUpdate The group user whose permission will be updated\n@param {boolean} isManager True if the members will be a group manager",modifiers:[],params:[{name:"groupUserToUpdate",description:"The group user whose permission will be updated",type:{name:"object"},optional:!1},{name:"isManager",description:"True if the members will be a group manager",type:{name:"boolean"},optional:!1}],returns:null,description:"Update a member's group membership role"},{name:"addMember",docblock:"Add a user to the member list\n@param {object} user The user to create a new group membership for",modifiers:[],params:[{name:"user",description:"The user to create a new group membership for",type:{name:"object"},optional:!1}],returns:null,description:"Add a user to the member list"},{name:"restoreMember",docblock:"Restore a previously removed group user to the list\n@param {object} groupUserToRestore The group user to restore",modifiers:[],params:[{name:"groupUserToRestore",description:"The group user to restore",type:{name:"object"},optional:!1}],returns:null,description:"Restore a previously removed group user to the list"},{name:"removeMember",docblock:"Removes a member from the list\n@param {object} groupUserToRemove The group user to remove",modifiers:[],params:[{name:"groupUserToRemove",description:"The group user to remove",type:{name:"object"},optional:!1}],returns:null,description:"Removes a member from the list"},{name:"validate",docblock:"Validate the form",modifiers:[],params:[],returns:null,description:"Validate the form"},{name:"validateName",docblock:"Validates the group name",modifiers:[],params:[],returns:null,description:"Validates the group name"},{name:"setError",docblock:"Set errors\n@param {string} domain The error namespace\n@param {string} type The error type\n@param {string|boolean?} value the error value",modifiers:[],params:[{name:"domain",description:"The error namespace",type:{name:"string"},optional:!1},{name:"type",description:"The error type",type:{name:"string"},optional:!1},{name:"value",description:"the error value",type:{name:"union",elements:[{name:"string"},{name:"boolean"}]},optional:!1}],returns:null,description:"Set errors"},{name:"resetErrors",docblock:"Reset the errors\n@param {string?} domain (Optional) The domain to reset.",modifiers:[],params:[{name:"domain",description:"(Optional) The domain to reset.",type:{name:"string"},optional:!1}],returns:null,description:"Reset the errors"},{name:"hasErrors",docblock:"Return true if there are some errors\n@param {string?} domain (Optional) The domain to check for. If none precised, check for all\n@param {string?} type (Optional) The type of error. If none precised, check for all\n@boolean {boolean}",modifiers:[],params:[{name:"domain",description:"(Optional) The domain to check for. If none precised, check for all",type:{name:"string"},optional:!1},{name:"type",description:"(Optional) The type of error. If none precised, check for all",type:{name:"string"},optional:!1}],returns:null,description:"Return true if there are some errors"},{name:"hasGroupNameAlreadyExists",docblock:"has username already exists\n@param errorData the error data received\n@returns {*}",modifiers:[],params:[{name:"errorData",description:"the error data received",optional:!1}],returns:{type:{name:"mixed"}},description:"has username already exists"},{name:"updateGroup",docblock:"Edits the current group\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Edits the current group"},{name:"onEditSuccess",docblock:"Whenever the group has been updated successfully\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Whenever the group has been updated successfully"},{name:"onEditFailure",docblock:"Whenever the group has been updated successfully",modifiers:[],params:[{name:"error",optional:!1}],returns:null,description:"Whenever the group has been updated successfully"},{name:"onError",docblock:"Handle error to display the error dialog\n@param {object} error The error",modifiers:[],params:[{name:"error",description:"The error",type:{name:"object"},optional:!1}],returns:null,description:"Handle error to display the error dialog"},{name:"close",docblock:"Close the dialog",modifiers:[],params:[],returns:null,description:"Close the dialog"},{name:"formatFingerprint",docblock:"Format fingerprint\n@param {string} fingerprint An user finger print\n@returns {JSX.Element}",modifiers:[],params:[{name:"fingerprint",description:"An user finger print",type:{name:"string"},optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Format fingerprint"},{name:"getUserFullname",docblock:"Get a user full name\n@param {object} user\n@returns {string}",modifiers:[],params:[{name:"user",type:{name:"object"},optional:!1}],returns:{type:{name:"string"}},description:"Get a user full name"},{name:"fetchAutocompleteItems",docblock:"Get users matching the given keyword\n@param {string} keyword\n@returns {array} The array of users filtered",modifiers:["async"],params:[{name:"keyword",type:{name:"string"},optional:!1}],returns:{description:"The array of users filtered",type:{name:"array"}},description:"Get users matching the given keyword"},{name:"renderItem",docblock:"Use to render a single item of the user group list\n@param {integer} index of the item in the source list\n@param {integer} key index of the HTML element in the ReactList\n@returns {JSX.Element}",modifiers:[],params:[{name:"index",description:"of the item in the source list",type:{name:"integer"},optional:!1},{name:"key",description:"index of the HTML element in the ReactList",type:{name:"integer"},optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Use to render a single item of the user group list"},{name:"renderContainer",docblock:"Use to render the container of the list of the ReactList component\n@param {Array<JSX.Element>} items the list of the items to be rendered as children element of the conainer\n@param {*} ref the ref ReactList needs to manage the scrll\n@returns {JSX.Element}",modifiers:[],params:[{name:"items",description:"the list of the items to be rendered as children element of the conainer",type:{name:"Array",elements:[{name:"JSX.Element"}]},optional:!1},{name:"ref",description:"the ref ReactList needs to manage the scrll",type:{name:"mixed"},optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Use to render the container of the list of the ReactList component"},{name:"isSuspendedUserFeatureEnabled",docblock:"Returns true if the feature flag disableUser is enabled.\n@param {object} user\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the feature flag disableUser is enabled."},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"EditUserGroup",props:{context:{description:"",type:{name:"any"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},location:{description:"",type:{name:"object"},required:!1},history:{description:"",type:{name:"object"},required:!1},userWorkspaceContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/UserGroup/EditUserGroup/EditUserGroupItem.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>EditUserGroup_EditUserGroupItem});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),UserAvatar=__webpack_require__("./src/react-extension/components/Common/Avatar/UserAvatar.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),userUtils=__webpack_require__("./src/shared/utils/userUtils.js"),TooltipPortal=__webpack_require__("./src/react-extension/components/Common/Tooltip/TooltipPortal.js"),Fingerprint=__webpack_require__("./src/react-extension/components/Common/Fingerprint/Fingerprint.js");class TooltipMessageGroupUserDetailsLoading extends react.Component{render(){return react.createElement("div",{className:"group-user-details-tooltip skeleton"},react.createElement("div",{className:"email"}," "),react.createElement("div",{className:"fingerprint"},react.createElement("div",{className:"fingerprint-line"}," "),react.createElement("div",{className:"fingerprint-line"}," ")),react.createElement("div",{className:"shimmer shimmer-tooltip"}))}}const Tooltip_TooltipMessageGroupUserDetailsLoading=TooltipMessageGroupUserDetailsLoading;TooltipMessageGroupUserDetailsLoading.__docgenInfo={description:"",methods:[],displayName:"TooltipMessageGroupUserDetailsLoading"};class EditUserGroupItem extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{tooltipFingerprintMessage:null}}bindCallbacks(){this.onTooltipFingerprintMouseHover=this.onTooltipFingerprintMouseHover.bind(this)}getUserFullname(){const user=this.props.groupUser.user;return`${user.profile.first_name} ${user.profile.last_name}`}isUserSuspended(user){return this.props.context.siteSettings.canIUse("disableUser")&&(0,userUtils.B7)(user)}get isManagerSelectOptions(){return[{value:!1,label:react.createElement(es.x6,null,"Member")},{value:!0,label:react.createElement(es.x6,null,"Group manager")}]}async onTooltipFingerprintMouseHover(){if(this.state.tooltipFingerprintMessage)return;const gpgkey=await this.props.context.port.request("passbolt.keyring.get-public-key-info-by-user",this.props.groupUser.user.id),tooltipFingerprintMessage=react.createElement("div",{className:"group-user-details-tooltip"},react.createElement("div",{className:"email ellipsis"},react.createElement("strong",null,this.props.groupUser.user.username)),react.createElement(Fingerprint.A,{fingerprint:gpgkey.fingerprint}));this.setState({tooltipFingerprintMessage})}render(){const isSuspended=this.isUserSuspended(this.props.groupUser.user);return react.createElement("li",{className:`row ${this.props.isMemberChanged?"permission-updated":""} ${isSuspended?"suspended":""}`},react.createElement(UserAvatar.A,{baseUrl:this.props.context.userSettings.getTrustedDomain(),user:this.props.groupUser.user}),react.createElement("div",{className:"aro"},react.createElement("div",{className:"aro-name"},react.createElement("span",{className:"ellipsis"},this.getUserFullname(),isSuspended&&react.createElement("span",{className:"suspended"}," ",react.createElement(es.x6,null,"(suspended)"))),react.createElement(TooltipPortal.A,{message:this.state.tooltipFingerprintMessage||react.createElement(Tooltip_TooltipMessageGroupUserDetailsLoading,null),direction:"auto",onMouseHover:this.onTooltipFingerprintMouseHover},react.createElement(Icon.A,{name:"info-circle",baseline:!0}))),react.createElement("div",{className:"permission_changes"},this.props.isMemberAdded&&react.createElement("span",null,react.createElement(es.x6,null,"Will be added")),this.props.isMemberChanged&&!this.props.isMemberAdded&&react.createElement("span",null,react.createElement(es.x6,null,"Will be updated")),!this.props.isMemberChanged&&!this.props.isMemberAdded&&react.createElement("span",null,react.createElement(es.x6,null,"Unchanged")))),react.createElement("div",{className:"rights"},react.createElement(Select.A,{className:"permission inline",value:this.props.groupUser.is_admin,items:this.isManagerSelectOptions,onChange:event=>this.props.onMemberRoleChange(event,this.props.groupUser),disabled:!this.props.areActionsAllowed,direction:this.props.isLastItemDisplayed?"top":"bottom"})),react.createElement("div",{className:"actions"},react.createElement("button",{type:"button",title:this.props.t("Remove"),className:"remove-item button-transparent",disabled:!this.props.areActionsAllowed,onClick:event=>this.props.onMemberRemoved(event,this.props.groupUser)},react.createElement(Icon.A,{name:"close"}),react.createElement("span",{className:"visuallyhidden"},react.createElement(es.x6,null,"Remove")))))}}EditUserGroupItem.defaultProps={isMemberChanged:!1,isMemberAdded:!1,areActionsAllowed:!1,isLastItemDisplayed:!1},EditUserGroupItem.propTypes={context:prop_types_default().any,groupUser:prop_types_default().object.isRequired,onMemberRoleChange:prop_types_default().func.isRequired,onMemberRemoved:prop_types_default().func.isRequired,isMemberChanged:prop_types_default().bool,isMemberAdded:prop_types_default().bool,areActionsAllowed:prop_types_default().bool,isLastItemDisplayed:prop_types_default().bool,t:prop_types_default().func};const EditUserGroup_EditUserGroupItem=(0,AppContext.L)((0,es.CI)("common")(EditUserGroupItem));EditUserGroupItem.__docgenInfo={description:"This component allows to edit an user group",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"bindCallbacks",docblock:"Bind callbacks.",modifiers:[],params:[],returns:null,description:"Bind callbacks."},{name:"getUserFullname",docblock:"Get a user full name\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Get a user full name"},{name:"isUserSuspended",docblock:"Returns true if the feature flag disableUser is enabled and the given user is suspended.\n@param {object} user\n@returns {boolean}",modifiers:[],params:[{name:"user",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the feature flag disableUser is enabled and the given user is suspended."},{name:"isManagerSelectOptions",docblock:"Get options for permission selection\n@returns {[{label: *, value: boolean}]}",modifiers:["get"],params:[],returns:{type:{name:"tuple",elements:[]}},description:"Get options for permission selection"},{name:"onTooltipFingerprintMouseHover",docblock:"Handle whenever the user passes its mouse hover the tooltip.\n@returns {Promise<JSX>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"JSX"}]}},description:"Handle whenever the user passes its mouse hover the tooltip."}],displayName:"EditUserGroupItem",props:{isMemberChanged:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},isMemberAdded:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},areActionsAllowed:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},isLastItemDisplayed:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},context:{description:"",type:{name:"any"},required:!1},groupUser:{description:"",type:{name:"object"},required:!0},onMemberRoleChange:{description:"",type:{name:"func"},required:!0},onMemberRemoved:{description:"",type:{name:"func"},required:!0},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/contexts/UserWorkspaceContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__,aj:()=>UserWorkspaceFilterTypes,zY:()=>withUserWorkspace});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__),react_router_dom__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/react-router/esm/react-router.js"),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_LoadingContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-extension/contexts/LoadingContext.js"),_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),_components_UserGroup_EditUserGroup_EditUserGroup__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/components/UserGroup/EditUserGroup/EditUserGroup.js"),_DialogContext__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),luxon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/luxon/src/luxon.js"),react_i18next__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),_shared_utils_userUtils__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/shared/utils/userUtils.js"),_shared_context_Rbac_RbacContext__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/shared/context/Rbac/RbacContext.js"),_shared_services_rbacs_uiActionEnumeration__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/shared/services/rbacs/uiActionEnumeration.js");const UserWorkspaceContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({filter:{type:null,payload:null},sorter:{propertyName:"user",asc:!1},filteredUsers:[],selectedUsers:[],details:{user:null,group:null,locked:!0},scrollTo:{user:null},groupToEdit:null,isAccessAllowed:()=>{},onUserScrolled:()=>{},onDetailsLocked:()=>{},onSorterChanged:()=>{},onUserSelected:{single:()=>{}},onGroupToEdit:()=>{},shouldDisplaySuspendedUsersFilter:()=>{}});class UserWorkspaceContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.initializeProperties()}get defaultState(){return{filter:{type:UserWorkspaceFilterTypes.NONE},sorter:{propertyName:"modified",asc:!1},filteredUsers:[],selectedUsers:[],details:{user:null,group:null,locked:!0},scrollTo:{user:null},groupToEdit:null,isAccessAllowed:this.isAccessAllowed.bind(this),getTranslatedRoleName:this.getTranslatedRoleName.bind(this),onUserScrolled:this.handleUserScrolled.bind(this),onDetailsLocked:this.handleDetailsLocked.bind(this),onSorterChanged:this.handleSorterChange.bind(this),onUserSelected:{single:this.handleUserSelected.bind(this)},onGroupToEdit:this.handleGroupToEdit.bind(this),isAttentionRequired:this.isAttentionRequired.bind(this),shouldDisplaySuspendedUsersFilter:this.shouldDisplaySuspendedUsersFilter.bind(this)}}initializeProperties(){this.users=null,this.groups=[],this.routeLocationKey=null}componentDidMount(){this.isAccessAllowed()&&(this.populate(),this.handleUsersWaitedFor())}isAccessAllowed(){return this.props.rbacContext.canIUseUiAction(_shared_services_rbacs_uiActionEnumeration__WEBPACK_IMPORTED_MODULE_10__.e.USERS_VIEW_WORKSPACE)}async componentDidUpdate(prevProps,prevState){await this.handleFilterChange(prevState.filter),this.handleUsersLoaded(),await this.handleUsersChange(),await this.handleGroupsChange(),await this.handleRouteChange(prevProps.location)}async handleFilterChange(previousFilter){if(previousFilter!==this.state.filter){previousFilter.type!==UserWorkspaceFilterTypes.NONE&&(this.populate(),await this.unselectAll())}}async handleUsersChange(){this.props.context.users&&this.props.context.users!==this.users&&(this.users=this.props.context.users,await this.search(this.state.filter),await this.updateDetails(),await this.unselectUnknownUsers())}async handleGroupsChange(){this.props.context.groups&&this.props.context.groups!==this.groups&&(this.groups=this.props.context.groups,await this.refreshSearchFilter(),await this.updateDetails())}async handleRouteChange(previousLocation){const hasLocationChanged=this.props.location.key!==previousLocation.key,hasLocationChangedRouter5=this.props.location.key!==this.routeLocationKey;this.routeLocationKey=this.props.location.key;const isAppFirstLoad=this.state.filter.type===UserWorkspaceFilterTypes.NONE;(hasLocationChanged&&hasLocationChangedRouter5||isAppFirstLoad)&&(await this.handleGroupRouteChange(),await this.handleUserRouteChange())}async handleGroupRouteChange(){if(null!==this.users&&null!==this.groups){const groupId=this.props.match.params.selectedGroupId;if(groupId&&this.props.context.groups){const group=this.props.context.groups.find((group=>group.id===groupId));if(group){await this.search({type:UserWorkspaceFilterTypes.GROUP,payload:{group}}),await this.detailGroup(group);this.props.location.pathname.includes("edit")&&(await this.updateGroupToEdit(group),this.props.dialogContext.open(_components_UserGroup_EditUserGroup_EditUserGroup__WEBPACK_IMPORTED_MODULE_4__.A))}else this.handleUnknownGroup()}}}async handleUserRouteChange(){if(this.props.location.pathname.includes("users")||this.props.location.pathname.includes("account-recovery-requests/review")){const userId=this.props.match.params.selectedUserId;userId?await this.handleSingleUserRouteChange(userId):await this.handleAllUserRouteChange()}}async handleSingleUserRouteChange(userId){if(null!==this.users){const user=this.users.find((user=>user.id===userId));this.state.filter.type===UserWorkspaceFilterTypes.NONE&&await this.search({type:UserWorkspaceFilterTypes.ALL}),user?(await this.selectFromRoute(user),await this.scrollTo(user),await this.detailUser(user)):this.handleUnknownUser()}}async handleAllUserRouteChange(){if(null!==this.users){const filter=this.props.location.state?.filter||{type:UserWorkspaceFilterTypes.ALL};await this.search(filter),await this.detailNothing()}}async handleDetailsLocked(){await this.lockDetails()}handleUnknownUser(){this.props.actionFeedbackContext.displayError("The user does not exist"),this.props.history.push({pathname:"/app/users"})}handleUnknownGroup(){this.props.actionFeedbackContext.displayError("The group does not exist"),this.props.history.push({pathname:"/app/users"})}async handleUserScrolled(){await this.scrollNothing()}async handleSorterChange(propertyName){await this.updateSorter(propertyName),await this.sort()}async handleUserSelected(user){await this.select(user),this.redirectAfterSelection()}async handleGroupToEdit(group){await this.updateGroupToEdit(group)}handleUsersWaitedFor(){this.props.loadingContext.add()}handleUsersLoaded(){null===this.users&&this.props.context.users&&(this.props.loadingContext.remove(),this.handleUsersLoaded=()=>{})}isAttentionRequired(user){return Boolean(user.pending_account_recovery_request)}populate(){this.props.context.port.request("passbolt.users.update-local-storage"),this.props.context.port.request("passbolt.groups.update-local-storage")}async search(filter){const isRecentlyModifiedFilter=filter.type===UserWorkspaceFilterTypes.RECENTLY_MODIFIED,searchOperations={[UserWorkspaceFilterTypes.GROUP]:this.searchByGroup.bind(this),[UserWorkspaceFilterTypes.TEXT]:this.searchByText.bind(this),[UserWorkspaceFilterTypes.RECENTLY_MODIFIED]:this.searchByRecentlyModified.bind(this),[UserWorkspaceFilterTypes.SUSPENDED_USER]:this.searchBySuspendedUsers.bind(this),[UserWorkspaceFilterTypes.ALL]:this.searchAll.bind(this),[UserWorkspaceFilterTypes.NONE]:()=>{}};await searchOperations[filter.type](filter),isRecentlyModifiedFilter?await this.resetSorter():await this.sort()}async searchAll(filter){this.setState({filter,filteredUsers:this.users})}async searchByGroup(filter){const usersGroupIds=filter.payload.group.groups_users.map((groupUser=>groupUser.user_id)),filteredUsers=this.users.filter((user=>usersGroupIds.some((userId=>userId===user.id))));this.setState({filter,filteredUsers})}async searchByText(filter){const text=filter.payload,words=text&&text.split(/\s+/)||[""],matchWord=(word,value)=>(word=>new RegExp((word=>word.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"))(word),"i"))(word).test(value),matchUser=(word,user)=>((word,user)=>matchWord(word,user.username))(word,user)||((word,user)=>matchWord(word,user.profile.first_name)||matchWord(word,user.profile.last_name))(word,user),filteredUsers=this.users.filter((user=>words.every((word=>matchUser(word,user)))));this.setState({filter,filteredUsers})}async searchByRecentlyModified(filter){const filteredUsers=this.users.sort(((user1,user2)=>luxon__WEBPACK_IMPORTED_MODULE_6__.c9.fromISO(user2.modified)<luxon__WEBPACK_IMPORTED_MODULE_6__.c9.fromISO(user1.modified)?-1:1));this.setState({filter,filteredUsers})}async searchBySuspendedUsers(filter){const filteredUsers=this.users.filter((u=>(0,_shared_utils_userUtils__WEBPACK_IMPORTED_MODULE_8__.B7)(u)));this.setState({filter,filteredUsers})}async refreshSearchFilter(){if(this.state.filter.type===UserWorkspaceFilterTypes.GROUP){if(this.groups.some((group=>group.id===this.state.filter.payload.group.id))){const updatedGroup=this.groups.find((group=>group.id===this.state.filter.payload.group.id)),filter=Object.assign(this.state.filter,{payload:{group:updatedGroup}});await this.search(filter)}else{const filter={type:UserWorkspaceFilterTypes.ALL};this.props.history.push({pathname:"/app/users",state:{filter}})}}}async select(user){const mustUnselect=1===this.state.selectedUsers.length&&this.state.selectedUsers[0].id===user.id;this.setState({selectedUsers:mustUnselect?[]:[user]})}async selectFromRoute(user){const selectedUsers=[user];this.setState({selectedUsers})}async unselectAll(){0!==this.state.selectedUsers.length&&this.setState({selectedUsers:[]})}async unselectUnknownUsers(){const selectedUsers=this.state.selectedUsers.filter((selectedUser=>this.users.some((selectedUser=>user=>user.id===selectedUser.id)(selectedUser))));this.setState({selectedUsers})}redirectAfterSelection(){if(null!==this.users&&null!==this.groups){if(1===this.state.selectedUsers.length)this.props.history.push(`/app/users/view/${this.state.selectedUsers[0].id}`);else{const{filter}=this.state;if(filter.type===UserWorkspaceFilterTypes.GROUP){this.props.location.pathname!==`/app/groups/view/${this.state.filter.payload.group.id}`&&this.props.history.push({pathname:`/app/groups/view/${this.state.filter.payload.group.id}`})}else{"/app/users"!==this.props.location.pathname&&this.props.history.push({pathname:"/app/users",state:{filter}})}}}}async updateSorter(propertyName){const sorter={propertyName,asc:this.state.sorter.propertyName!==propertyName||!this.state.sorter.asc};this.setState({sorter})}async resetSorter(){this.setState({sorter:{propertyName:"modified",asc:!1}})}async sort(){const baseSorter=sorter=>this.state.sorter.asc?sorter:(sorter=>(s1,s2)=>-sorter(s1,s2))(sorter),keySorter=(key,sorter)=>baseSorter(((s1,s2)=>sorter(s1[key],s2[key]))),plainObjectSorter=sorter=>baseSorter(sorter),mfaSorter=(u1,u2)=>u2.is_mfa_enabled===u1.is_mfa_enabled?0:u2.is_mfa_enabled?-1:1,accountRecoveryUserSettingStatusSorter=(u1,u2)=>u2?.account_recovery_user_setting?.status===u1?.account_recovery_user_setting?.status?0:u2?.account_recovery_user_setting?.status?-1:1,getUserFullName=user=>`${user.profile.first_name} ${user.profile.last_name}`,nameSorter=(u1,u2)=>getUserFullName(u1).localeCompare(getUserFullName(u2)),roleNameSorter=(roleIdU1,roleIdU2)=>this.getTranslatedRoleName(roleIdU1).localeCompare(this.getTranslatedRoleName(roleIdU2)),suspendedSorter=(u1,u2)=>(0,_shared_utils_userUtils__WEBPACK_IMPORTED_MODULE_8__.B7)(u1)===(0,_shared_utils_userUtils__WEBPACK_IMPORTED_MODULE_8__.B7)(u2)?0:(0,_shared_utils_userUtils__WEBPACK_IMPORTED_MODULE_8__.B7)(u2)?-1:1,dateOrStringSorter=["modified","last_logged_in"].includes(this.state.sorter.propertyName)?(d1,d2)=>d1?d2&&luxon__WEBPACK_IMPORTED_MODULE_6__.c9.fromISO(d1)<luxon__WEBPACK_IMPORTED_MODULE_6__.c9.fromISO(d2)?-1:1:-1:(s1,s2)=>(s1||"").localeCompare(s2||""),attentionRequireSorter=(u1,u2)=>this.isAttentionRequired(u2)===this.isAttentionRequired(u1)?0:this.isAttentionRequired(u2)?1:-1,isNameProperty="name"===this.state.sorter.propertyName,isMfaProperty="is_mfa_enabled"===this.state.sorter.propertyName,isRoleNameProperty="role.name"===this.state.sorter.propertyName,isSuspendedProperty="disabled"===this.state.sorter.propertyName,isAttentionRequiredProperty="attentionRequired"===this.state.sorter.propertyName,isAccountRecoveryUserSettingStatusProperty="account_recovery_user_setting.status"===this.state.sorter.propertyName;let propertySorter;propertySorter=isNameProperty?plainObjectSorter(nameSorter):isMfaProperty?plainObjectSorter(mfaSorter):isAttentionRequiredProperty?plainObjectSorter(attentionRequireSorter):isRoleNameProperty?keySorter("role_id",roleNameSorter):isAccountRecoveryUserSettingStatusProperty?plainObjectSorter(accountRecoveryUserSettingStatusSorter):isSuspendedProperty?plainObjectSorter(suspendedSorter):keySorter(this.state.sorter.propertyName,dateOrStringSorter),this.setState({filteredUsers:this.state.filteredUsers.sort(propertySorter)})}async detailGroup(group){const locked=this.state.details.locked;this.setState({details:{group,user:null,locked}})}async detailUser(user){const locked=this.state.details.locked;this.setState({details:{group:null,user,locked}})}async detailNothing(){if(this.state.details.user||this.state.details.group){const locked=this.state.details.locked;this.setState({details:{group:null,user:null,locked}})}}async lockDetails(){const details=this.state.details,locked=this.state.details.locked;this.setState({details:Object.assign({},details,{locked:!locked})})}async updateDetails(){if(this.state.details.user||this.state.details.group){const hasUserDetails=this.state.details.user,locked=this.state.details.locked;if(hasUserDetails){const updatedUserDetails=this.users.find((user=>user.id===this.state.details.user.id));this.setState({details:{user:updatedUserDetails,group:null,locked}})}else{const updatedGroupDetails=this.groups.find((group=>group.id===this.state.details.group.id));this.setState({details:{group:updatedGroupDetails,user:null,locked}})}}}async scrollTo(user){this.setState({scrollTo:{user}})}async scrollNothing(){this.setState({scrollTo:{}})}async updateGroupToEdit(groupToEdit){this.setState({groupToEdit})}getTranslatedRoleName(id){return this.props.context.roles?this.props.t(this.props.context.roles.find((role=>role.id===id)).name):""}shouldDisplaySuspendedUsersFilter(){return this.props.context.siteSettings.canIUse("disableUser")&&"admin"===this.props.context.loggedInUser.role.name}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(UserWorkspaceContext.Provider,{value:this.state},this.props.children)}}UserWorkspaceContextProvider.displayName="UserWorkspaceContextProvider",UserWorkspaceContextProvider.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,children:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,location:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,match:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,history:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,actionFeedbackContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,loadingContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,rbacContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,t:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__.L)((0,react_router_dom__WEBPACK_IMPORTED_MODULE_12__.y)((0,_shared_context_Rbac_RbacContext__WEBPACK_IMPORTED_MODULE_9__.x6)((0,_DialogContext__WEBPACK_IMPORTED_MODULE_5__.z9)((0,_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__.ot)((0,_LoadingContext__WEBPACK_IMPORTED_MODULE_2__.$A)((0,react_i18next__WEBPACK_IMPORTED_MODULE_7__.CI)("common")(UserWorkspaceContextProvider)))))));function withUserWorkspace(WrappedComponent){return class WithUserWorkspace extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(UserWorkspaceContext.Consumer,null,(UserWorkspaceContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{userWorkspaceContext:UserWorkspaceContext,...this.props})))}}}const UserWorkspaceFilterTypes={NONE:"NONE",ALL:"ALL",GROUP:"FILTER-BY-GROUP",TEXT:"FILTER-BY-TEXT-SEARCH",RECENTLY_MODIFIED:"FILTER-BY-RECENTLY-MODIFIED",SUSPENDED_USER:"FILTER-BY-SUSPENDED-USER"};UserWorkspaceContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"initializeProperties",docblock:"Initialize class properties out of the state ( for performance purpose )",modifiers:[],params:[],returns:null,description:"Initialize class properties out of the state ( for performance purpose )"},{name:"isAccessAllowed",docblock:"Returns true if the current user allowed to access the user workspace\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the current user allowed to access the user workspace"},{name:"handleFilterChange",docblock:"Handles the user search filter change",modifiers:["async"],params:[{name:"previousFilter",optional:!1}],returns:null,description:"Handles the user search filter change"},{name:"handleUsersChange",docblock:"Handle the users changes",modifiers:["async"],params:[],returns:null,description:"Handle the users changes"},{name:"handleGroupsChange",docblock:"Handle the groups change",modifiers:["async"],params:[],returns:null,description:"Handle the groups change"},{name:"handleRouteChange",docblock:"Handle the route location change\n@param previousLocation Previous router location",modifiers:["async"],params:[{name:"previousLocation",description:"Previous router location",optional:!1}],returns:null,description:"Handle the route location change"},{name:"handleGroupRouteChange",docblock:"Handle the group view route change\n E.g. /groups/view/:selectedGroupId",modifiers:["async"],params:[],returns:null,description:"Handle the group view route change\n E.g. /groups/view/:selectedGroupId"},{name:"handleUserRouteChange",docblock:"Handle the user view route change",modifiers:["async"],params:[],returns:null,description:"Handle the user view route change"},{name:"handleSingleUserRouteChange",docblock:"Handle the user view route change with a user id\nE.g. /users/view/:userId",modifiers:["async"],params:[{name:"userId",optional:!1}],returns:null,description:"Handle the user view route change with a user id\nE.g. /users/view/:userId"},{name:"handleAllUserRouteChange",docblock:"Handle the user view route change without a user id in the path\nE.g. /password",modifiers:["async"],params:[],returns:null,description:"Handle the user view route change without a user id in the path\nE.g. /password"},{name:"handleDetailsLocked",docblock:"Handle the lock detail display",modifiers:["async"],params:[],returns:null,description:"Handle the lock detail display"},{name:"handleUnknownUser",docblock:"Handle an unknown user ( passe by route parameter user identifier )",modifiers:[],params:[],returns:null,description:"Handle an unknown user ( passe by route parameter user identifier )"},{name:"handleUnknownGroup",docblock:"Handle an unknown user ( passe by route parameter user identifier )",modifiers:[],params:[],returns:null,description:"Handle an unknown user ( passe by route parameter user identifier )"},{name:"handleUserScrolled",docblock:"Handle the scrolling of a user",modifiers:["async"],params:[],returns:null,description:"Handle the scrolling of a user"},{name:"handleSorterChange",docblock:"Handle the change of sorter ( on property or direction )\n@param propertyName The name of the property to sort on",modifiers:["async"],params:[{name:"propertyName",description:"The name of the property to sort on",optional:!1}],returns:null,description:"Handle the change of sorter ( on property or direction )"},{name:"handleUserSelected",docblock:"Handle the single user selection\n@param user The selected user",modifiers:["async"],params:[{name:"user",description:"The selected user",optional:!1}],returns:null,description:"Handle the single user selection"},{name:"handleGroupToEdit",docblock:"Handle the will to edit a group\n@param group",modifiers:["async"],params:[{name:"group",optional:!1}],returns:null,description:"Handle the will to edit a group"},{name:"handleUsersWaitedFor",docblock:"Handle the wait for the initial user to be loaded",modifiers:[],params:[],returns:null,description:"Handle the wait for the initial user to be loaded"},{name:"handleUsersLoaded",docblock:"Handle the intial loading of the users",modifiers:[],params:[],returns:null,description:"Handle the intial loading of the users"},{name:"isAttentionRequired",docblock:"Returns true if the given user requires attention from an admin.\n@param {User} user\n@returns {Boolean}",modifiers:[],params:[{name:"user",type:{name:"User"},optional:!1}],returns:{type:{name:"Boolean"}},description:"Returns true if the given user requires attention from an admin."},{name:"populate",docblock:"Populate the context with initial data such as users and groups",modifiers:[],params:[],returns:null,description:"Populate the context with initial data such as users and groups"},{name:"search",docblock:"Search for the users which matches the given filter and sort them\n@param filter",modifiers:["async"],params:[{name:"filter",optional:!1}],returns:null,description:"Search for the users which matches the given filter and sort them"},{name:"searchAll",docblock:"All filter ( no filter at all )\n@param filter The All filter",modifiers:["async"],params:[{name:"filter",description:"The All filter",optional:!1}],returns:null,description:"All filter ( no filter at all )"},{name:"searchByGroup",docblock:"Filter the users which belongs to the given group\n@param filter The group filter",modifiers:["async"],params:[{name:"filter",description:"The group filter",optional:!1}],returns:null,description:"Filter the users which belongs to the given group"},{name:"searchByText",docblock:"Filter the users which textual properties matched some user text words\n@param filter A textual filter",modifiers:["async"],params:[{name:"filter",description:"A textual filter",optional:!1}],returns:null,description:"Filter the users which textual properties matched some user text words"},{name:"searchByRecentlyModified",docblock:"Keep the most recently modified users ( current state: just sort everything with the most recent modified users )\n@param filter A recently modified filter",modifiers:["async"],params:[{name:"filter",description:"A recently modified filter",optional:!1}],returns:null,description:"Keep the most recently modified users ( current state: just sort everything with the most recent modified users )"},{name:"searchBySuspendedUsers",docblock:"Keep only the currently suspended users\n@param filter A suspended users filter",modifiers:["async"],params:[{name:"filter",description:"A suspended users filter",optional:!1}],returns:null,description:"Keep only the currently suspended users"},{name:"refreshSearchFilter",docblock:"Refresh the filter in case of its payload is outdated due to the updated list of users",modifiers:["async"],params:[],returns:null,description:"Refresh the filter in case of its payload is outdated due to the updated list of users"},{name:"select",docblock:"Select the given user as the single selected users if not already selected as single. Otherwise unselect it\n@param user The user to select",modifiers:["async"],params:[{name:"user",description:"The user to select",optional:!1}],returns:null,description:"Select the given user as the single selected users if not already selected as single. Otherwise unselect it"},{name:"selectFromRoute",docblock:"Selects the given user when one comes from the navigation route\n@param user An user",modifiers:["async"],params:[{name:"user",description:"An user",optional:!1}],returns:null,description:"Selects the given user when one comes from the navigation route"},{name:"unselectAll",docblock:"Unselect all the users",modifiers:["async"],params:[],returns:null,description:"Unselect all the users"},{name:"unselectUnknownUsers",docblock:"Remove from the selected users those which are not known users in regard of the current users list",modifiers:["async"],params:[],returns:null,description:"Remove from the selected users those which are not known users in regard of the current users list"},{name:"redirectAfterSelection",docblock:"Navigate to the appropriate url after some users selection operation",modifiers:[],params:[],returns:null,description:"Navigate to the appropriate url after some users selection operation"},{name:"updateSorter",docblock:"Update the users sorter given a property name\n@param propertyName",modifiers:["async"],params:[{name:"propertyName",optional:!1}],returns:null,description:"Update the users sorter given a property name"},{name:"resetSorter",docblock:"Reset the user sorter",modifiers:["async"],params:[],returns:null,description:"Reset the user sorter"},{name:"sort",docblock:"Sort the users given the current sorter",modifiers:["async"],params:[],returns:null,description:"Sort the users given the current sorter"},{name:"detailGroup",docblock:"Set the details focus on the given group\n@param group The group to focus on",modifiers:["async"],params:[{name:"group",description:"The group to focus on",optional:!1}],returns:null,description:"Set the details focus on the given group"},{name:"detailUser",docblock:"Set the details focus on the given user\n@param user The user to focus on",modifiers:["async"],params:[{name:"user",description:"The user to focus on",optional:!1}],returns:null,description:"Set the details focus on the given user"},{name:"detailNothing",docblock:"Remove the details on something",modifiers:["async"],params:[],returns:null,description:"Remove the details on something"},{name:"lockDetails",docblock:"Lock the group or user details display ( hide or show )\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Lock the group or user details display ( hide or show )"},{name:"updateDetails",docblock:"Update the current details with the current list of users or groups",modifiers:["async"],params:[],returns:null,description:"Update the current details with the current list of users or groups"},{name:"scrollTo",docblock:"Set the user to scroll to\n@param user A user",modifiers:["async"],params:[{name:"user",description:"A user",optional:!1}],returns:null,description:"Set the user to scroll to"},{name:"scrollNothing",docblock:"Unset the user to scroll to",modifiers:["async"],params:[],returns:null,description:"Unset the user to scroll to"},{name:"updateGroupToEdit",docblock:"Updates the group to edit\n@param groupToEdit The group to edit",modifiers:["async"],params:[{name:"groupToEdit",description:"The group to edit",optional:!1}],returns:null,description:"Updates the group to edit"},{name:"getTranslatedRoleName",docblock:"Get the translated role name by role id\n@param {string} id The role id\n@return {string}",modifiers:[],params:[{name:"id",description:"The role id",type:{name:"string"},optional:!1}],returns:{type:{name:"string"}},description:"Get the translated role name by role id"},{name:"shouldDisplaySuspendedUsersFilter",docblock:"Returns true if the 'Suspended user' filter should be displayed in the UI\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the 'Suspended user' filter should be displayed in the UI"}],displayName:"UserWorkspaceContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1},location:{description:"",type:{name:"object"},required:!1},match:{description:"",type:{name:"object"},required:!1},history:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},loadingContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},rbacContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/lib/Error/InputValidator.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function maxSizeValidation(value,maxLength,translate){const sizeExceeded=value.length>=maxLength,warningMessage=translate("this is the maximum size for this field, make sure your data was not truncated");return sizeExceeded?warningMessage:""}__webpack_require__.d(__webpack_exports__,{d:()=>maxSizeValidation})},"./src/shared/constants/inputs.const.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bh:()=>RESOURCE_PASSWORD_MAX_LENGTH,Dt:()=>RESOURCE_NAME_MAX_LENGTH,E1:()=>RESOURCE_USERNAME_MAX_LENGTH,G3:()=>RESOURCE_DESCRIPTION_MAX_LENGTH,UZ:()=>RESOURCE_TAG_MAX_LENGTH,VB:()=>RESOURCE_TOTP_KEY_MAX_LENGTH,Z_:()=>USER_INPUT_MAX_LENGTH,kW:()=>RESOURCE_URI_MAX_LENGTH,nX:()=>RESOURCE_GROUP_NAME_MAX_LENGTH,yN:()=>RESOURCE_FOLDER_NAME_MAX_LENGTH});const USER_INPUT_MAX_LENGTH=128,RESOURCE_GROUP_NAME_MAX_LENGTH=50,RESOURCE_NAME_MAX_LENGTH=255,RESOURCE_USERNAME_MAX_LENGTH=255,RESOURCE_FOLDER_NAME_MAX_LENGTH=256,RESOURCE_TAG_MAX_LENGTH=128,RESOURCE_PASSWORD_MAX_LENGTH=4096,RESOURCE_DESCRIPTION_MAX_LENGTH=1e4,RESOURCE_URI_MAX_LENGTH=1024,RESOURCE_TOTP_KEY_MAX_LENGTH=1024}}]);