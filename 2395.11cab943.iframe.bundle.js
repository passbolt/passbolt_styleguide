/*! For license information please see 2395.11cab943.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[2395],{"./src/shared/models/entity/abstract/entityCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js"),_entityValidationError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js");class EntityCollection{constructor(dtos=[],options={}){const clone=options?.clone??!0;this._items=[],clone&&(dtos=JSON.parse(JSON.stringify(dtos))),this._props=dtos}toDto(){return JSON.parse(JSON.stringify(this._items))}toJSON(){return this.toDto()}get items(){return this._items}get length(){return this._items.length}[Symbol.iterator](){let i=0;return{next:()=>i<this._items.length?{value:this._items[i++],done:!1}:{done:!0}}}getAll(propName,search){if("string"!=typeof propName)throw new TypeError("EntityCollection excludeAll expects propName to be string.");if("string"!=typeof search)throw new TypeError("EntityCollection excludeAll expects search to be string.");return this._items.filter((item=>Object.prototype.hasOwnProperty.call(item._props,propName)&&item._props[propName]===search))}getFirst(propName,search){if("string"!=typeof propName||"string"!=typeof search)throw new TypeError("EntityCollection getFirst by expect propName and search to be strings");const found=this.getAll(propName,search);if(found&&found.length)return found[0]}extract(propName){if("string"!=typeof propName)throw new TypeError("EntityCollection extract expects propName to be a string.");return this._items.reduce(((accumulator,item)=>(void 0!==item._props[propName]&&accumulator.push(item._props[propName]),accumulator)),[])}push(item){return this._items.push(item),this._items.length}unshift(item){return this._items.unshift(item),this._items.length}filterByPropertyValueIn(propName,needles,excludeUndefined=!0){if("string"!=typeof propName)throw new TypeError("EntityCollection filterByPropertyValueIn expects propName to be a string.");if(!Array.isArray(needles))throw new TypeError("EntityCollection filterByPropertyValueIn expects needles to be an array.");this.filterByCallback((item=>{const isPropertyDefined=Object.prototype.hasOwnProperty.call(item._props,propName);return!(excludeUndefined&&!isPropertyDefined||isPropertyDefined&&!needles.includes(item._props[propName]))}))}filterByCallback(callback){if("function"!=typeof callback)throw new TypeError("EntityCollection filterByCallback expects callback to be a function.");for(let currentIndex=this._items.length-1;currentIndex>=0;currentIndex--)callback(this._items[currentIndex])||this._items.splice(currentIndex,1)}assertUniqueByProperty(propName,message){const ruleId=`unique_${propName}`,propValues=this.extract(propName),uniqueElements=new Set;message=message||`The collection should only contain items with unique values for the property: ${propName}.`,propValues.forEach(((propValue,index)=>{if(uniqueElements.add(propValue),index!==uniqueElements.size-1)throw new _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__.A(index,ruleId,message)}))}assertNotExist(propName,propValue,options={}){if(void 0===propValue)return;let haystackSet=options?.haystackSet;if(!haystackSet){const propValues=this.extract(propName);haystackSet=new Set(propValues)}if(haystackSet.has(propValue)){const error=new _entityValidationError__WEBPACK_IMPORTED_MODULE_1__.A,message=options?.message||`The collection already includes an element that has a property (${propName}) with an identical value.`;throw error.addError(propName,"unique",message),error}}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollection},"./src/shared/models/entity/abstract/entityCollectionError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class EntityCollectionError extends Error{constructor(position,rule,message){if(super(message=message||"Entity collection error."),"number"!=typeof position)throw new TypeError("EntityCollectionError requires a valid position");if(!rule||"string"!=typeof rule)throw new TypeError("EntityCollectionError requires a valid rule");if(!message||"string"!=typeof message)throw new TypeError("EntityCollectionError requires a valid message");this.position=position,this.rule=rule}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollectionError},"./src/shared/models/entity/abstract/entityV2Collection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityValidationError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),_entityCollection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityCollection.js"),_collectionValidationError__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/collectionValidationError.js"),_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js"),_entitySchema__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class EntityV2Collection extends _entityCollection__WEBPACK_IMPORTED_MODULE_1__.A{static _cachedSchema={};get entityClass(){throw new Error("The collection class should declare the entity class that is handled.")}constructor(dtos=[],options={}){super(dtos,options);(options?.validate??!0)&&this.validateSchema(),this.pushMany(this._props,{...options,clone:!1}),this._props=null}validateSchema(){this._props=_entitySchema__WEBPACK_IMPORTED_MODULE_4__.A.validate(this.constructor.name,this._props,this.cachedSchema)}get cachedSchema(){return this.constructor._cachedSchema[this.constructor.name]||(this.constructor._cachedSchema[this.constructor.name]=this.constructor.getSchema()),this.constructor._cachedSchema[this.constructor.name]}static getSchema(){throw new Error("The collection class should declare its schema.")}buildOrCloneEntity(data,entityOptions={}){if(!data||"object"!=typeof data)throw new TypeError(`${this.entityClass.name}::buildOrCloneEntity expects "data" to be an object.`);return data instanceof this.entityClass&&(data=data.toDto(this.entityClass?.ALL_CONTAIN_OPTIONS)),new this.entityClass(data,entityOptions)}validateBuildRules(item,options={}){}push(data,entityOptions={},options={}){const entity=this.buildOrCloneEntity(data,entityOptions);this.validateBuildRules(entity,options?.validateBuildRules),this._items.push(entity),options?.onItemPushed?.(entity)}pushOrReplace(data,entityOptions={},options={}){const replacePropertyName=options?.replacePropertyName||"id",foundIndex=this.items.findIndex((entity=>entity[replacePropertyName]===data[replacePropertyName]));if(-1!==foundIndex){this.items.splice(foundIndex,1);const entity=this.buildOrCloneEntity(data,entityOptions);this.validateBuildRules(entity,options?.validateBuildRules),this.items.splice(foundIndex,0,entity)}else this.push(data,entityOptions,options)}pushMany(data,entityOptions={},options={}){if(!Array.isArray(data))throw new TypeError(`${this.constructor.name} pushMany expects "data" to be an array.`);data.forEach(((itemDto,index)=>{try{this.push(itemDto,entityOptions,options)}catch(error){this.handlePushItemError(index,error,entityOptions)}}))}handlePushItemError(index,error,entityOptions){if(!(error instanceof _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A||error instanceof _collectionValidationError__WEBPACK_IMPORTED_MODULE_2__.A||error instanceof _entityCollectionError__WEBPACK_IMPORTED_MODULE_3__.A))throw error;if(!entityOptions?.ignoreInvalidEntity){const collectionValidationError=new _collectionValidationError__WEBPACK_IMPORTED_MODULE_2__.A;throw collectionValidationError.addItemValidationError(index,error),collectionValidationError}console.debug(`${this.entityClass.name}::pushMany ignore item (${index}) due to validation error ${JSON.stringify(error?.details)}`)}}const __WEBPACK_DEFAULT_EXPORT__=EntityV2Collection}}]);