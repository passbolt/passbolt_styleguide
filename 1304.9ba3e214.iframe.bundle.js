/*! For license information please see 1304.9ba3e214.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1304],{"./src/shared/models/entity/abstract/collectionValidationError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityValidationError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js");class CollectionValidationError extends Error{constructor(message="Collection validation error."){super(message),this.name="CollectionValidationError",this.errors=[]}addItemValidationError(position,validationError){if(!Number.isInteger(position))throw new TypeError('CollectionValidationError::addEntityValidationError expects "position" to be an integer.');if(!(validationError instanceof _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A||validationError instanceof CollectionValidationError))throw new TypeError('CollectionValidationError::addEntityValidationError expects "entityValidationError" to be an instance of EntityValidationError or CollectionValidationError.');this.errors[position]=validationError}addCollectionValidationError(rule,error){if("string"!=typeof rule)throw new TypeError('CollectionValidationError::addCollectionValidationError expects "rule" to be a string.');if("string"!=typeof error)throw new TypeError('CollectionValidationError::addCollectionValidationError expects "error" to be a string.');this.errors[rule]=error}get details(){const details={};for(const key in this.errors)this.errors[key]instanceof _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A||this.errors[key]instanceof CollectionValidationError?details[key]=this.errors[key].details:details[key]=this.errors[key];return details}}const __WEBPACK_DEFAULT_EXPORT__=CollectionValidationError},"./src/shared/models/entity/abstract/entitySchema.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityValidationError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),validator__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/validator/index.js"),validator__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_2__),_collectionValidationError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/collectionValidationError.js");class EntitySchema{static validateSchema(name,schema){if(!schema)throw new TypeError(`Could not validate entity ${name}. No schema for entity ${name}.`);if(!schema.type)throw new TypeError(`Could not validate entity ${name}. Type missing.`);if("array"!==schema.type){if("object"===schema.type){if(!schema.required||!Array.isArray(schema.required))throw new TypeError(`Could not validate entity ${name}. Schema error: no required properties.`);if(!schema.properties||!Object.keys(schema).length)throw new TypeError(`Could not validate entity ${name}. Schema error: no properties.`);const schemaProps=schema.properties;for(const propName in schemaProps){if(!Object.prototype.hasOwnProperty.call(schemaProps,propName)||!schemaProps[propName].type&&!schemaProps[propName].anyOf)throw TypeError(`Invalid schema. Type missing for ${propName}...`);if(schemaProps[propName].anyOf&&(!Array.isArray(schemaProps[propName].anyOf)||!schemaProps[propName].anyOf.length))throw new TypeError(`Invalid schema, prop ${propName} anyOf should be an array`)}}}else if(!schema.items)throw new TypeError(`Could not validate entity ${name}. Schema error: missing item definition.`)}static validate(name,dto,schema){if(!name||!dto||!schema)throw new TypeError(`Could not validate entity ${name}. No data provided.`);switch(schema.type){case"object":return EntitySchema.validateObject(name,dto,schema);case"array":return EntitySchema.validateArray(name,dto,schema);default:throw new TypeError(`Could not validate entity ${name}. Unsupported type.`)}}static validateArray(name,dto,schema){let validationError;const parsedItems=EntitySchema.validateProp("items",dto,schema);if("number"==typeof schema.minItems&&(EntitySchema.isGreaterThanOrEqual(dto.length,schema.minItems)||(validationError=EntitySchema.handleCollectionValidationError("minItems",`The items array should contain at least ${schema.minItems} item(s).`,validationError))),validationError)throw validationError;return parsedItems}static validateObject(name,dto,schema){const requiredProps=schema.required,schemaProps=schema.properties,result={};let validationError;for(const propName in schemaProps)if(Object.prototype.hasOwnProperty.call(schemaProps,propName))if(null!==dto?.[propName]||!0!==schemaProps[propName]?.nullable){if(requiredProps.includes(propName)){if(!Object.prototype.hasOwnProperty.call(dto,propName)){validationError=EntitySchema.getOrInitEntityValidationError(name,validationError),validationError.addError(propName,"required",`The ${propName} is required.`);continue}}else if(!Object.prototype.hasOwnProperty.call(dto,propName))continue;try{result[propName]=EntitySchema.validateProp(propName,dto[propName],schemaProps[propName])}catch(error){if(!(error instanceof _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A))throw error;validationError=EntitySchema.getOrInitEntityValidationError(name,validationError),validationError.details[propName]=error.details[propName]}}else result[propName]=null;if(validationError)throw validationError;return result}static getOrInitEntityValidationError(name,validationError){return validationError||new _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A(`Could not validate entity ${name}.`)}static validateProp(propName,prop,propSchema){if(propSchema.anyOf)return EntitySchema.validateAnyOf(propName,prop,propSchema.anyOf),prop;if(!0===propSchema.nullable&&null===prop)return prop;if(EntitySchema.validatePropType(propName,prop,propSchema),propSchema.enum)return EntitySchema.validatePropEnum(propName,prop,propSchema),prop;switch(propSchema.type){case"string":EntitySchema.validatePropTypeString(propName,prop,propSchema);break;case"integer":case"number":EntitySchema.validatePropTypeNumber(propName,prop,propSchema);break;case"array":EntitySchema.validatePropTypeArray(propName,prop,propSchema);break;case"object":case"boolean":case"blob":case"null":break;case"x-custom":EntitySchema.validatePropCustom(propName,prop,propSchema);break;default:throw new TypeError(`Could not validate property ${propName}. Unsupported prop type ${propSchema.type}`)}return prop}static validatePropType(propName,prop,propSchema){if(!EntitySchema.isValidPropType(prop,propSchema.type))throw EntitySchema.handlePropertyValidationError(propName,"type",`The ${propName} is not a valid ${propSchema.type}.`)}static validatePropCustom(propName,prop,propSchema){try{propSchema.validationCallback(prop)}catch(e){throw EntitySchema.handlePropertyValidationError(propName,"custom",`The ${propName} is not valid: ${e.message}`)}}static validatePropTypeString(propName,prop,propSchema){let validationError;if(propSchema.format&&(EntitySchema.isValidStringFormat(prop,propSchema.format)||(validationError=EntitySchema.handlePropertyValidationError(propName,"format",`The ${propName} is not a valid ${propSchema.format}.`,validationError))),propSchema.notEmpty&&(EntitySchema.isValidStringNotEmpty(prop)||(validationError=EntitySchema.handlePropertyValidationError(propName,"notEmpty",`The ${propName} should be not empty`,validationError))),propSchema.length&&(EntitySchema.isValidStringLength(prop,propSchema.length,propSchema.length)||(validationError=EntitySchema.handlePropertyValidationError(propName,"length",`The ${propName} should be ${propSchema.length} character in length.`,validationError))),propSchema.minLength&&(EntitySchema.isValidStringLength(prop,propSchema.minLength)||(validationError=EntitySchema.handlePropertyValidationError(propName,"minLength",`The ${propName} should be ${propSchema.minLength} character in length minimum.`,validationError))),propSchema.maxLength&&(EntitySchema.isValidStringLength(prop,0,propSchema.maxLength)||(validationError=EntitySchema.handlePropertyValidationError(propName,"maxLength",`The ${propName} should be ${propSchema.maxLength} character in length maximum.`,validationError))),propSchema.pattern&&(validator__WEBPACK_IMPORTED_MODULE_2___default().matches(prop,propSchema.pattern)||(validationError=EntitySchema.handlePropertyValidationError(propName,"pattern",`The ${propName} is not valid.`,validationError))),propSchema.custom&&(propSchema.custom(prop)||(validationError=EntitySchema.handlePropertyValidationError(propName,"custom",`The ${propName} is not valid.`,validationError))),validationError)throw validationError}static handlePropertyValidationError(propName,rule,message,validationError=null){return(validationError=validationError||new _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A(`Could not validate property ${propName}.`)).addError(propName,rule,message),validationError}static handleCollectionValidationError(rule,message,validationError=null){return(validationError=validationError||new _collectionValidationError__WEBPACK_IMPORTED_MODULE_1__.A("Could not validate collection.")).addCollectionValidationError(rule,message),validationError}static validatePropTypeNumber(propName,prop,propSchema){let validationError;if("number"==typeof propSchema.minimum&&(EntitySchema.isGreaterThanOrEqual(prop,propSchema.minimum)||(validationError=EntitySchema.handlePropertyValidationError(propName,"minimum",`The ${propName} should be greater or equal to ${propSchema.minimum}.`,validationError))),"number"==typeof propSchema.maximum&&(EntitySchema.isLesserThanOrEqual(prop,propSchema.maximum)||(validationError=EntitySchema.handlePropertyValidationError(propName,"maximum",`The ${propName} should be lesser or equal to ${propSchema.maximum}.`,validationError))),validationError)throw validationError}static validatePropTypeArray(propName,prop,propSchema){let validationError;if(propSchema?.items&&"object"==typeof propSchema.items){for(let index=0;index<prop.length;index++){const propItemName=`${propName}.${index}`;try{this.validateProp(propItemName,prop[index],propSchema.items)}catch(error){if(!(error instanceof _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A))throw error;{validationError=EntitySchema.getOrInitEntityValidationError(propName,validationError);const errorDetails=error.details[propItemName];validationError.details[propName]={...validationError.details[propName],[index]:errorDetails}}}}if(validationError)throw validationError}}static validatePropEnum(propName,prop,propSchema){if(!EntitySchema.isPropInEnum(prop,propSchema.enum)){const validationError=new _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A(`Could not validate property ${propName}.`);throw validationError.addError(propName,"enum",`The ${propName} value is not included in the supported list.`),validationError}}static validateAnyOf(propName,prop,anyOf){for(let i=0;i<anyOf.length;i++)try{return void EntitySchema.validateProp(propName,prop,anyOf[i])}catch(error){}const validationError=new _entityValidationError__WEBPACK_IMPORTED_MODULE_0__.A(`Could not validate property ${propName}.`);throw validationError.addError(propName,"type",`The ${propName} does not match any of the supported types.`),validationError}static isValidPropType(prop,type){if(Array.isArray(type))throw new TypeError("EntitySchema isValidPropType multiple types are not supported.");if("string"!=typeof type)throw new TypeError("EntitySchema isValidPropType type is invalid.");switch(type){case"null":return null===prop;case"boolean":return"boolean"==typeof prop;case"string":return"string"==typeof prop;case"integer":return Number.isInteger(prop);case"number":return"number"==typeof prop;case"object":return"object"==typeof prop;case"array":return Array.isArray(prop);case"blob":return prop instanceof Blob;case"x-custom":return!0;default:throw new TypeError("EntitySchema validation type not supported.")}}static isValidStringFormat(prop,format){if("string"!=typeof format)throw new TypeError("EntitySchema validPropFormat format is invalid.");switch(format){case"uuid":return validator__WEBPACK_IMPORTED_MODULE_2___default().isUUID(prop);case"email":case"idn-email":return validator__WEBPACK_IMPORTED_MODULE_2___default().isEmail(prop);case"date-time":return validator__WEBPACK_IMPORTED_MODULE_2___default().isISO8601(prop);case"x-url":return validator__WEBPACK_IMPORTED_MODULE_2___default().isURL(prop,{require_tld:!1});case"x-hex-color":return validator__WEBPACK_IMPORTED_MODULE_2___default().isHexColor(prop);case"x-base64":return validator__WEBPACK_IMPORTED_MODULE_2___default().isBase64(prop);default:throw new TypeError(`EntitySchema string validation format ${format} is not supported.`)}}static isValidStringNotEmpty(str){return!validator__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(str,{ignore_whitespace:!0})}static isValidStringLength(str,min,max){return min=min||0,validator__WEBPACK_IMPORTED_MODULE_2___default().isLength(str,min,max)}static isPropInEnum(prop,enumList){if(!enumList||!Array.isArray(enumList)||!enumList.length)throw new TypeError("EntitySchema enum schema cannot be empty.");return enumList.includes(prop)}static isGreaterThanOrEqual(prop,gte){return prop>=gte}static isLesserThanOrEqual(prop,lte){return prop<=lte}}const __WEBPACK_DEFAULT_EXPORT__=EntitySchema},"./src/shared/models/entity/abstract/entityValidationError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class EntityValidationError extends Error{constructor(message="Entity validation error."){super(message),this.name="EntityValidationError",this.details={}}addError(property,rule,message){if("string"!=typeof property)throw new TypeError("EntityValidationError addError property should be a string.");if("string"!=typeof rule)throw new TypeError("EntityValidationError addError rule should be a string.");if("string"!=typeof message)throw new TypeError("EntityValidationError addError message should be a string.");Object.prototype.hasOwnProperty.call(this.details,property)||(this.details[property]={}),this.details[property][rule]=message}addAssociationError(associationName,error){if("string"!=typeof associationName)throw new TypeError("EntityValidationError addAssociationError associationName should be a string.");if(!(error instanceof EntityValidationError))throw new TypeError("EntityValidationError addAssociationError errorDetails should be an object.");this.details[associationName]=error}getError(property,rule){if(!this.hasError(property,rule))return null;const errors=this.details[property];return rule?errors[rule]:errors}hasError(property,rule){if("string"!=typeof property)throw new TypeError("EntityValidationError hasError property should be a string.");const hasError=this.details&&Object.prototype.hasOwnProperty.call(this.details,property);if(!hasError)return!1;if(!rule)return hasError;if("string"!=typeof rule)throw new TypeError("EntityValidationError hasError rule should be a string.");return Object.prototype.hasOwnProperty.call(this.details[property],rule)}hasErrors(){return Object.keys(this.details).length>0}getFirstRuleErrorByField(property){if(!this.hasError(property))return null;const errors=this.details[property];return errors[Object.keys(errors)[0]]}}const __WEBPACK_DEFAULT_EXPORT__=EntityValidationError}}]);