/*! For license information please see react-extension-components-Administration-DisplayRbacAdministration-DisplayRbacAdministration-test-stories.790f5b5b.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[113],{"./src/react-extension/components/Administration/DisplayRbacAdministration/DisplayRbacAdministration.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DisplayRbacAdministration_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),rbacsCollection=__webpack_require__("./src/shared/models/entity/rbac/rbacsCollection.js"),apiClient=__webpack_require__("./src/shared/lib/apiClient/apiClient.js"),validator=__webpack_require__("./node_modules/validator/index.js"),validator_default=__webpack_require__.n(validator);const abstractService=class AbstractService{constructor(apiClientOptions,resourceName){apiClientOptions.setResourceName(resourceName),this.apiClient=new apiClient.O(apiClientOptions)}formatContainOptions(contain,supportedOptions){const result={};for(const item in contain){if("string"!=typeof item){const details=JSON.stringify(contain);throw new TypeError(`Invalid contain ${details}, items should be a string.`)}supportedOptions.includes(item)&&(result[`contain[${item}]`]=contain[item]?"1":"0")}return result}formatFilterOptions(filter,supportedOptions){const result={};for(const item in filter)if(Object.prototype.hasOwnProperty.call(filter,item)&&supportedOptions.includes(item))if("boolean"==typeof filter[item])result[`filter[${item}]`]=filter[item]?"1":"0";else if("string"==typeof filter[item])result[`filter[${item}]`]=filter[item];else{if(!Array.isArray(filter[item]))throw new TypeError("Service error. Filter option should be an array or a string.");result[`filter[${item}][]`]=filter[item]}return result}formatOrderOptions(orders,supportedOrders){const result={};for(const order in orders)supportedOrders.includes(order)&&(result["order[]"]=order);return result}assertValidId(id){if(!id||"string"!=typeof id||!validator_default().isUUID(id))throw new TypeError(`Service error. The id '${id}' is not a valid uuid.`)}assertNonEmptyData(data){if(!data)throw new TypeError("Service error. Data cannot be empty.")}};class RbacService extends abstractService{constructor(apiClientOptions){super(apiClientOptions,RbacService.RESOURCE_NAME)}static get RESOURCE_NAME(){return"/rbacs"}static getSupportedContainOptions(){return["action","ui_action"]}async findAll(contains){const options=contains?this.formatContainOptions(contains,RbacService.getSupportedContainOptions()):null;return(await this.apiClient.findAll(options)).body}async updateAll(rbacsUpdatedDto,contains={}){const options=contains?this.formatContainOptions(contains,RbacService.getSupportedContainOptions()):null;return(await this.apiClient.updateAll(rbacsUpdatedDto,options)).body}}const rbacService=RbacService;class RoleService extends abstractService{constructor(apiClientOptions){super(apiClientOptions,RoleService.RESOURCE_NAME)}static get RESOURCE_NAME(){return"roles"}async findAll(){const response=await this.apiClient.findAll();return response.body&&response.body.length?response.body:[]}}const roleService=RoleService;var rbacEntity=__webpack_require__("./src/shared/models/entity/rbac/rbacEntity.js");const AdminRbacContext=react.createContext({processing:!1,rbacs:null,rbacsUpdated:{},setRbacs:()=>{},setRbacsUpdated:()=>{},save:()=>{},isProcessing:()=>{},hasSettingsChanges:()=>{},clearContext:()=>{}});class AdminRbacContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.rbacService=new rbacService(apiClientOptions),this.roleService=new roleService(apiClientOptions)}get defaultState(){return{processing:!1,rbacs:null,rbacsUpdated:new rbacsCollection.A([]),setRbacs:this.setRbacs.bind(this),setRbacsUpdated:this.setRbacsUpdated.bind(this),isProcessing:this.isProcessing.bind(this),hasSettingsChanges:this.hasSettingsChanges.bind(this),save:this.save.bind(this),clearContext:this.clearContext.bind(this)}}async setRbacs(rbacs){this.setState({rbacs})}async setRbacsUpdated(rbacsUpdated){this.setState({rbacsUpdated})}isProcessing(){return this.state.processing}setProcessing(processing){this.setState({processing})}hasSettingsChanges(){return this.state.rbacsUpdated.rbacs.length>0}clearContext(){const{rbacs,rbacsUpdated,processing}=this.defaultState;this.setState({rbacs,rbacsUpdated,processing})}async save(){this.setProcessing(!0);try{const rbacsUpdatedDto=this.state.rbacsUpdated.toBulkUpdateDto(),rbacsUpdatedResultDto=await this.rbacService.updateAll(rbacsUpdatedDto,{ui_action:!0,action:!0}),rbacs=this.state.rbacs;rbacsUpdatedResultDto.forEach((rbacUpdatedResultDto=>rbacs.addOrReplace(new rbacEntity.A(rbacUpdatedResultDto))));const rbacsUpdated=new rbacsCollection.A([]);this.setState({rbacs,rbacsUpdated})}finally{this.setProcessing(!1)}}render(){return react.createElement(AdminRbacContext.Provider,{value:this.state},this.props.children)}}AdminRbacContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any};(0,AppContext.L)(AdminRbacContextProvider);function withAdminRbac(WrappedComponent){return class WithAdminRbac extends react.Component{render(){return react.createElement(AdminRbacContext.Consumer,null,(adminRbacContext=>react.createElement(WrappedComponent,{adminRbacContext,...this.props})))}}}AdminRbacContextProvider.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"setRbacs",docblock:"Set the rbacs\n@param {RbacsCollection} rbacs The rbacs collection to set.\n@return {void}",modifiers:["async"],params:[{name:"rbacs",description:"The rbacs collection to set.",type:{name:"RbacsCollection"},optional:!1}],returns:{type:{name:"void"}},description:"Set the rbacs"},{name:"setRbacsUpdated",docblock:"Set the updated rbacs\n@param {RbacsCollection} rbacsUpdated The updated rbacs collection to set.\n@return {void}",modifiers:["async"],params:[{name:"rbacsUpdated",description:"The updated rbacs collection to set.",type:{name:"RbacsCollection"},optional:!1}],returns:{type:{name:"void"}},description:"Set the updated rbacs"},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"setProcessing",docblock:"Handle processing change.\n@params {Boolean} processing value\n@returns {void}",modifiers:[],params:[{name:"processing",optional:!1}],returns:{type:{name:"void"}},description:"Handle processing change."},{name:"hasSettingsChanges",docblock:"Check if there are changes to apply\n@returns {Boolean}",modifiers:[],params:[],returns:{type:{name:"Boolean"}},description:"Check if there are changes to apply"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."},{name:"save",docblock:"Whenever the save has been requested",modifiers:["async"],params:[],returns:null,description:"Whenever the save has been requested"}],displayName:"AdminRbacContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1}}};class DisplayAdministrationRbacActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this)}async handleSaveClick(){try{await this.props.adminRbacContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}}isSaveEnabled(){return!this.props.adminRbacContext.isProcessing()&&this.props.adminRbacContext.hasSettingsChanges()}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The role-based access control settings were updated."))}async handleSaveError(error){console.error(error),await this.props.actionFeedbackContext.displayError(error.message)}render(){return react.createElement("div",{className:"col2_3 actions-wrapper"},react.createElement("div",{className:"actions"},react.createElement("ul",null,react.createElement("li",null,react.createElement("button",{type:"button",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement(Icon.A,{name:"save"}),react.createElement("span",null,react.createElement(es.x6,null,"Save settings")))))))}}DisplayAdministrationRbacActions.propTypes={context:prop_types_default().object,adminRbacContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationRbacsActions_DisplayAdministrationRbacActions=withAdminRbac((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationRbacActions)));DisplayAdministrationRbacActions.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."}],displayName:"DisplayAdministrationRbacActions",props:{context:{description:"",type:{name:"object"},required:!1},adminRbacContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class DisplayRbacSection extends react.Component{render(){return react.createElement(react.Fragment,null,react.createElement("div",{className:`flex-container inner level-${this.props.level}`},react.createElement("div",{className:"flex-item first border-right"},react.createElement("span",null,react.createElement(Icon.A,{name:"caret-down",baseline:!0}),"  ",this.props.label)),react.createElement("div",{className:"flex-item border-right"}," "),react.createElement("div",{className:"flex-item"}," ")),this.props.children)}}DisplayRbacSection.propTypes={label:prop_types_default().string,level:prop_types_default().number,t:prop_types_default().func,children:prop_types_default().any};const DisplayRbacAdministration_DisplayRbacSection=(0,es.CI)("common")(DisplayRbacSection);DisplayRbacSection.__docgenInfo={description:"",methods:[],displayName:"DisplayRbacSection",props:{label:{description:"",type:{name:"string"},required:!1},level:{description:"",type:{name:"number"},required:!1},t:{description:"",type:{name:"func"},required:!1},children:{description:"",type:{name:"any"},required:!1}}};var Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),controlFunctionEnumeration=__webpack_require__("./src/shared/services/rbacs/controlFunctionEnumeration.js"),uiActionEnumeration=__webpack_require__("./src/shared/services/rbacs/uiActionEnumeration.js");class DisplayRbacItem extends react.Component{constructor(props){super(props),this.handleInputChange=this.handleInputChange.bind(this)}handleInputChange(event,role){this.props.onChange(role,this.props.actionName,event.target.value)}get allowedCtlFunctions(){const controls=[{value:controlFunctionEnumeration.HK.ALLOW,label:this.props.t("Allow")},{value:controlFunctionEnumeration.HK.DENY,label:this.props.t("Deny")}];return this.props.actionName===uiActionEnumeration.e.USERS_VIEW_WORKSPACE&&controls.push({value:controlFunctionEnumeration.HK.ALLOW_IF_GROUP_MANAGER_IN_ONE_GROUP,label:this.props.t("Allow group manager")}),controls}get rowClassName(){return this.props.actionName.toLowerCase().replaceAll(/[^\w]/gi,"-")}getCtlFunctionForRole(role){const rbac=this.props.rbacsUpdated?.findRbacByRoleAndUiActionName(role,this.props.actionName)||this.props.rbacs?.findRbacByRoleAndUiActionName(role,this.props.actionName);return rbac?.controlFunction||null}hasChanged(){return!!this.props.rbacsUpdated.findRbacByActionName(this.props.actionName)}render(){let customizableRoles=[];return this.props.roles&&(customizableRoles=this.props.roles.items.filter((role=>"user"===role.name))),react.createElement(react.Fragment,null,react.createElement("div",{className:`rbac-row ${this.rowClassName} flex-container inner level-${this.props.level} ${this.hasChanged()?"highlighted":""}`},react.createElement("div",{className:"flex-item first border-right"},react.createElement("span",null,this.props.label)),react.createElement("div",{className:"flex-item border-right"},react.createElement(Select.A,{className:"medium admin",items:this.allowedCtlFunctions,value:controlFunctionEnumeration.HK.ALLOW,disabled:!0})),customizableRoles.map((role=>react.createElement("div",{key:`${this.props.actionName}-${role.id}`,className:"flex-item input"},react.createElement(Select.A,{className:`${role.name}`,items:this.allowedCtlFunctions,value:this.getCtlFunctionForRole(role),disabled:!(this.props.rbacs?.length>0&&this.getCtlFunctionForRole(role)),onChange:event=>this.handleInputChange(event,role)}),!this.getCtlFunctionForRole(role)&&react.createElement("div",{className:"warning-message"},"There is no valid setting found for this action."))))))}}DisplayRbacItem.propTypes={label:prop_types_default().string.isRequired,level:prop_types_default().number.isRequired,actionName:prop_types_default().string.isRequired,rbacs:prop_types_default().object,rbacsUpdated:prop_types_default().object,roles:prop_types_default().object.isRequired,onChange:prop_types_default().func.isRequired,t:prop_types_default().func};const DisplayRbacAdministration_DisplayRbacItem=(0,es.CI)("common")(DisplayRbacItem);DisplayRbacItem.__docgenInfo={description:"",methods:[{name:"handleInputChange",docblock:"Handle select change.\n@param {Event} event The html event occurring on the select component\n@param {RoleEntity} role The role the select change for",modifiers:[],params:[{name:"event",description:"The html event occurring on the select component",type:{name:"Event"},optional:!1},{name:"role",description:"The role the select change for",type:{name:"RoleEntity"},optional:!1}],returns:null,description:"Handle select change."},{name:"allowedCtlFunctions",docblock:"Return the list of allowed control functions.\n@returns {[{label: string, value: string},{label: string, value: string}]}",modifiers:["get"],params:[],returns:{type:{name:"tuple",elements:[]}},description:"Return the list of allowed control functions."},{name:"rowClassName",docblock:"Get the row component class name.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the row component class name."},{name:"getCtlFunctionForRole",docblock:"Get the defined control function for the given role\n@param {RoleEntity} role The role to get the control function for\n@return {string|null}",modifiers:[],params:[{name:"role",description:"The role to get the control function for",type:{name:"RoleEntity"},optional:!1}],returns:{type:{name:"union",elements:[{name:"string"}]}},description:"Get the defined control function for the given role"},{name:"hasChanged",docblock:"Check if the control has changed\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the control has changed"}],displayName:"DisplayRbacItem",props:{label:{description:"",type:{name:"string"},required:!0},level:{description:"",type:{name:"number"},required:!0},actionName:{description:"",type:{name:"string"},required:!0},rbacs:{description:"",type:{name:"object"},required:!1},rbacsUpdated:{description:"",type:{name:"object"},required:!1},roles:{description:"",type:{name:"object"},required:!0},onChange:{description:"",type:{name:"func"},required:!0},t:{description:"",type:{name:"func"},required:!1}}};var role_roleEntity=__webpack_require__("./src/shared/models/entity/role/roleEntity.js"),entityCollection=__webpack_require__("./src/shared/models/entity/abstract/entityCollection.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),entityCollectionError=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js");class RolesCollection extends entityCollection.A{constructor(rolesCollectionDto,options={}){super(entitySchema.A.validate(RolesCollection.ENTITY_NAME,rolesCollectionDto,RolesCollection.getSchema()),options),this._props.forEach((role=>{this.push(new role_roleEntity.A(role,{clone:!1}))})),this._props=null}static getSchema(){return{type:"array",items:role_roleEntity.A.getSchema()}}get roles(){return this._items}get ids(){return this._items.map((r=>r.id))}assertUniqueId(role){if(!role.id)return;const length=this.roles.length;let i=0;for(;i<length;i++){const existingRole=this.roles[i];if(existingRole.id&&existingRole.id===role.id)throw new entityCollectionError.A(i,RolesCollection.RULE_UNIQUE_ID,`Role id ${role.id} already exists.`)}}push(role){if(!role||"object"!=typeof role)throw new TypeError("RolesCollection push parameter should be an object.");role instanceof role_roleEntity.A&&(role=role.toDto());const roleEntity=new role_roleEntity.A(role);this.assertUniqueId(roleEntity),super.push(roleEntity)}static get ENTITY_NAME(){return"Roles"}static get RULE_UNIQUE_ID(){return"unique_id"}}const rolesCollection=RolesCollection;class DisplayRbacAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{roles:null}}bindCallbacks(){this.updateRbacControlFunction=this.updateRbacControlFunction.bind(this)}async componentDidMount(){this.props.administrationWorkspaceContext.setDisplayAdministrationWorkspaceAction(DisplayAdministrationRbacsActions_DisplayAdministrationRbacActions),this.findAndLoadRoles(this.props.RoleService),this.findAndLoadRbacSettings(this.props.RbacService)}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminRbacContext.clearContext()}async findAndLoadRoles(){const apiClientOptions=this.props.context.getApiClientOptions(),roleService=new this.props.RoleService(apiClientOptions),rolesDto=await roleService.findAll(),roles=new rolesCollection(rolesDto);this.setState({roles})}async findAndLoadRbacSettings(){const apiClientOptions=this.props.context.getApiClientOptions(),rbacService=new this.props.RbacService(apiClientOptions),rbacsDto=await rbacService.findAll({ui_action:!0}),rbacs=new rbacsCollection.A(rbacsDto,!0);this.props.adminRbacContext.setRbacs(rbacs)}updateRbacControlFunction(role,actionName,controlFunction){const rbacsUpdated=this.props.adminRbacContext.rbacsUpdated,rbac=this.props.adminRbacContext.rbacs.findRbacByRoleAndUiActionName(role,actionName);if(rbac.controlFunction===controlFunction)rbacsUpdated.remove(rbac);else{const clonedRbac=new rbacEntity.A(rbac.toDto({ui_action:!0,action:!0}));clonedRbac.controlFunction=controlFunction,rbacsUpdated.addOrReplace(clonedRbac)}this.props.adminRbacContext.setRbacsUpdated(rbacsUpdated)}get canIUseTags(){return this.props.context.siteSettings.canIUse("tags")}get canIUseDesktop(){return this.props.context.siteSettings.canIUse("desktop")}get canIUseMobile(){return this.props.context.siteSettings.canIUse("mobile")}get canIUseFolders(){return this.props.context.siteSettings.canIUse("folders")}get canIUsePreviewPassword(){return this.props.context.siteSettings.canIUse("previewPassword")}get canIUseExport(){return this.props.context.siteSettings.canIUse("export")}get canIUseImport(){return this.props.context.siteSettings.canIUse("import")}get isReady(){return null!==this.state.roles}render(){return react.createElement("div",{className:"row"},react.createElement("div",{className:"rbac-settings col8 main-column"},react.createElement("h3",null,react.createElement(es.x6,null,"Role-Based Access Control")),react.createElement("p",null,react.createElement(es.x6,null,"In this section you can define access controls for each user role.")),react.createElement("form",{className:"form"},react.createElement("div",{className:"flex-container outer"},react.createElement("div",{className:"flex-container inner header"},react.createElement("div",{className:"flex-item first border-right"},react.createElement("label",null,react.createElement(es.x6,null,"UI Permissions"))),react.createElement("div",{className:"flex-item border-right centered"},react.createElement("label",null,react.createElement(es.x6,null,"Admin"))),react.createElement("div",{className:"flex-item centered"},react.createElement("label",null,react.createElement(es.x6,null,"User")))),this.isReady&&react.createElement(react.Fragment,null,react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Resources"),level:1},(this.canIUseImport||this.canIUseExport)&&react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Import/Export"),level:2},this.canIUseImport&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can import"),actionName:uiActionEnumeration.e.RESOURCES_IMPORT,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),this.canIUseExport&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can export"),actionName:uiActionEnumeration.e.RESOURCES_EXPORT,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Password"),level:2},this.canIUsePreviewPassword&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can preview"),actionName:uiActionEnumeration.e.SECRETS_PREVIEW,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can copy"),actionName:uiActionEnumeration.e.SECRETS_COPY,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Metadata"),level:2},react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see password activities"),actionName:uiActionEnumeration.e.RESOURCES_SEE_ACTIVITIES,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see password comments"),actionName:uiActionEnumeration.e.RESOURCES_SEE_COMMENTS,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),(this.canIUseFolders||this.canIUseTags)&&react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Organization"),level:2},this.canIUseFolders&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can use folders"),actionName:uiActionEnumeration.e.FOLDERS_USE,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),this.canIUseTags&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can use tags"),actionName:uiActionEnumeration.e.TAGS_USE,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Sharing"),level:2},react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see with whom passwords are shared with"),actionName:uiActionEnumeration.e.SHARE_VIEW_LIST,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can share folders"),actionName:uiActionEnumeration.e.SHARE_FOLDER,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}))),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Users"),level:1},react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see users workspace"),actionName:uiActionEnumeration.e.USERS_VIEW_WORKSPACE,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),(this.canIUseMobile||this.canIUseDesktop)&&react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("User settings"),level:1},this.canIUseMobile&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see mobile setup"),actionName:uiActionEnumeration.e.MOBILE_TRANSFER,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),this.canIUseDesktop&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see desktop application setup"),actionName:uiActionEnumeration.e.DESKTOP_TRANSFER,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})))))),react.createElement("div",{className:"col4 last"},react.createElement("div",{className:"sidebar-help"},react.createElement("h3",null,react.createElement(es.x6,null,"Need help?")),react.createElement("p",null,react.createElement(es.x6,null,"Check out the Role Based Access Control documentation.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/role-based-access-control/",target:"_blank",rel:"noopener noreferrer"},react.createElement(Icon.A,{name:"document"}),react.createElement("span",null,react.createElement(es.x6,null,"Read RBAC doc"))))))}}DisplayRbacAdministration.defaultProps={RoleService:roleService,RbacService:rbacService},DisplayRbacAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminRbacContext:prop_types_default().object,RoleService:prop_types_default().func,RbacService:prop_types_default().func,t:prop_types_default().func};const DisplayRbacAdministration_DisplayRbacAdministration=(0,AppContext.L)(withAdminRbac((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayRbacAdministration))));DisplayRbacAdministration.__docgenInfo={description:"This component allows to display the internationalisation for the administration",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"bindCallbacks",docblock:"Bind callbacks",modifiers:[],params:[],returns:null,description:"Bind callbacks"},{name:"findAndLoadRoles",docblock:"Find and load the roles\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find and load the roles"},{name:"findAndLoadRbacSettings",docblock:"Find and load the rbac settings\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find and load the rbac settings"},{name:"updateRbacControlFunction",docblock:"Update a rbac setting.\n@param {RoleEntity} role The role to update the rbac for.\n@param {string} actionName The action to update the rbac for.\n@param {string} controlFunction The new control function for the rbac.",modifiers:[],params:[{name:"role",description:"The role to update the rbac for.",type:{name:"RoleEntity"},optional:!1},{name:"actionName",description:"The action to update the rbac for.",type:{name:"string"},optional:!1},{name:"controlFunction",description:"The new control function for the rbac.",type:{name:"string"},optional:!1}],returns:null,description:"Update a rbac setting."},{name:"canIUseTags",docblock:"Is the user allowed to use the tags capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the tags capability"},{name:"canIUseDesktop",docblock:"Is the user allowed to use the desktop export capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the desktop export capability"},{name:"canIUseMobile",docblock:"Is the user allowed to use the mobile export capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the mobile export capability"},{name:"canIUseFolders",docblock:"Is the user allowed to use the folders capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the folders capability"},{name:"canIUsePreviewPassword",docblock:"Is the user allowed to use preview password capability.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use preview password capability."},{name:"canIUseExport",docblock:"Is the user allowed to use export capability.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use export capability."},{name:"canIUseImport",docblock:"Is the user allowed to use import capability.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use import capability."},{name:"isReady",docblock:"Check if the component is ready to display its rows.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Check if the component is ready to display its rows."}],displayName:"DisplayRbacAdministration",props:{RoleService:{defaultValue:{value:"class RoleService extends AbstractService {\n  /**\n   * Constructor\n   *\n   * @param {ApiClientOptions} apiClientOptions\n   * @public\n   */\n  constructor(apiClientOptions) {\n    super(apiClientOptions, RoleService.RESOURCE_NAME);\n  }\n\n  /**\n   * API Resource Name\n   *\n   * @returns {string}\n   * @public\n   */\n  static get RESOURCE_NAME() {\n    return ROLES_SERVICE_RESOURCE_NAME;\n  }\n\n  /**\n   * Find all roles\n   *\n   * @returns {Promise<*>} response body\n   * @throws {Error} if options are invalid or API error\n   * @public\n   */\n  async findAll() {\n    const response = await this.apiClient.findAll();\n    if (!response.body || !response.body.length) {\n      return [];\n    }\n    return response.body;\n  }\n}",computed:!1},description:"",type:{name:"func"},required:!1},RbacService:{defaultValue:{value:'class RbacService extends AbstractService {\n  /**\n   * Constructor\n   *\n   * @param {ApiClientOptions} apiClientOptions\n   * @public\n   */\n  constructor(apiClientOptions) {\n    super(apiClientOptions, RbacService.RESOURCE_NAME);\n  }\n\n  /**\n   * API Resource Name\n   *\n   * @returns {string}\n   * @public\n   */\n  static get RESOURCE_NAME() {\n    return RBAC_SERVICE_RESOURCE_NAME;\n  }\n\n  /**\n   * Return the list of supported options for the contain option in API find operations\n   *\n   * @returns {Array<string>} list of supported option\n   */\n  static getSupportedContainOptions() {\n    return ["action", "ui_action"];\n  }\n\n  /**\n   * Find all\n   * @param {object} contains\n   * @returns {object}\n   */\n  async findAll(contains) {\n    const options = contains ? this.formatContainOptions(contains, RbacService.getSupportedContainOptions()) : null;\n    const response = await this.apiClient.findAll(options);\n    return response.body;\n  }\n\n  /**\n   * Update all the given rbacs.\n   * @param {array} rbacsUpdatedDto A list of update rbacs dto.\n   * @param {object} contains\n   * @returns {object}\n   */\n  async updateAll(rbacsUpdatedDto, contains = {}) {\n    const options = contains ? this.formatContainOptions(contains, RbacService.getSupportedContainOptions()) : null;\n    const response = await this.apiClient.updateAll(rbacsUpdatedDto, options);\n    return response.body;\n  }\n}',computed:!1},description:"",type:{name:"func"},required:!1},context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminRbacContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var AdministrationInternationalizationContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationInternationalizationContext/AdministrationInternationalizationContext.js"),ApiAppContext_test_data=__webpack_require__("./src/react-extension/contexts/ApiAppContext.test.data.js"),AdministrationWorkspaceContext_test_data=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.test.data.js"),ActionFeedbackContext_test_data=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.test.data.js"),role_test_data=__webpack_require__("./src/shared/models/entity/role/role.test.data.js");const rolesCollectionData=[(0,role_test_data.Dm)(),(0,role_test_data.bd)()];var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");const uiActionEntity_test_data_defaultUiActionData=(data={})=>({id:(0,v4.A)(),name:uiActionEnumeration.e.TAGS_USE,...data}),defaultRbacData=(data={})=>{const defaultData={id:(0,v4.A)(),role_id:role_test_data.ol,foreign_model:rbacEntity.A.FOREIGN_MODEL_ACTION,foreign_id:(0,v4.A)(),control_function:controlFunctionEnumeration.HK.ALLOW,...data};return Object.assign(defaultData,data)},defaultRbacWithUiActionData=(data={})=>{const foreignId=data?.foreign_id||data?.ui_action?.id||(0,v4.A)(),defaultData={foreign_model:rbacEntity.A.FOREIGN_MODEL_UI_ACTION,ui_action:uiActionEntity_test_data_defaultUiActionData({id:foreignId}),...data,foreign_id:foreignId};return defaultRbacData(defaultData)},denyRbacWithUiActionData=(data={})=>{const defaultData={control_function:controlFunctionEnumeration.HK.DENY,...data};return defaultRbacWithUiActionData(defaultData)},defaultSettingsRbacsCollectionData=[defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_EXPORT})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_IMPORT})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.TAGS_USE})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.FOLDERS_USE})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_SEE_ACTIVITIES})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_SEE_COMMENTS})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SECRETS_PREVIEW})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SECRETS_COPY})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SHARE_VIEW_LIST})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.USERS_VIEW_WORKSPACE})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.MOBILE_TRANSFER})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.DESKTOP_TRANSFER})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SHARE_FOLDER})})];function defaultAdministrationRbacContext(context={}){return{rbacs:null,roles:null,rbacsUpdated:new rbacsCollection.A([]),setRbacs:jest.fn(),isProcessing:jest.fn(),setRbacsUpdated:jest.fn(),updateRbacControlFunction:jest.fn(),clearContext:jest.fn(),save:jest.fn(),hasSettingsChanges:jest.fn(),...context}}function populatedAdministrationRbacContext(context={}){return defaultAdministrationRbacContext({rbacs:new rbacsCollection.A([defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_EXPORT})}),denyRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_IMPORT})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.TAGS_USE})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.FOLDERS_USE})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_SEE_ACTIVITIES})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.RESOURCES_SEE_COMMENTS})}),denyRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SECRETS_PREVIEW})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SECRETS_COPY})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SHARE_VIEW_LIST})}),denyRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.USERS_VIEW_WORKSPACE})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.MOBILE_TRANSFER})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.DESKTOP_TRANSFER})}),defaultRbacWithUiActionData({ui_action:uiActionEntity_test_data_defaultUiActionData({name:uiActionEnumeration.e.SHARE_FOLDER})})]),roles:new rolesCollection(rolesCollectionData),...context})}class DefaultRoleService{findAll(){return rolesCollectionData}}class DefaultRbacService{findAll(){return defaultSettingsRbacsCollectionData}}function propsWithPopulatedRbacContext(props={}){return function DisplayRbacAdministration_test_data_defaultProps(props={}){return{context:(0,ApiAppContext_test_data.s)(),adminRbacContext:defaultAdministrationRbacContext(),administrationWorkspaceContext:(0,AdministrationWorkspaceContext_test_data.M)(),actionFeedbackContext:(0,ActionFeedbackContext_test_data.M)(),RoleService:DefaultRoleService,RbacService:DefaultRbacService,...props}}({adminRbacContext:populatedAdministrationRbacContext(),...props})}const DisplayRbacAdministration_test_stories={title:"Components/Administration/DisplayRbacAdministration",component:DisplayRbacAdministration_DisplayRbacAdministration},Template=args=>react.createElement(AdministrationInternationalizationContext.m$,args,react.createElement(AdminRbacContext.Provider,{value:args.adminRbacContext},react.createElement("div",{className:"panel main"},react.createElement("div",null,react.createElement("div",{className:"panel middle"},react.createElement("div",{className:"grid grid-responsive-12"},react.createElement(DisplayRbacAdministration_DisplayRbacAdministration,args)))))));Template.propTypes={context:prop_types_default().object};const Initial=Template.bind({});Initial.args=propsWithPopulatedRbacContext(),Initial.parameters={css:"api_main"};const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:'args => <AdminInternationalizationContextProvider {...args}>\n    <AdminRbacContext.Provider value={args.adminRbacContext}>\n      <div className="panel main">\n        <div>\n          <div className="panel middle">\n            <div className="grid grid-responsive-12">\n              <DisplayRbacAdministration {...args} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </AdminRbacContext.Provider>\n  </AdminInternationalizationContextProvider>',...Initial.parameters?.docs?.source}}}},"./src/react-extension/contexts/ActionFeedbackContext.test.data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function defaultActionFeedbackContext(data={}){const defaultContext={displaySuccess:jest.fn(),displayError:jest.fn(),remove:jest.fn()};return Object.assign(defaultContext,data)}__webpack_require__.d(__webpack_exports__,{M:()=>defaultActionFeedbackContext})},"./src/react-extension/contexts/AdministrationWorkspaceContext.test.data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function defaultAdministrationWorkspaceContext(context={}){const defaultContext={must:{editSubscriptionKey:!1,refreshSubscriptionKey:!1},onResetActionsSettings:jest.fn(),setDisplayAdministrationWorkspaceAction:jest.fn(),resetDisplayAdministrationWorkspaceAction:jest.fn()};return Object.assign(defaultContext,context)}__webpack_require__.d(__webpack_exports__,{M:()=>defaultAdministrationWorkspaceContext})},"./src/shared/models/entity/abstract/entityCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js"),_entityValidationError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js");class EntityCollection{constructor(dtos=[],options={}){const clone=options?.clone??!0;this._items=[],clone&&(dtos=JSON.parse(JSON.stringify(dtos))),this._props=dtos}toDto(){return JSON.parse(JSON.stringify(this._items))}toJSON(){return this.toDto()}get items(){return this._items}get length(){return this._items.length}[Symbol.iterator](){let i=0;return{next:()=>i<this._items.length?{value:this._items[i++],done:!1}:{done:!0}}}getAll(propName,search){if("string"!=typeof propName)throw new TypeError("EntityCollection excludeAll expects propName to be string.");if("string"!=typeof search)throw new TypeError("EntityCollection excludeAll expects search to be string.");return this._items.filter((item=>Object.prototype.hasOwnProperty.call(item._props,propName)&&item._props[propName]===search))}getFirst(propName,search){if("string"!=typeof propName||"string"!=typeof search)throw new TypeError("EntityCollection getFirst by expect propName and search to be strings");const found=this.getAll(propName,search);if(found&&found.length)return found[0]}extract(propName){if("string"!=typeof propName)throw new TypeError("EntityCollection extract expects propName to be a string.");return this._items.reduce(((accumulator,item)=>(void 0!==item._props[propName]&&accumulator.push(item._props[propName]),accumulator)),[])}push(item){return this._items.push(item),this._items.length}unshift(item){return this._items.unshift(item),this._items.length}filterByPropertyValueIn(propName,needles,excludeUndefined=!0){if("string"!=typeof propName)throw new TypeError("EntityCollection filterByPropertyValueIn expects propName to be a string.");if(!Array.isArray(needles))throw new TypeError("EntityCollection filterByPropertyValueIn expects needles to be an array.");this.filterByCallback((item=>{const isPropertyDefined=Object.prototype.hasOwnProperty.call(item._props,propName);return!(excludeUndefined&&!isPropertyDefined||isPropertyDefined&&!needles.includes(item._props[propName]))}))}filterByCallback(callback){if("function"!=typeof callback)throw new TypeError("EntityCollection filterByCallback expects callback to be a function.");for(let currentIndex=this._items.length-1;currentIndex>=0;currentIndex--)callback(this._items[currentIndex])||this._items.splice(currentIndex,1)}assertUniqueByProperty(propName,message){const ruleId=`unique_${propName}`,propValues=this.extract(propName),uniqueElements=new Set;message=message||`The collection should only contain items with unique values for the property: ${propName}.`,propValues.forEach(((propValue,index)=>{if(uniqueElements.add(propValue),index!==uniqueElements.size-1)throw new _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__.A(index,ruleId,message)}))}assertNotExist(propName,propValue,options={}){if(void 0===propValue)return;let haystackSet=options?.haystackSet;if(!haystackSet){const propValues=this.extract(propName);haystackSet=new Set(propValues)}if(haystackSet.has(propValue)){const error=new _entityValidationError__WEBPACK_IMPORTED_MODULE_1__.A,message=options?.message||`The collection already includes an element that has a property (${propName}) with an identical value.`;throw error.addError(propName,"unique",message),error}}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollection},"./src/shared/models/entity/abstract/entityCollectionError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class EntityCollectionError extends Error{constructor(position,rule,message){if(super(message=message||"Entity collection error."),"number"!=typeof position)throw new TypeError("EntityCollectionError requires a valid position");if(!rule||"string"!=typeof rule)throw new TypeError("EntityCollectionError requires a valid rule");if(!message||"string"!=typeof message)throw new TypeError("EntityCollectionError requires a valid message");this.position=position,this.rule=rule}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollectionError},"./src/shared/models/entity/rbac/rbacEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>rbacEntity});var entity=__webpack_require__("./src/shared/models/entity/abstract/entity.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class ActionEntity extends entity.A{constructor(dto,options={}){super(entitySchema.A.validate(ActionEntity.ENTITY_NAME,dto,ActionEntity.getSchema()),options)}static getSchema(){return{type:"object",required:["id","name"],properties:{id:{type:"string",format:"uuid"},name:{type:"string",maxLength:255}}}}get id(){return this._props.id}get name(){return this._props.name}static get ENTITY_NAME(){return"Action"}}const actionEntity=ActionEntity;class UiActionEntity extends entity.A{constructor(dto,options={}){super(entitySchema.A.validate(UiActionEntity.ENTITY_NAME,dto,UiActionEntity.getSchema()),options)}static getSchema(){return{type:"object",required:["id","name"],properties:{id:{type:"string",format:"uuid"},name:{type:"string",maxLength:255}}}}get id(){return this._props.id}get name(){return this._props.name}static get ENTITY_NAME(){return"UiAction"}}const uiActionEntity=UiActionEntity;var controlFunctionEnumeration=__webpack_require__("./src/shared/services/rbacs/controlFunctionEnumeration.js");class RbacEntity extends entity.A{constructor(dto,options={}){super(entitySchema.A.validate(RbacEntity.ENTITY_NAME,dto,RbacEntity.getSchema()),options),this._props.action&&(this._action=new actionEntity(this._props.action,{clone:!1})),delete this._props.action,this._props.ui_action&&(this._ui_action=new uiActionEntity(this._props.ui_action,{clone:!1})),delete this._props.ui_action}static getSchema(){return{type:"object",required:["id","role_id","foreign_model","foreign_id","control_function"],properties:{id:{type:"string",format:"uuid"},role_id:{type:"string",format:"uuid"},foreign_model:{type:"string",enum:[RbacEntity.FOREIGN_MODEL_ACTION,RbacEntity.FOREIGN_MODEL_UI_ACTION]},foreign_id:{type:"string",format:"uuid"},control_function:{type:"string",enum:[controlFunctionEnumeration.HK.ALLOW,controlFunctionEnumeration.HK.DENY,controlFunctionEnumeration.HK.ALLOW_IF_GROUP_MANAGER_IN_ONE_GROUP]},action:actionEntity.getSchema(),ui_action:uiActionEntity.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return contain?(this._action&&contain.action&&(result.action=this._action.toDto()),this._ui_action&&contain.ui_action&&(result.ui_action=this._ui_action.toDto()),result):result}toUpdateDto(){return{id:this.id,control_function:this.controlFunction}}toJSON(){return this.toDto(RbacEntity.ALL_CONTAIN_OPTIONS)}get id(){return this._props.id}get roleId(){return this._props.role_id}get foreignModel(){return this._props.foreign_model}get foreignId(){return this._props.foreign_id}get controlFunction(){return this._props.control_function}set controlFunction(controlFunction){entitySchema.A.validateProp("control_function",controlFunction,RbacEntity.getSchema().properties.control_function),this._props.control_function=controlFunction}get action(){return this._action||null}get uiAction(){return this._ui_action||null}static get ENTITY_NAME(){return"Rbac"}static get ALL_CONTAIN_OPTIONS(){return{action:!0,ui_action:!0}}static get FOREIGN_MODEL_ACTION(){return"Action"}static get FOREIGN_MODEL_UI_ACTION(){return"UiAction"}}const rbacEntity=RbacEntity},"./src/shared/models/entity/rbac/rbacsCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _rbacEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/rbac/rbacEntity.js"),_abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityCollection.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),_role_roleEntity__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/models/entity/role/roleEntity.js");class RbacsCollection extends _abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__.A{constructor(collectionDto,excludeInvalid=!1){super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__.A.validate(RbacsCollection.ENTITY_NAME,collectionDto,RbacsCollection.getSchema())),this._props.forEach((dto=>{try{this._items.push(new _rbacEntity__WEBPACK_IMPORTED_MODULE_0__.A(dto))}catch(e){if(!excludeInvalid)throw e}})),this._props=null}static getSchema(){return{type:"array",items:_rbacEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema()}}get rbacs(){return this._items}toBulkUpdateDto(){return this.items.map((rbac=>rbac.toUpdateDto()))}findRbacByRoleAndUiActionName(role,name){if(!(role instanceof _role_roleEntity__WEBPACK_IMPORTED_MODULE_3__.A))throw new Error("The role parameter should be a role entity.");if("string"!=typeof name&&!(name instanceof String))throw new Error("The name parameter should be a valid string.");return this.rbacs.find((rbac=>rbac.roleId===role.id&&rbac.uiAction?.name===name))}findRbacByActionName(name){if("string"!=typeof name&&!(name instanceof String))throw new Error("The name parameter should be a valid string.");return this.rbacs.find((rbac=>rbac.uiAction?.name===name))}push(dto){if(!dto||"object"!=typeof dto)throw new TypeError("The function expect an object as parameter");dto instanceof _rbacEntity__WEBPACK_IMPORTED_MODULE_0__.A&&(dto=dto.toDto(_rbacEntity__WEBPACK_IMPORTED_MODULE_0__.A.ALL_CONTAIN_OPTIONS));const entity=new _rbacEntity__WEBPACK_IMPORTED_MODULE_0__.A(dto);super.push(entity)}addOrReplace(rbac){const index=this.items.findIndex((existingRbac=>existingRbac.id===rbac.id));index>-1?this._items[index]=rbac:this.push(rbac)}remove(rbac){const length=this.items.length;let i=0;for(;i<length;i++){if(this.items[i].id===rbac.id)return void this._items.splice(i,1)}}static get ENTITY_NAME(){return"Rbacs"}static get RULE_UNIQUE_ID(){return"unique_id"}}const __WEBPACK_DEFAULT_EXPORT__=RbacsCollection},"./src/shared/models/entity/role/role.test.data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dm:()=>userRoleDto,ES:()=>TEST_ROLE_ADMIN_ID,bd:()=>adminRoleDto,ol:()=>TEST_ROLE_USER_ID});var uuid__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");const TEST_ROLE_USER_ID=(0,uuid__WEBPACK_IMPORTED_MODULE_0__.A)(),TEST_ROLE_ADMIN_ID=(0,uuid__WEBPACK_IMPORTED_MODULE_0__.A)(),userRoleDto=data=>({id:TEST_ROLE_USER_ID,name:"user",...data}),adminRoleDto=data=>({id:TEST_ROLE_ADMIN_ID,name:"admin",...data})}}]);