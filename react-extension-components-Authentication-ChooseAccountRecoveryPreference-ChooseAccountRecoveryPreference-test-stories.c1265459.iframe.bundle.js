/*! For license information please see react-extension-components-Authentication-ChooseAccountRecoveryPreference-ChooseAccountRecoveryPreference-test-stories.c1265459.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[6303],{"./src/react-extension/components/Authentication/ChooseAccountRecoveryPreference/ChooseAccountRecoveryPreference.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Mandatory:()=>Mandatory,MandatoryWithLink:()=>MandatoryWithLink,OptIn:()=>OptIn,OptInWithLink:()=>OptInWithLink,OptOut:()=>OptOut,OptOutWithLink:()=>OptOutWithLink,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ChooseAccountRecoveryPreference_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),MockTranslationProvider=__webpack_require__("./src/react-extension/test/mock/components/Internationalisation/MockTranslationProvider.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class ChooseAccountRecoveryPreference extends react.Component{constructor(props){super(props),this.state=this.getDefaultState(props),this.bindCallbacks()}getDefaultState(props){return{status:"opt-in"===props.policy?"rejected":"approved",processing:!1}}bindCallbacks(){this.handleSubmit=this.handleSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this)}async toggleProcessing(){await this.setState({processing:!this.state.processing})}get isProcessing(){return this.state.processing}async handleSubmit(event){event.preventDefault(),await this.toggleProcessing(),this.complete()}complete(){this.props.onComplete(this.state.status)}handleInputChange(event){const target=event.target,value=target.value,name=target.name;this.setState({[name]:value})}canReject(){return"mandatory"!==this.props.policy}render(){return react.createElement("div",{className:"recovery-account-setup-extension"},react.createElement("h1",null,react.createElement(es.x6,null,"Account recovery")," (",{"opt-in":react.createElement(es.x6,null,"Optional"),"opt-out":react.createElement(es.x6,null,"Recommended"),mandatory:react.createElement(es.x6,null,"Mandatory")}[this.props.policy],")"),react.createElement("form",{onSubmit:this.handleSubmit},react.createElement("p",null,react.createElement(es.x6,null,"It is possible and recommended to share securely your recovery kit with your organization recovery contacts.")," ",react.createElement(es.x6,null,"They will be able to help you in case you lose it.")),react.createElement("div",{className:"radiolist-alt"},this.canReject()&&react.createElement("div",{className:"input radio "+("rejected"===this.state.status?"checked":"")},react.createElement("input",{type:"radio",value:"rejected",onChange:this.handleInputChange,name:"status",checked:"rejected"===this.state.status,id:"statusRecoverAccountReject",disabled:this.isProcessing}),react.createElement("label",{htmlFor:"statusRecoverAccountReject"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Reject")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"I do not agree to share this info with my organization recovery contacts")))),react.createElement("div",{className:"input radio "+("approved"===this.state.status?"checked":"")},react.createElement("input",{type:"radio",value:"approved",onChange:this.handleInputChange,name:"status",checked:"approved"===this.state.status,id:"statusRecoverAccountAccept",disabled:this.isProcessing}),react.createElement("label",{htmlFor:"statusRecoverAccountAccept"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Accept")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"I agree to share this info with my organization recovery contacts"))))),react.createElement("div",{className:"form-actions"},react.createElement("button",{type:"submit",className:"button primary big full-width "+(this.isProcessing?"processing":""),role:"button",disabled:this.isProcessing},react.createElement(es.x6,null,"Next")),this.props.canGenerateNewKeyInstead&&react.createElement("button",{type:"button",className:"generate-new-key link",onClick:this.props.onGenerateNewKeyInstead,disabled:this.isProcessing},react.createElement(es.x6,null,"Generate new key instead")))))}}ChooseAccountRecoveryPreference.defaultProps={canGenerateNewKeyInstead:!1},ChooseAccountRecoveryPreference.propTypes={policy:prop_types_default().oneOf(["opt-in","opt-out","mandatory"]).isRequired,onComplete:prop_types_default().func.isRequired,canGenerateNewKeyInstead:prop_types_default().bool,onGenerateNewKeyInstead:prop_types_default().func};const ChooseAccountRecoveryPreference_ChooseAccountRecoveryPreference=(0,es.CI)("common")(ChooseAccountRecoveryPreference);function defaultProps(props){return Object.assign({policy:"mandatory",onComplete:()=>{},canGenerateNewKeyInstead:!0,onGenerateNewKeyInstead:()=>{}},props||{})}ChooseAccountRecoveryPreference.__docgenInfo={description:"",methods:[{name:"getDefaultState",docblock:"Returns the default component state",modifiers:[],params:[{name:"props",optional:!1}],returns:null,description:"Returns the default component state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"toggleProcessing",docblock:"Toggle the processing mode",modifiers:["async"],params:[],returns:null,description:"Toggle the processing mode"},{name:"isProcessing",docblock:"Returns true if the component must be in a processing mode",modifiers:["get"],params:[],returns:null,description:"Returns true if the component must be in a processing mode"},{name:"handleSubmit",docblock:"Go to the next process\n@param event A form submit event",modifiers:["async"],params:[{name:"event",description:"A form submit event",optional:!1}],returns:null,description:"Go to the next process"},{name:"complete",docblock:"Whenever the user wants to complete the step.",modifiers:[],params:[],returns:null,description:"Whenever the user wants to complete the step."},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"canReject",docblock:"Can the user reject to join the account recovery program.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Can the user reject to join the account recovery program."}],displayName:"ChooseAccountRecoveryPreference",props:{canGenerateNewKeyInstead:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},policy:{description:"",type:{name:"enum",value:[{value:'"opt-in"',computed:!1},{value:'"opt-out"',computed:!1},{value:'"mandatory"',computed:!1}]},required:!0},onComplete:{description:"",type:{name:"func"},required:!0},onGenerateNewKeyInstead:{description:"",type:{name:"func"},required:!1}}};const ChooseAccountRecoveryPreference_test_stories={title:"Components/Authentication/ChooseAccountRecoveryPreference",component:ChooseAccountRecoveryPreference_ChooseAccountRecoveryPreference},Template=args=>react.createElement(MockTranslationProvider.A,null,react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.fS,{initialEntries:["/"]},react.createElement(react_router.qh,{component:routerProps=>react.createElement(ChooseAccountRecoveryPreference_ChooseAccountRecoveryPreference,{...args,...routerProps})})))))),defaultParameters={css:"ext_authentication"},MandatoryWithLink=Template.bind({});MandatoryWithLink.args=function mandatoryPolicyPropsWithImportedKey(){return defaultProps({policy:"mandatory",canGenerateNewKeyInstead:!0})}(),MandatoryWithLink.parameters=defaultParameters;const OptOutWithLink=Template.bind({});OptOutWithLink.args=function optOutPolicyPropsWithImportedKey(){return defaultProps({policy:"opt-out",canGenerateNewKeyInstead:!0})}(),OptOutWithLink.parameters=defaultParameters;const OptInWithLink=Template.bind({});OptInWithLink.args=function optInPolicyPropsWithImportedKey(){return defaultProps({policy:"opt-in",canGenerateNewKeyInstead:!0})}(),OptInWithLink.parameters=defaultParameters;const Mandatory=Template.bind({});Mandatory.args=function mandatoryPolicyProps(){return defaultProps({policy:"mandatory"})}(),Mandatory.parameters=defaultParameters;const OptOut=Template.bind({});OptOut.args=function optOutPolicyProps(){return defaultProps({policy:"opt-out"})}(),OptOut.parameters=defaultParameters;const OptIn=Template.bind({});OptIn.args=function optInPolicyProps(){return defaultProps({policy:"opt-in"})}(),OptIn.parameters=defaultParameters;const __namedExportsOrder=["MandatoryWithLink","OptOutWithLink","OptInWithLink","Mandatory","OptOut","OptIn"];MandatoryWithLink.parameters={...MandatoryWithLink.parameters,docs:{...MandatoryWithLink.parameters?.docs,source:{originalSource:'args => <MockTranslationProvider>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <MemoryRouter initialEntries={[\'/\']}>\n            <Route component={routerProps => <ChooseAccountRecoveryPreference {...args} {...routerProps} />} />\n          </MemoryRouter>\n        </div>\n      </div>\n    </div>\n  </MockTranslationProvider>',...MandatoryWithLink.parameters?.docs?.source}}},OptOutWithLink.parameters={...OptOutWithLink.parameters,docs:{...OptOutWithLink.parameters?.docs,source:{originalSource:'args => <MockTranslationProvider>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <MemoryRouter initialEntries={[\'/\']}>\n            <Route component={routerProps => <ChooseAccountRecoveryPreference {...args} {...routerProps} />} />\n          </MemoryRouter>\n        </div>\n      </div>\n    </div>\n  </MockTranslationProvider>',...OptOutWithLink.parameters?.docs?.source}}},OptInWithLink.parameters={...OptInWithLink.parameters,docs:{...OptInWithLink.parameters?.docs,source:{originalSource:'args => <MockTranslationProvider>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <MemoryRouter initialEntries={[\'/\']}>\n            <Route component={routerProps => <ChooseAccountRecoveryPreference {...args} {...routerProps} />} />\n          </MemoryRouter>\n        </div>\n      </div>\n    </div>\n  </MockTranslationProvider>',...OptInWithLink.parameters?.docs?.source}}},Mandatory.parameters={...Mandatory.parameters,docs:{...Mandatory.parameters?.docs,source:{originalSource:'args => <MockTranslationProvider>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <MemoryRouter initialEntries={[\'/\']}>\n            <Route component={routerProps => <ChooseAccountRecoveryPreference {...args} {...routerProps} />} />\n          </MemoryRouter>\n        </div>\n      </div>\n    </div>\n  </MockTranslationProvider>',...Mandatory.parameters?.docs?.source}}},OptOut.parameters={...OptOut.parameters,docs:{...OptOut.parameters?.docs,source:{originalSource:'args => <MockTranslationProvider>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <MemoryRouter initialEntries={[\'/\']}>\n            <Route component={routerProps => <ChooseAccountRecoveryPreference {...args} {...routerProps} />} />\n          </MemoryRouter>\n        </div>\n      </div>\n    </div>\n  </MockTranslationProvider>',...OptOut.parameters?.docs?.source}}},OptIn.parameters={...OptIn.parameters,docs:{...OptIn.parameters?.docs,source:{originalSource:'args => <MockTranslationProvider>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <MemoryRouter initialEntries={[\'/\']}>\n            <Route component={routerProps => <ChooseAccountRecoveryPreference {...args} {...routerProps} />} />\n          </MemoryRouter>\n        </div>\n      </div>\n    </div>\n  </MockTranslationProvider>',...OptIn.parameters?.docs?.source}}}}}]);