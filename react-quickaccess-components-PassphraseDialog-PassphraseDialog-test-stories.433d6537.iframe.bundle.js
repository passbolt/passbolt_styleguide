/*! For license information please see react-quickaccess-components-PassphraseDialog-PassphraseDialog-test-stories.433d6537.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[7180],{"./src/react-quickaccess/components/PassphraseDialog/PassphraseDialog.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ErrorPassphrase:()=>ErrorPassphrase,Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>PassphraseDialog_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),Password=__webpack_require__("./src/shared/components/Password/Password.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js");class PassphraseDialog extends react.Component{constructor(props){super(props),this.state=this.initState(),this.initEventHandlers(),this.passphraseInputRef=react.createRef()}initEventHandlers(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleCloseButtonClick=this.handleCloseButtonClick.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this)}initState(){return{attempt:0,processing:!1,passphrase:"",rememberMe:!1,passphraseError:""}}componentDidMount(){this.focusOnPassphrase()}focusOnPassphrase(){this.passphraseInputRef.current.focus()}get translate(){return this.props.t}async handleFormSubmit(event){if(event.preventDefault(),this.setState({processing:!0}),""!==this.state.passphrase)try{await this.props.context.port.request("passbolt.keyring.private.checkpassphrase",this.state.passphrase),this.handlePassphraseSuccess()}catch(error){this.handlePassphraseError()}else this.handlePassphraseError()}handlePassphraseSuccess(){const rememberMeDuration=!!this.state.rememberMe&&-1;this.props.context.port.emit(this.props.requestId,"SUCCESS",{passphrase:this.state.passphrase,rememberMe:rememberMeDuration}),this.props.onComplete()}handlePassphraseError(){const isPassphraseEmpty=""===this.state.passphrase,errorMessage=isPassphraseEmpty?this.translate("The passphrase should not be empty."):this.translate("This is not a valid passphrase.");let attempt=this.state.attempt;isPassphraseEmpty||attempt++,this.setState({processing:!1,attempt,passphraseError:errorMessage}),attempt<3&&this.focusOnPassphrase()}handleInputChange(event){const target=event.target,value="checkbox"===target.type?target.checked:target.value,name=target.name;this.setState({[name]:value})}handleCloseButtonClick(){this.props.context.port.emit(this.props.requestId,"ERROR",{name:"UserAbortsOperationError",message:"The dialog has been closed."}),this.props.onComplete()}handleKeyDown(event){27===event.keyCode&&(event.stopPropagation(),this.props.context.port.emit(this.props.requestId,"ERROR",{name:"UserAbortsOperationError",message:"The dialog has been closed."}),this.props.onComplete())}render(){return react.createElement("div",{className:"passphrase",onKeyDown:this.handleKeyDown},react.createElement("div",{className:"back-link"},react.createElement("a",{className:"primary-action"},react.createElement("span",{className:"primary-action-title"},react.createElement(es.x6,null,"Passphrase required"))),react.createElement("a",{onClick:this.handleCloseButtonClick,className:"secondary-action button-transparent button",title:this.translate("Cancel the operation")},react.createElement(Icon.A,{name:"close"}),react.createElement("span",{className:"visually-hidden"},react.createElement(es.x6,null,"Cancel")))),this.state.attempt<3&&react.createElement("form",{onSubmit:this.handleFormSubmit},react.createElement("div",{className:"form-container"},react.createElement("div",{className:"input-password-wrapper input required "+(this.state.passphraseError?"error":"")},react.createElement("label",{htmlFor:"passphrase"},react.createElement(es.x6,null,"Please enter your passphrase")),react.createElement(Password.A,{name:"passphrase",placeholder:this.translate("Passphrase"),id:"passphrase",inputRef:this.passphraseInputRef,value:this.state.passphrase,onChange:this.handleInputChange,disabled:this.state.processing,securityToken:this.props.context.userSettings.getSecurityToken(),autoComplete:"off"}),this.state.passphraseError&&react.createElement("div",{className:"error-message"},this.state.passphraseError)),this.props.canRememberMe&&react.createElement("div",{className:"input checkbox"},react.createElement("input",{type:"checkbox",name:"rememberMe",id:"remember-me",checked:this.state.rememberMe,onChange:this.handleInputChange,disabled:this.state.processing}),react.createElement("label",{htmlFor:"remember-me"},react.createElement(es.x6,null,"Remember until I log out.")))),react.createElement("div",{className:"submit-wrapper"},react.createElement("button",{type:"submit",className:"button primary big full-width "+(this.state.processing?"processing":""),role:"button",disabled:this.state.processing},react.createElement(es.x6,null,"Submit"),this.state.processing&&react.createElement(Icon.A,{name:"spinner"})))),3===this.state.attempt&&react.createElement("div",{className:"passphrase-wrong"},react.createElement("div",{className:"too-many-attempts-error"},react.createElement(es.x6,null,"Your passphrase is wrong!")," ",react.createElement(es.x6,null,"The operation has been aborted.")),react.createElement("div",{className:"submit-wrapper"},react.createElement("a",{className:"button primary big full-width",role:"button",onClick:this.handleCloseButtonClick},react.createElement(es.x6,null,"Close")))))}}PassphraseDialog.propTypes={context:prop_types_default().any,canRememberMe:prop_types_default().bool,className:prop_types_default().string,requestId:prop_types_default().string,onComplete:prop_types_default().func,t:prop_types_default().func};const PassphraseDialog_PassphraseDialog=(0,AppContext.L)((0,es.CI)("common")(PassphraseDialog));PassphraseDialog.__docgenInfo={description:"",methods:[{name:"initEventHandlers",docblock:null,modifiers:[],params:[],returns:null},{name:"initState",docblock:null,modifiers:[],params:[],returns:null},{name:"focusOnPassphrase",docblock:"Put the focus on the passphrase input",modifiers:[],params:[],returns:null,description:"Put the focus on the passphrase input"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"},{name:"handleFormSubmit",docblock:null,modifiers:["async"],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"handlePassphraseSuccess",docblock:null,modifiers:[],params:[],returns:null},{name:"handlePassphraseError",docblock:null,modifiers:[],params:[],returns:null},{name:"handleInputChange",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"handleCloseButtonClick",docblock:null,modifiers:[],params:[],returns:null},{name:"handleKeyDown",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null}],displayName:"PassphraseDialog",props:{context:{description:"",type:{name:"any"},required:!1},canRememberMe:{description:"",type:{name:"bool"},required:!1},className:{description:"",type:{name:"string"},required:!1},requestId:{description:"",type:{name:"string"},required:!1},onComplete:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var MockPort=__webpack_require__("./src/react-extension/test/mock/MockPort.js"),UserSettings=__webpack_require__("./src/shared/lib/Settings/UserSettings.js"),userSettings=__webpack_require__("./src/react-extension/test/fixture/Settings/userSettings.js");function defaultAppContext(appContext){const defaultAppContext={port:new MockPort.A,userSettings:new UserSettings.A(userSettings.A)};return Object.assign(defaultAppContext,appContext||{})}const PassphraseDialog_test_stories={title:"Components/QuickAccess/PassphraseDialog",component:PassphraseDialog_PassphraseDialog},Template=({context,...args})=>react.createElement(AppContext.A.Provider,{value:context},react.createElement(react_router.fS,{initialEntries:["/"]},react.createElement(react_router.qh,{component:routerProps=>react.createElement("div",{className:"container quickaccess"},react.createElement(PassphraseDialog_PassphraseDialog,{...args,...routerProps}))})));Template.propTypes={context:prop_types_default().object};const parameters={css:"ext_quickaccess"},Initial=Template.bind({});Initial.args={context:defaultAppContext(),requestId:"8e3874ae-4b40-590b-968a-418f704b9d9a",classname:"",onComplete:()=>{}},Initial.parameters=parameters;const mockedPort=new MockPort.A;mockedPort.addRequestListener("passbolt.keyring.private.checkpassphrase",(()=>{throw new Error}));const contextRequestError={port:mockedPort},ErrorPassphrase=Template.bind({});ErrorPassphrase.args={context:defaultAppContext(contextRequestError),requestId:"8e3874ae-4b40-590b-968a-418f704b9d9a",classname:"",onComplete:()=>{}},ErrorPassphrase.parameters=parameters;const __namedExportsOrder=["Initial","ErrorPassphrase"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:"({\n  context,\n  ...args\n}) => <AppContext.Provider value={context}>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <div className=\"container quickaccess\"><PassphraseDialog {...args} {...routerProps} /></div>} />\n    </MemoryRouter>\n  </AppContext.Provider>",...Initial.parameters?.docs?.source}}},ErrorPassphrase.parameters={...ErrorPassphrase.parameters,docs:{...ErrorPassphrase.parameters?.docs,source:{originalSource:"({\n  context,\n  ...args\n}) => <AppContext.Provider value={context}>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <div className=\"container quickaccess\"><PassphraseDialog {...args} {...routerProps} /></div>} />\n    </MemoryRouter>\n  </AppContext.Provider>",...ErrorPassphrase.parameters?.docs?.source}}}},"./src/react-extension/test/fixture/Settings/userSettings.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={"user.settings.trustedDomain":new URL(window.location.href).origin,"user.firstname":"Ada","user.id":"f848277c-5398-58f8-a82a-72397af2d450","user.lastname":"Lovelace","user.settings.securityToken.code":"TST","user.settings.securityToken.color":"#000000","user.settings.securityToken.textColor":"#FFFFFF","user.username":"ada@passbolt.com","user.settings.locale":"en-UK","user.settings.theme":"default"}},"./src/react-extension/test/mock/MockPort.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function delay(t,v){return new Promise((resolve=>{setTimeout((()=>resolve(v)),t)}))}__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=class MockPort{constructor(storage){this.storage=storage,this.onListeners={},this.requestListeners={},this.emitListener={},this.onConnectErrorHandler={}}async emit(name,eventObject){let result;return console.debug(`PORT EMIT: ${name}`),console.debug("Arguments",eventObject),this.emitListener[name]?(result=await this.emitListener[name](eventObject),console.debug("response: ",result)):console.debug(`The emit ${name} has not been mocked`),delay(0,result)}on(name,callback){console.debug(`PORT ON: ${name}`),console.debug("PORT ON PARAMETERS:",callback),this.addOnListener(name,callback)}async request(name){let result;if(console.debug(`PORT REQUEST: ${name}`),console.debug("PORT REQUEST PARAMETERS:",Array.prototype.slice.call(arguments)),this.requestListeners[name]){const listenerArguments=Array.prototype.slice.call(arguments,1,arguments.length);console.debug("listenerArguments",listenerArguments),listenerArguments.push(this.storage),console.debug("listenerArguments",listenerArguments),result=await this.requestListeners[name](...listenerArguments),console.debug("response: ",result)}else console.debug(`The request ${name} has not been mocked`);return delay(0,result)}addEmitListener(name){console.debug(`PORT EMIT: ${name}`),console.debug("PORT EMIT PARAMETERS:",Array.prototype.slice.call(arguments))}addOnListener(name,callback){this.emitListener[name]=callback}addRequestListener(name,callback){this.requestListeners[name]=callback}onConnectError(callback){this.onConnectErrorHandler.callback=callback}}},"./src/shared/components/Password/Password.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__),_Icons_Icon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/components/Icons/Icon.js"),react_i18next__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class Password extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{viewPassword:!1,hasPassphraseFocus:!1}}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this),this.handlePasswordInputFocus=this.handlePasswordInputFocus.bind(this),this.handlePasswordInputBlur=this.handlePasswordInputBlur.bind(this),this.handleViewPasswordButtonClick=this.handleViewPasswordButtonClick.bind(this)}handleInputChange(event){this.props.onChange&&this.props.onChange(event)}handlePasswordInputFocus(){this.setState({hasPassphraseFocus:!0})}handlePasswordInputBlur(){this.setState({hasPassphraseFocus:!1})}handleViewPasswordButtonClick(){this.props.disabled||this.setState({viewPassword:!this.state.viewPassword})}get securityTokenStyle(){const inverseStyle={background:this.props.securityToken.textColor,color:this.props.securityToken.backgroundColor},fullStyle={background:this.props.securityToken.backgroundColor,color:this.props.securityToken.textColor};return this.state.hasPassphraseFocus?inverseStyle:fullStyle}get passphraseInputStyle(){const fullStyle={background:this.props.securityToken.backgroundColor,color:this.props.securityToken.textColor,"--passphrase-placeholder-color":this.props.securityToken.textColor};return this.state.hasPassphraseFocus?fullStyle:undefined}get previewStyle(){const fullStyle={"--icon-color":this.props.securityToken.textColor,"--icon-background-color":this.props.securityToken.backgroundColor};return this.state.hasPassphraseFocus?fullStyle:void 0}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`input password ${this.props.disabled?"disabled":""} ${this.state.hasPassphraseFocus?"":"no-focus"} ${this.props.securityToken?"security":""}`,style:this.props.securityToken?this.passphraseInputStyle:void 0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{id:this.props.id,name:this.props.name,maxLength:"4096",placeholder:this.props.placeholder,type:this.state.viewPassword&&!this.props.disabled?"text":"password",onKeyUp:this.props.onKeyUp,value:this.props.value,onFocus:this.handlePasswordInputFocus,onBlur:this.handlePasswordInputBlur,onChange:this.handleInputChange,disabled:this.props.disabled,readOnly:this.props.readOnly,autoComplete:this.props.autoComplete,"aria-required":!0,ref:this.props.inputRef}),this.props.preview&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"password-view-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",onClick:this.handleViewPasswordButtonClick,style:this.props.securityToken?this.previewStyle:void 0,className:"password-view infield button-transparent "+(this.props.disabled?"disabled":"")},!this.state.viewPassword&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons_Icon__WEBPACK_IMPORTED_MODULE_1__.A,{name:"eye-open"}),this.state.viewPassword&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons_Icon__WEBPACK_IMPORTED_MODULE_1__.A,{name:"eye-close"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"visually-hidden"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_2__.x6,null,"View")))),this.props.securityToken&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"security-token-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"security-token",style:this.securityTokenStyle},this.props.securityToken.code)))}}Password.defaultProps={id:"",name:"",autoComplete:"off"},Password.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_3___default().any,id:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,name:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,value:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,placeholder:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,autoComplete:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,inputRef:prop_types__WEBPACK_IMPORTED_MODULE_3___default().object,disabled:prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool,preview:prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool,onChange:prop_types__WEBPACK_IMPORTED_MODULE_3___default().func,onKeyUp:prop_types__WEBPACK_IMPORTED_MODULE_3___default().func,securityToken:prop_types__WEBPACK_IMPORTED_MODULE_3___default().shape({code:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,backgroundColor:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,textColor:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string})};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_2__.CI)("common")(Password);Password.__docgenInfo={description:"This component represent a password input field with some additional properties",methods:[{name:"defaultState",docblock:null,modifiers:["get"],params:[],returns:null},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input change.\n@params {ReactEvent} The react event.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle form input change."},{name:"handlePasswordInputFocus",docblock:"Whenever the user focus on the password input",modifiers:[],params:[],returns:null,description:"Whenever the user focus on the password input"},{name:"handlePasswordInputBlur",docblock:"Whenever the user blurs on the password input",modifiers:[],params:[],returns:null,description:"Whenever the user blurs on the password input"},{name:"handleViewPasswordButtonClick",docblock:"Handle view password button click.",modifiers:[],params:[],returns:null,description:"Handle view password button click."},{name:"securityTokenStyle",docblock:"Returns the style of the security token (color and text color)",modifiers:["get"],params:[],returns:null,description:"Returns the style of the security token (color and text color)"},{name:"passphraseInputStyle",docblock:"Get the passphrase input style.\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the passphrase input style."},{name:"previewStyle",docblock:"Returns the style of preview (icon color and icon background color)",modifiers:["get"],params:[],returns:null,description:"Returns the style of preview (icon color and icon background color)"}],displayName:"Password",props:{id:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},name:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},autoComplete:{defaultValue:{value:'"off"',computed:!1},description:"",type:{name:"string"},required:!1},context:{description:"",type:{name:"any"},required:!1},value:{description:"",type:{name:"string"},required:!1},placeholder:{description:"",type:{name:"string"},required:!1},inputRef:{description:"",type:{name:"object"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1},readOnly:{description:"",type:{name:"bool"},required:!1},preview:{description:"",type:{name:"bool"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},onKeyUp:{description:"",type:{name:"func"},required:!1},securityToken:{description:"",type:{name:"shape",value:{code:{name:"string",required:!1},backgroundColor:{name:"string",required:!1},textColor:{name:"string",required:!1}}},required:!1}}}},"./src/shared/lib/Settings/UserSettings.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>UserSettings});class UserSettings{constructor(settings){this.settings=settings}get id(){return this.settings["user.id"]}get fullName(){return`${this.settings["user.firstname"]} ${this.settings["user.lastname"]}`}get username(){return this.settings["user.username"]}getTheme(){return this.settings["user.settings.theme"]}getTrustedDomain(){return this.settings["user.settings.trustedDomain"]}getSecurityToken(){return{code:this.settings["user.settings.securityToken.code"],backgroundColor:this.settings["user.settings.securityToken.color"],textColor:this.settings["user.settings.securityToken.textColor"]}}get locale(){return this.settings["user.settings.locale"]}}}}]);