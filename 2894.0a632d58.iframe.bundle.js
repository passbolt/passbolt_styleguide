"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[2894],{"./src/shared/models/entity/metadata/metadataPrivateKeyEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>metadataPrivateKeyEntity});var entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),entityV2=__webpack_require__("./src/shared/models/entity/abstract/entityV2.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js");class MetadataPrivateKeyDataEntity extends entityV2.A{static getSchema(){return{type:"object",required:["object_type","domain","fingerprint","armored_key","passphrase"],properties:{object_type:{type:"string",enum:["PASSBOLT_METADATA_PRIVATE_KEY"]},domain:{type:"string",maxLength:1024},fingerprint:{type:"string",pattern:/^[a-f0-9]{40}$/im},armored_key:{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP PRIVATE KEY BLOCK-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP PRIVATE KEY BLOCK-----([\r\n]*)$/},passphrase:{type:"string",maxLength:1024}}}}get armoredKey(){return this._props.armored_key}get fingerprint(){return this._props.fingerprint}}const metadataPrivateKeyDataEntity=MetadataPrivateKeyDataEntity;var userEntity=__webpack_require__("./src/shared/models/entity/user/userEntity.js");class MetadataPrivateKeyEntity extends entityV2.A{constructor(dto,options={}){super(dto,options),this._props.data&&"string"!=typeof this._props.data&&(this._data=new metadataPrivateKeyDataEntity(this._props.data,{...options,clone:!1}),delete this._props.data)}static getSchema(){return{type:"object",required:["user_id","data"],properties:{id:{type:"string",format:"uuid",nullable:!0},metadata_key_id:{type:"string",format:"uuid",nullable:!0},user_id:{type:"string",format:"uuid",nullable:!0},data_signed_by_current_user:{type:"string",format:"date-time",nullable:!0},data:{anyOf:[{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP MESSAGE-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP MESSAGE-----([\r\n]*)$/},{type:"object"}]},created:{type:"string",format:"date-time"},created_by:{type:"string",format:"uuid",nullable:!0},modified:{type:"string",format:"date-time"},modified_by:{type:"string",format:"uuid",nullable:!0}}}}validateBuildRules(){if(Boolean(this._props.data)&&Boolean(this._data)){const error=new entityValidationError.A,message="The property data and _data cannot be set at the same time";throw error.addError("data","only-one-defined",message),error}}toDto(contain){const result=Object.assign({},this._props),data=this.data;return result.data=data instanceof metadataPrivateKeyDataEntity?data.toDto():data,contain?(this._creator&&contain.creator&&(result.creator=this._creator.toDto(userEntity.A.ALL_CONTAIN_OPTIONS)),result):result}toDataDto(){return{data:this.toDto().data}}toContentCodeConfirmTrustRequestDto(){const result=this.toDto();return delete result.data,result}toJSON(){return this.toDto(userEntity.A.ALL_CONTAIN_OPTIONS)}cloneForSharing(userId){const cloneDto={user_id:userId,metadata_key_id:this.metadataKeyId,data:this.data};return new MetadataPrivateKeyEntity(cloneDto)}marshall(){}get data(){return this.isDecrypted?this._data:this._props.data}get id(){return this._props.id||null}get metadataKeyId(){return this._props.metadata_key_id||null}get isDecrypted(){return Boolean(this._data)}get userId(){return this._props.user_id}get dataSignedByCurrentUser(){return this._props.data_signed_by_current_user||null}get modifiedBy(){return this._props.modified_by}get modified(){return this._props.modified}set modified(modified){this._props.modified=modified}set modifiedBy(modifiedBy){this._props.modifiedBy=modifiedBy}set data(data){entitySchema.A.validateProp("data",data,this.cachedSchema.properties.data),"string"==typeof data?(this._props.data=data,delete this._data):(this._data=new metadataPrivateKeyDataEntity(data.toDto(),{clone:!0,validate:!1}),delete this._props.data)}set dataSignedByCurrentUser(value){entitySchema.A.validateProp("data_signed_by_current_user",value,this.cachedSchema.properties.data_signed_by_current_user),this._props.data_signed_by_current_user=value}static get ALL_CONTAIN_OPTIONS(){return{creator:!0}}}const metadataPrivateKeyEntity=MetadataPrivateKeyEntity},"./src/shared/models/entity/user/userEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>userEntity});var entityV2=__webpack_require__("./src/shared/models/entity/abstract/entityV2.js"),roleEntity=__webpack_require__("./src/shared/models/entity/role/roleEntity.js");class GpgkeyEntity extends entityV2.A{static getSchema(){return{type:"object",required:["user_id","armored_key"],properties:{id:{type:"string",format:"uuid"},user_id:{type:"string",format:"uuid"},fingerprint:{type:"string",minLength:40,maxLength:40},armored_key:{type:"string"},deleted:{type:"boolean"},type:{type:"string",nullable:!0},uid:{type:"string"},bits:{type:"integer",nullable:!0},key_id:{type:"string",minLength:8,maxLength:16},key_created:{type:"string",format:"date-time"},expires:{type:"string",format:"date-time",nullable:!0},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"}}}}get id(){return this._props.id||null}get userId(){return this._props.user_id}get armoredKey(){return this._props.armored_key}get fingerprint(){return this._props.fingerprint}get created(){return this._props.created||null}get modified(){return this._props.modified||null}get isDeleted(){return void 0===this._props.deleted?null:this._props.deleted}static get ENTITY_NAME(){return"gpgkey"}}const gpgkeyEntity=GpgkeyEntity;class AvatarUrlEntity extends entityV2.A{static getSchema(){return{type:"object",required:[AvatarUrlEntity.AVATAR_URL_SIZE_MEDIUM,AvatarUrlEntity.AVATAR_URL_SIZE_SMALL],properties:{medium:{type:"string"},small:{type:"string"}}}}get medium(){return this._props.medium}get small(){return this._props.small}static get ENTITY_NAME(){return"AvatarUrl"}static get AVATAR_URL_SIZE_MEDIUM(){return"medium"}static get AVATAR_URL_SIZE_SMALL(){return"small"}}const avatarUrlEntity=AvatarUrlEntity;class AvatarEntity extends entityV2.A{constructor(dto={},options={}){super(dto,options),this._props.url&&(this._url=new avatarUrlEntity(this._props.url,{...options,clone:!1}),delete this._props.url)}static getSchema(){return{type:"object",required:["url"],properties:{id:{type:"string",format:"uuid"},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"},url:avatarUrlEntity.getSchema()}}}get id(){return this._props.id||null}get urlMedium(){return this._url.medium}get urlSmall(){return this._url.small}get created(){return this._props.created||null}get modified(){return this._props.modified||null}toDto(contain){const result=super.toDto(contain);return result.url=this._url.toDto(),result}static get ENTITY_NAME(){return"Avatar"}static get AVATAR_URL_SIZE_MEDIUM(){return"medium"}static get AVATAR_URL_SIZE_SMALL(){return"small"}}const avatarEntity=AvatarEntity;class ProfileEntity extends entityV2.A{constructor(dto={},options={}){super(dto,options),this._props.avatar&&(this._avatar=new avatarEntity(this._props.avatar,{...options,clone:!1}),delete this._props.avatar)}static getSchema(){return{type:"object",required:["first_name","last_name"],properties:{id:{type:"string",format:"uuid"},user_id:{type:"string",format:"uuid"},first_name:{type:"string",minLength:1,maxLength:255},last_name:{type:"string",minLength:1,maxLength:255},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"},avatar:avatarEntity.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return this.avatar&&contain&&contain.avatar&&(result.avatar=this.avatar.toDto()),result}toJSON(){return this.toDto(ProfileEntity.ALL_CONTAIN_OPTIONS)}static get ENTITY_NAME(){return"Profile"}static get ALL_CONTAIN_OPTIONS(){return{avatar:!0}}get id(){return this._props.id||null}get name(){return`${this._props.first_name} ${this._props.last_name}`}get firstName(){return this._props.first_name}get lastName(){return this._props.last_name}get userId(){return this._props.user_id||null}get created(){return this._props.created||null}get modified(){return this._props.modified||null}get avatar(){return this._avatar||null}}const profileEntity=ProfileEntity;class UserEntity extends entityV2.A{constructor(dto,options={}){super(dto,options),this._props.profile&&(this._profile=new profileEntity(this._props.profile,{...options,clone:!1}),delete this._props.profile),this._props.role&&(this._role=new roleEntity.A(this._props.role,{...options,clone:!1}),delete this._props.role),this._props.gpgkey&&(this._gpgkey=new gpgkeyEntity(this._props.gpgkey,{...options,clone:!1}),delete this._props.gpgkey)}marshall(){""===this._props.last_logged_in&&(this._props.last_logged_in=null),super.marshall()}static getSchema(){return{type:"object",required:["username"],properties:{id:{type:"string",format:"uuid"},role_id:{type:"string",format:"uuid"},username:{type:"string"},active:{type:"boolean"},deleted:{type:"boolean"},disabled:{type:"string",format:"date-time",nullable:!0},missing_metadata_key_ids:{type:"array",items:{type:"string",format:"uuid"}},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"},role:roleEntity.A.getSchema(),profile:profileEntity.getSchema(),gpgkey:gpgkeyEntity.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return contain?(this.role&&contain.role&&(result.role=this.role.toDto()),this.profile&&contain.profile&&(!0===contain.profile?result.profile=this.profile.toDto():result.profile=this.profile.toDto(contain.profile)),this.gpgkey&&contain.gpgkey&&(result.gpgkey=this.gpgkey.toDto()),result):result}toJSON(){return this.toDto(UserEntity.ALL_CONTAIN_OPTIONS)}get id(){return this._props.id||null}get roleId(){return this._props.role_id||null}get username(){return this._props.username}get isActive(){return void 0===this._props.active?null:this._props.active}get isDeleted(){return void 0===this._props.deleted?null:this._props.deleted}get missingMetadataKeysIds(){return this._props.missing_metadata_key_ids||[]}get created(){return this._props.created||null}get modified(){return this._props.modified||null}set missingMetadataKeysIds(missingMetadataKeysIds){this._props.missing_metadata_key_ids=missingMetadataKeysIds}static get ALL_CONTAIN_OPTIONS(){return{profile:profileEntity.ALL_CONTAIN_OPTIONS,role:!0,gpgkey:!0}}static get ENTITY_NAME(){return"User"}get profile(){return this._profile||null}get role(){return this._role||null}get gpgkey(){return this._gpgkey||null}}const userEntity=UserEntity}}]);