/*! For license information please see 1812.d7348958.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1812],{"./src/react-extension/components/UserSetting/UploadUserProfileAvatar/UploadUserProfileAvatar.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__),_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),react_i18next__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class UploadUserProfileAvatar extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.bindHandlers(),this.createReferences()}get defaultState(){return{avatarFile:null,actions:{processing:!1},errors:{message:null},validation:{hasAlreadyBeenValidated:!1}}}createReferences(){this.fileUploaderRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef()}get user(){return this.props.context.loggedInUser}get isProcessing(){return this.state.actions.processing}get areActionsAllowed(){return!this.isProcessing}get hasValidationError(){return null!==this.state.errors.message}bindHandlers(){this.handleSelectFile=this.handleSelectFile.bind(this),this.handleAvatarFileSelected=this.handleAvatarFileSelected.bind(this),this.handleUpload=this.handleUpload.bind(this),this.handleCancel=this.handleCancel.bind(this),this.handleClose=this.handleClose.bind(this)}handleSelectFile(){this.fileUploaderRef.current.click()}async handleAvatarFileSelected(event){const[avatarFile]=event.target.files;if(await this.select(avatarFile),this.state.validation.hasAlreadyBeenValidated){const state=this.validateAvatarInput();this.setState(state)}}handleUpload(event){event.preventDefault(),this.upload()}handleCancel(){this.close()}handleClose(){this.close()}async select(avatarFile){await this.setState({avatarFile})}async upload(){if(this.state.actions.processing)return;if(await this.setState({validation:{hasAlreadyBeenValidated:!0}}),await this.toggleProcessing(),await this.validateAvatarInput(),this.hasValidationError)return void await this.toggleProcessing();const avatarDto=await this.createAvatarDto();await this.props.context.port.request("passbolt.users.update-avatar",this.user.id,avatarDto).then(this.onUploadSuccess.bind(this)).catch(this.onUploadFailure.bind(this))}async createAvatarDto(){const{fileBase64,mimeType}=await this.readFile();return{fileBase64,mimeType,filename:this.selectedFilename}}async validateAvatarInput(){let message=null;return this.state.avatarFile||(message=this.translate("A file is required.")),this.setState({errors:{message}})}async onUploadSuccess(){await this.toggleProcessing(),await this.refreshUserProfile(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The user has been updated successfully")),this.props.onClose()}async onUploadFailure(error){if(console.error(error),await this.toggleProcessing(),this.hasFileError(error.data))this.setState({errors:{message:error.data.body.profile.avatar.file.validMimeType}});else{const errorDialogProps={error};this.props.dialogContext.open(_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_7__.A,errorDialogProps)}}hasFileError(errorData){return errorData&&errorData.body&&errorData.body.profile&&errorData.body.profile.avatar&&errorData.body.profile.avatar.file&&errorData.body.profile.avatar.file.validMimeType}close(){this.props.onClose()}readFile(){const reader=new FileReader;return new Promise(((resolve,reject)=>{reader.onloadend=event=>{try{const base64Url=event.target.result,fileBase64=base64Url.split(",")[1],mimeType=base64Url.split(",")[0].split(":")[1].split(";")[0];resolve({fileBase64,mimeType})}catch(e){reject(e)}},reader.readAsDataURL(this.state.avatarFile)}))}async toggleProcessing(){const previousValue=this.state.actions.processing;await this.setState({actions:Object.assign(this.state.actions,{processing:!previousValue})})}async refreshUserProfile(){const loggedInUser=await this.props.context.port.request("passbolt.users.find-logged-in-user",!0);this.props.context.setContext({loggedInUser})}get selectedFilename(){return this.state.avatarFile?this.state.avatarFile.name:""}get translate(){return this.props.t}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_1__.A,{className:"update-avatar-dialog",onClose:this.handleClose,disabled:!this.areActionsAllowed,title:this.translate("Edit Avatar")},react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:this.handleUpload,noValidate:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`input file required ${this.areActionsAllowed?"":"disabled"} ${this.hasValidationError?"error":""}`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{"aria-required":!0,id:"dialog-upload-avatar-input",type:"file",ref:this.fileUploaderRef,onChange:this.handleAvatarFileSelected,accept:"image/*"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:"dialog-upload-avatar-input"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_8__.x6,null,"Avatar")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input-file-inline"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"text",disabled:!0,placeholder:this.translate("No file selected"),defaultValue:this.selectedFilename}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",disabled:!this.areActionsAllowed,className:"primary",onClick:this.handleSelectFile},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"ellipsis"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_8__.x6,null,"Choose a file")))),this.state.errors.message&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"error-message"},this.state.errors.message))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_5__.A,{disabled:!this.areActionsAllowed,processing:this.isProcessing,onClick:this.handleCancel}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_4__.A,{disabled:!this.areActionsAllowed,processing:this.isProcessing,value:this.translate("Save")}))))}}UploadUserProfileAvatar.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_9___default().any,onClose:prop_types__WEBPACK_IMPORTED_MODULE_9___default().func,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_9___default().object,actionFeedbackContext:prop_types__WEBPACK_IMPORTED_MODULE_9___default().object,t:prop_types__WEBPACK_IMPORTED_MODULE_9___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_2__.L)((0,_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_6__.ot)((0,_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_3__.z9)((0,react_i18next__WEBPACK_IMPORTED_MODULE_8__.CI)("common")(UploadUserProfileAvatar))));UploadUserProfileAvatar.__docgenInfo={description:"This component displays the user profile information",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"createReferences",docblock:"Create elements references",modifiers:[],params:[],returns:null,description:"Create elements references"},{name:"user",docblock:"Returns the current user",modifiers:["get"],params:[],returns:null,description:"Returns the current user"},{name:"isProcessing",docblock:"Return trus if the export is processing",modifiers:["get"],params:[],returns:null,description:"Return trus if the export is processing"},{name:"areActionsAllowed",docblock:"Returns true if actions can be performed",modifiers:["get"],params:[],returns:null,description:"Returns true if actions can be performed"},{name:"hasValidationError",docblock:"Returns true if the an error message is set",modifiers:["get"],params:[],returns:null,description:"Returns true if the an error message is set"},{name:"bindHandlers",docblock:"Bind the components handlers",modifiers:[],params:[],returns:null,description:"Bind the components handlers"},{name:"handleSelectFile",docblock:"Handle the selection of a file by file explorer",modifiers:[],params:[],returns:null,description:"Handle the selection of a file by file explorer"},{name:"handleAvatarFileSelected",docblock:"Whenever the user selects a profile picture file\n@param event A dom event",modifiers:["async"],params:[{name:"event",description:"A dom event",optional:!1}],returns:null,description:"Whenever the user selects a profile picture file"},{name:"handleUpload",docblock:"Whenever the user wants to upload a new picture\n@param event A DOM event",modifiers:[],params:[{name:"event",description:"A DOM event",optional:!1}],returns:null,description:"Whenever the user wants to upload a new picture"},{name:"handleCancel",docblock:"Whenever the user wants to cancel the operation",modifiers:[],params:[],returns:null,description:"Whenever the user wants to cancel the operation"},{name:"handleClose",docblock:"Whenever the user wants to close the dialog",modifiers:[],params:[],returns:null,description:"Whenever the user wants to close the dialog"},{name:"select",docblock:"Select the next avatar profile\n@param avatarFile",modifiers:["async"],params:[{name:"avatarFile",optional:!1}],returns:null,description:"Select the next avatar profile"},{name:"upload",docblock:"Upload the new profile avatar",modifiers:["async"],params:[],returns:null,description:"Upload the new profile avatar"},{name:"createAvatarDto",docblock:"Create the avatar Dto\n@returns {{filename: string, mimeType, fileBase64}}",modifiers:["async"],params:[],returns:{},description:"Create the avatar Dto"},{name:"validateAvatarInput",docblock:"Validate the avatar input.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Validate the avatar input."},{name:"onUploadSuccess",docblock:"Whenever the upload succeeded",modifiers:["async"],params:[],returns:null,description:"Whenever the upload succeeded"},{name:"onUploadFailure",docblock:"Whenever the upload failed",modifiers:["async"],params:[{name:"error",optional:!1}],returns:null,description:"Whenever the upload failed"},{name:"hasFileError",docblock:"has file error\n@param errorData the error data received\n@returns {*}",modifiers:[],params:[{name:"errorData",description:"the error data received",optional:!1}],returns:{type:{name:"mixed"}},description:"has file error"},{name:"close",docblock:"Close the dialog",modifiers:[],params:[],returns:null,description:"Close the dialog"},{name:"readFile",docblock:"Read the selected file and returns its content in a base 64",modifiers:[],params:[],returns:null,description:"Read the selected file and returns its content in a base 64"},{name:"toggleProcessing",docblock:"Toggle processing state\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle processing state"},{name:"refreshUserProfile",docblock:"Refresh the user profile",modifiers:["async"],params:[],returns:null,description:"Refresh the user profile"},{name:"selectedFilename",docblock:"Returns the selected file's name\n@return {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the selected file's name"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"UploadUserProfileAvatar",props:{context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);