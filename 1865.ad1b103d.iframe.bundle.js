/*! For license information please see 1865.ad1b103d.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1865],{"./src/react-extension/components/Share/ShareDialog.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Share_ShareDialog});var react=__webpack_require__("./node_modules/react/index.js"),react_list=__webpack_require__("./node_modules/react-list/react-list.js"),react_list_default=__webpack_require__.n(react_list),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),FormSubmitButton=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),DialogWrapper=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),FormCancelButton=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),Autocomplete=__webpack_require__("./src/react-extension/components/Common/Inputs/Autocomplete/Autocomplete.js");class ShareChanges{constructor(resources,folders){this._folders=folders||[],this._resources=resources||[],this._permissions=[],this._aroPermissions=[],this._aros={},this._acos=[],this._resources.forEach((resource=>{resource._type="Resource",this._acos.push(resource)})),this._folders.forEach((folder=>{folder._type="Folder",this._acos.push(folder)})),this._acos.forEach((aco=>{aco.permissions.forEach((permission=>{const aro=permission.user||permission.group;this._aros[aro.id]||(this._aros[aro.id]=aro),this._permissions.push(permission)}))})),this._changes=[]}getChanges(){return this._changes}getResourcesChanges(){return this._changes.filter((element=>"Resource"===element.aco))}getFoldersChanges(){return this._changes.filter((element=>"Folder"===element.aco))}getAcos(){return this._acos}isOriginalResourcesOwner(){return this._acos.reduce(((carry,aco)=>carry&&15===aco.permission.type),!0)}aggregatePermissionsByAro(){const arosPermissions=this._permissions.reduce(((carry,permission)=>{let aroPermission=carry.find((_data=>_data.id===permission.aro_foreign_key));if(!aroPermission){const aro=permission.user||permission.group;aroPermission={id:aro.id,aro,type:permission.type,permissions:[]},carry.push(aroPermission)}return aroPermission.type=aroPermission.type===permission.type?aroPermission.type:-1,aroPermission.permissions.push(permission),carry}),[]);return arosPermissions.forEach((aroPermissions=>{aroPermissions.permissions.length!==this._acos.length&&(aroPermissions.type=-1),-1===aroPermissions.type&&(aroPermissions.variesDetails=this._acos.reduce(((carry,aco)=>{const result=aroPermissions.permissions.filter((permission=>permission.aco_foreign_key===aco.id)),carryType=result[0]?.type||0,acoName=aco.metadata.name;return carry[carryType].push(acoName),carry}),{0:[],1:[],7:[],15:[]}))})),arosPermissions.sort(((a,b)=>{const aValue=a.aro.profile?a.aro.profile.first_name:a.aro.name,bValue=b.aro.profile?b.aro.profile.first_name:b.aro.name;return aValue<bValue?-1:aValue>bValue?1:0})),this._aroPermissions=arosPermissions,this._aroPermissions}hasChanges(aroId){return void 0!==this._changes.find((change=>change.aro_foreign_key===aroId))}addAroPermissions(aro){return this._aros[aro.id]=aro,this.updateAroPermissions(aro.id,1),{id:aro.id,aro,type:1,permissions:[]}}updateAroPermissions(aroId,type){this._removeAroChanges(aroId),this._acos.forEach((aco=>{const permissionOriginal=this.getAcoAroPermission(aco,aroId);if(permissionOriginal){if(permissionOriginal.type!==type){const permissionChange=JSON.parse(JSON.stringify(permissionOriginal));permissionChange.type=type,this._changes.push(permissionChange)}}else{const aro=this._aros[aroId],permissionChange=this._buildChange(aco,aro,type);this._changes.push(permissionChange)}}))}deleteAroPermissions(aroId){this._removeAroChanges(aroId),this._acos.forEach((aco=>{const permissionOriginal=this.getAcoAroPermission(aco,aroId);if(permissionOriginal){const permissionChange=JSON.parse(JSON.stringify(permissionOriginal));permissionChange.delete=!0,this._changes.push(permissionChange)}})),delete this._aros[aroId]}getAcoAroPermission(aco,aroId){return this._permissions.find((permission=>permission.aro_foreign_key===aroId&&permission.aco_foreign_key===aco.id))}getResourcesWithNoOwner(){return this._acos.filter((aco=>{const changes=this._changes.filter((change=>change.aco_foreign_key===aco.id));if(changes.find((change=>15===change.type&&!change.delete)))return!1;const originalOwnersPermissionsIds=this._permissions.reduce(((carry,permission)=>(permission.aco_foreign_key===aco.id&&15===permission.type&&(carry=[...carry,permission.id]),carry)),[]);return changes.filter((change=>(change.delete||15!==change.type)&&-1!==originalOwnersPermissionsIds.indexOf(change.id))).length===originalOwnersPermissionsIds.length}))}_removeAroChanges(aroId){this._acos.forEach((aco=>{this._changes=this._changes.filter((change=>!(change.aco_foreign_key===aco.id&&change.aro_foreign_key===aroId)))}))}_buildChange(aco,aro,type){return{is_new:!0,aro:aro.profile?"User":"Group",aro_foreign_key:aro.id,aco:aco._type,aco_foreign_key:aco.id,type}}}var es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),svg_close=__webpack_require__("./src/img/svg/close.svg");class SharePermissionDeleteButton extends react.Component{handleCloseClick(){this.props.onClose()}getClassName(){let className="remove-item button inline button-transparent";return this.props.disabled&&(className+=" disabled"),className}render(){return react.createElement("button",{type:"button",className:this.getClassName(),onClick:this.handleCloseClick.bind(this)},react.createElement(svg_close.A,null),react.createElement("span",{className:"visually-hidden"},react.createElement(es.x6,null,"Remove")))}}SharePermissionDeleteButton.propTypes={onClose:prop_types_default().func,disabled:prop_types_default().bool};const Share_SharePermissionDeleteButton=(0,es.CI)("common")(SharePermissionDeleteButton);SharePermissionDeleteButton.__docgenInfo={description:"",methods:[{name:"handleCloseClick",docblock:null,modifiers:[],params:[],returns:null},{name:"getClassName",docblock:null,modifiers:[],params:[],returns:null}],displayName:"SharePermissionDeleteButton",props:{onClose:{description:"",type:{name:"func"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1}}};class ShareVariesDetails extends react.Component{render(){return react.createElement("span",{className:"share-varies-details"},this.props.variesDetails[0].length>0&&react.createElement("span",null,react.createElement("strong",null,react.createElement(es.x6,null,"No access"),": ",this.props.variesDetails[0].join(", ")),react.createElement("br",null)),this.props.variesDetails[1].length>0&&react.createElement("span",null,react.createElement("strong",null,react.createElement(es.x6,null,"Can read"),": ",this.props.variesDetails[1].join(", ")),react.createElement("br",null)),this.props.variesDetails[7].length>0&&react.createElement("span",null,react.createElement("strong",null,react.createElement(es.x6,null,"Can edit"),": ",this.props.variesDetails[7].join(", ")),react.createElement("br",null)),this.props.variesDetails[15].length>0&&react.createElement("span",null,react.createElement("strong",null,react.createElement(es.x6,null,"Is owner"),": ",this.props.variesDetails[15].join(", ")),react.createElement("br",null)))}}ShareVariesDetails.propTypes={variesDetails:prop_types_default().object};const Share_ShareVariesDetails=(0,es.CI)("common")(ShareVariesDetails);ShareVariesDetails.__docgenInfo={description:"",methods:[],displayName:"ShareVariesDetails",props:{variesDetails:{description:"",type:{name:"object"},required:!1}}};var AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),UserAvatar=__webpack_require__("./src/react-extension/components/Common/Avatar/UserAvatar.js"),GroupAvatar=__webpack_require__("./src/react-extension/components/Common/Avatar/GroupAvatar.js"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),userUtils=__webpack_require__("./src/shared/utils/userUtils.js"),TooltipPortal=__webpack_require__("./src/react-extension/components/Common/Tooltip/TooltipPortal.js"),TooltipMessageFingerprintLoading=__webpack_require__("./src/react-extension/components/Common/Tooltip/TooltipMessageFingerprintLoading.js"),Fingerprint=__webpack_require__("./src/react-extension/components/Common/Fingerprint/Fingerprint.js"),attention=__webpack_require__("./src/img/svg/attention.svg"),fingerprint=__webpack_require__("./src/img/svg/fingerprint.svg");class SharePermissionItem extends react.Component{constructor(props){if(super(props),this.state=this.defaultState,!Number.isInteger(props.permissionType))throw new TypeError(this.translate("Invalid permission type for share permission item."));this.state.permissionType=props.permissionType,this.bindEventHandlers()}get defaultState(){return{tooltipFingerprintMessage:null}}componentDidUpdate(prevProps){prevProps.permissionType!==this.props.permissionType&&this.setState({permissionType:this.props.permissionType})}bindEventHandlers(){this.handleUpdate=this.handleUpdate.bind(this),this.handleDelete=this.handleDelete.bind(this),this.onTooltipFingerprintMouseHover=this.onTooltipFingerprintMouseHover.bind(this)}getAroDetails(){return this.props.aro.profile?this.props.aro.username:"Group"}isInputDisabled(){return this.props.disabled}getSelectClassName(){return this.isInputDisabled()?"permission inline disabled":"permission inline"}getAroName(){if(this.props.aro.profile){const profile=this.props.aro.profile;return`${profile.first_name} ${profile.last_name}${this.isUserSuspended?` ${this.translate("(suspended)")}`:""}`}return this.props.aro.name}async onTooltipFingerprintMouseHover(){if(this.state.tooltipFingerprintMessage)return;const gpgkey=await this.props.context.port.request("passbolt.keyring.get-public-key-info-by-user",this.props.aro.id),tooltipFingerprintMessage=react.createElement(Fingerprint.A,{fingerprint:gpgkey.fingerprint});this.setState({tooltipFingerprintMessage})}isUser(){return!this.isGroup()}isGroup(){return!(this.props.aro&&this.props.aro.profile)}getClassName(){let className="row";return this.props.updated&&(className+=" permission-updated"),this.isUserSuspended&&(className+=" suspended"),className}handleUpdate(event){const newType=parseInt(event.target.value);this.props.onUpdate(this.props.id,newType)}handleDelete(){this.props.onDelete(this.props.id)}get permissions(){const permissions=[{value:"1",label:this.translate("can read")},{value:"7",label:this.translate("can update")},{value:"15",label:this.translate("is owner")}];return this.props.variesDetails&&permissions.push({value:"-1",label:this.translate("varies")}),permissions}get isUserSuspended(){return this.props.context.siteSettings.canIUse("disableUser")&&(0,userUtils.B7)(this.props.aro)}get translate(){return this.props.t}render(){return react.createElement("li",{id:`permission-item-${this.props.id}`,className:this.getClassName()},this.isUser()&&react.createElement(UserAvatar.A,{user:this.props.aro,baseUrl:this.props.context.userSettings.getTrustedDomain()}),this.isGroup()&&react.createElement(GroupAvatar.A,{group:this.props.aro}),react.createElement("div",{className:"aro"},react.createElement("div",{className:"aro-name"},react.createElement("span",{className:"ellipsis"},this.getAroName()),this.isUser()&&react.createElement(TooltipPortal.A,{message:this.state.tooltipFingerprintMessage||react.createElement(TooltipMessageFingerprintLoading.A,null),onMouseHover:this.onTooltipFingerprintMouseHover},react.createElement(fingerprint.A,null))),react.createElement("div",{className:"aro-details"},react.createElement("span",{className:"ellipsis"},this.getAroDetails()))),this.props.variesDetails&&react.createElement(TooltipPortal.A,{message:react.createElement(Share_ShareVariesDetails,{variesDetails:this.props.variesDetails})},react.createElement(attention.A,{className:"attention-required"})),react.createElement("div",{className:"rights"},react.createElement(Select.A,{name:"permissionSelect",className:this.getSelectClassName(),items:this.permissions,value:this.state.permissionType.toString(),disabled:this.isInputDisabled(),onChange:this.handleUpdate,direction:"bottom"})),react.createElement("div",{className:"actions"},react.createElement(Share_SharePermissionDeleteButton,{onClose:this.handleDelete,disabled:this.isInputDisabled()})))}}SharePermissionItem.propTypes={context:prop_types_default().any,id:prop_types_default().string,aro:prop_types_default().object,variesDetails:prop_types_default().object,updated:prop_types_default().bool,disabled:prop_types_default().bool,onUpdate:prop_types_default().func,onDelete:prop_types_default().func,permissionType:prop_types_default().number,t:prop_types_default().func};const Share_SharePermissionItem=(0,AppContext.L)((0,es.CI)("common")(SharePermissionItem));SharePermissionItem.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"bindEventHandlers",docblock:null,modifiers:[],params:[],returns:null},{name:"getAroDetails",docblock:"R\n@returns {string} Group or User name",modifiers:[],params:[],returns:{description:"Group or User name",type:{name:"string"}},description:"R"},{name:"isInputDisabled",docblock:null,modifiers:[],params:[],returns:null},{name:"getSelectClassName",docblock:null,modifiers:[],params:[],returns:null},{name:"getAroName",docblock:null,modifiers:[],params:[],returns:null},{name:"onTooltipFingerprintMouseHover",docblock:"Handle whenever the user passes its mouse hover the tooltip.\n@returns {Promise<JSX>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"JSX"}]}},description:"Handle whenever the user passes its mouse hover the tooltip."},{name:"isUser",docblock:"Return true if aro in props is a user\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if aro in props is a user"},{name:"isGroup",docblock:"Return true if aro in props is a group\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if aro in props is a group"},{name:"getClassName",docblock:null,modifiers:[],params:[],returns:null},{name:"handleUpdate",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"handleDelete",docblock:null,modifiers:[],params:[],returns:null},{name:"permissions",docblock:"Get the permissions\n@returns {[{label: string, value: string}]}",modifiers:["get"],params:[],returns:{type:{name:"tuple",elements:[]}},description:"Get the permissions"},{name:"isUserSuspended",docblock:"Returns true if the feature flag disableUser is enabled and the given user is suspended.\n@param {object} user\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the feature flag disableUser is enabled and the given user is suspended."},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"SharePermissionItem",props:{context:{description:"",type:{name:"any"},required:!1},id:{description:"",type:{name:"string"},required:!1},aro:{description:"",type:{name:"object"},required:!1},variesDetails:{description:"",type:{name:"object"},required:!1},updated:{description:"",type:{name:"bool"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1},onUpdate:{description:"",type:{name:"func"},required:!1},onDelete:{description:"",type:{name:"func"},required:!1},permissionType:{description:"",type:{name:"number"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var SharePermissionItemSkeleton=__webpack_require__("./src/react-extension/components/Share/SharePermissionItemSkeleton.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),ResourceWorkspaceContext=__webpack_require__("./src/react-extension/contexts/ResourceWorkspaceContext.js");class ShareDialog extends react.Component{constructor(props){super(props),this.resources=[],this.folders=[],this.state=this.getDefaultState(),this.shareChanges=null,this.permissionListRef=react.createRef(),this.bindEventHandlers()}async componentDidMount(){this.props.context.shareDialogProps.resourcesIds&&(this.resources=await this.props.context.port.request("passbolt.resources.find-all-by-ids-for-display-permissions",this.props.context.shareDialogProps.resourcesIds)),this.props.context.shareDialogProps.foldersIds&&(this.folders=await this.props.context.port.request("passbolt.share.get-folders",this.props.context.shareDialogProps.foldersIds)),this.shareChanges=new ShareChanges(this.resources,this.folders);const permissions=this.shareChanges.aggregatePermissionsByAro();this.setState({loading:!1,name:"",permissions},(()=>{this.permissionListRef.current.scrollTo(0)}))}getDefaultState(){return{loading:!0,processing:!1,permissions:null,autocompleteOpen:!1}}bindEventHandlers(){this.handleClose=this.handleClose.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleAutocompleteSelect=this.handleAutocompleteSelect.bind(this),this.handleAutocompleteClose=this.handleAutocompleteClose.bind(this),this.handleAutocompleteOpen=this.handleAutocompleteOpen.bind(this),this.fetchAutocompleteItems=this.fetchAutocompleteItems.bind(this),this.handlePermissionUpdate=this.handlePermissionUpdate.bind(this),this.handlePermissionDelete=this.handlePermissionDelete.bind(this),this.renderItem=this.renderItem.bind(this),this.renderContainer=this.renderContainer.bind(this)}handleClose(){this.props.onClose()}handleAutocompleteOpen(){this.setState({autocompleteOpen:!0})}handleAutocompleteClose(){this.setState({autocompleteOpen:!1})}async handleFormSubmit(event){if(event.preventDefault(),!this.state.autocompleteOpen&&!this.state.processing&&!this.state.autocompleteItems){await this.toggleProcessing();try{await this.shareSave(),await this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}}}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.translate("The permissions have been changed successfully.")),await this.props.resourceWorkspaceContext.onResourceShared(),this.props.onClose()}handleSaveError(error){this.setState({processing:!1}),"UserAbortsOperationError"!==error?.name&&"UntrustedMetadataKeyError"!==error?.name?(console.error(error),this.props.dialogContext.open(NotifyError.A,{error})):console.warn(error)}handleAutocompleteSelect(aro){const existing=this.state.permissions.filter((permission=>permission.aro.id===aro.id));if(existing.length>0)return;const permission=this.shareChanges.addAroPermissions(aro);permission.updated=!0;const permissions=this.state.permissions;permissions.push(permission),this.setState({permissions},(()=>{this.permissionListRef.current.scrollTo(this.state.permissions.length-1)}))}handlePermissionUpdate(aroId,type){this.shareChanges.updateAroPermissions(aroId,type);const newPermissions=this.state.permissions.map((permission=>(permission.aro.id===aroId&&(permission.type=type,permission.updated=this.shareChanges.hasChanges(aroId)),permission)));this.setState({permissions:newPermissions})}handlePermissionDelete(aroId){this.shareChanges.deleteAroPermissions(aroId);const newPermissions=this.state.permissions.filter((permission=>permission.aro.id!==aroId));this.setState({permissions:newPermissions})}async shareSave(){if(this.props.context.shareDialogProps.resourcesIds&&this.props.context.shareDialogProps.foldersIds)throw new Error(this.translate("Multi resource and folder share is not implemented."));this.props.context.shareDialogProps.resourcesIds?await this.props.context.port.request("passbolt.share.resources.save",this.props.context.shareDialogProps.resourcesIds,this.shareChanges.getResourcesChanges()):this.props.context.shareDialogProps.foldersIds&&await this.props.context.port.request("passbolt.share.folders.save",this.props.context.shareDialogProps.foldersIds[0],this.shareChanges.getFoldersChanges())}async fetchAutocompleteItems(keyword){keyword=keyword.toLowerCase();const matchingUsersAndGroups=await this.props.context.port.request("passbolt.share.search-aros",keyword),permissions=this.state.permissions;let currentcount=0;return matchingUsersAndGroups.filter((userOrGroup=>{const isMatching=currentcount<Autocomplete.A.DISPLAY_LIMIT&&(aro_id=userOrGroup.id,!permissions.some((permission=>permission.id===aro_id)));var aro_id;return isMatching&&currentcount++,isMatching}))}hasAllInputDisabled(){return this.state.processing||this.state.loading}isAboutItems(){return this.props.context.shareDialogProps.resourcesIds&&this.props.context.shareDialogProps.foldersIds&&this.props.context.shareDialogProps.resourcesIds.length&&this.props.context.shareDialogProps.foldersIds.length}isAboutResources(){return this.props.context.shareDialogProps.resourcesIds&&this.props.context.shareDialogProps.resourcesIds.length>1}isAboutFolders(){return this.props.context.shareDialogProps.foldersIds&&this.props.context.shareDialogProps.foldersIds.length>1}isAboutAFolder(){return this.props.context.shareDialogProps.foldersIds&&1===this.props.context.shareDialogProps.foldersIds.length}isAboutAResource(){return this.props.context.shareDialogProps.resourcesIds&&1===this.props.context.shareDialogProps.resourcesIds.length}getTitle(){return this.state.loading?this.translate("Loading..."):this.isAboutItems()?this.translate("Share {{count}} items",{count:this.props.context.shareDialogProps.resourcesIds.length+this.props.context.shareDialogProps.foldersIds.length}):this.isAboutAResource()?this.translate("Share resource"):this.isAboutResources()?this.translate("Share {{count}} resources",{count:this.props.context.shareDialogProps.resourcesIds.length}):this.isAboutAFolder()?this.translate("Share folder"):this.isAboutFolders()?this.translate("Share {{count}} folders",{count:this.props.context.shareDialogProps.foldersIds.length}):void 0}getSubtitle(){if(!this.state.loading)return this.isAboutAResource()?this.resources[0].metadata.name:this.isAboutAFolder()?this.folders[0].name:void 0}getTooltip(){if(!this.shareChanges)return"";const acos=this.shareChanges.getAcos();return acos&&acos.length&&1!==acos.length?acos.map((aco=>"Resource"===aco.permission.aco?aco.metadata.name:aco.name)).join(", "):""}async toggleProcessing(){const prev=this.state.processing;return new Promise((resolve=>{this.setState({processing:!prev},resolve())}))}hasNoOwner(){return this.shareChanges&&this.shareChanges.getResourcesWithNoOwner().length>0}hasChanges(){return this.shareChanges&&this.shareChanges.getChanges().length>0}hasSubmitDisabled(){return this.hasNoOwner()||this.hasAllInputDisabled()||!this.hasChanges()}renderItem(index){const permission=this.state.permissions[index],sharePermissionItemKey=permission.aro.id;return react.createElement(Share_SharePermissionItem,{id:permission.aro.id,key:sharePermissionItemKey,aro:permission.aro,permissionType:permission.type,variesDetails:permission.variesDetails,updated:permission.updated,disabled:this.hasAllInputDisabled(),onUpdate:this.handlePermissionUpdate,onDelete:this.handlePermissionDelete,canShowUserAsSuspended:this.isSuspendedUserFeatureEnabled})}renderContainer(items,ref){return react.createElement("ul",{className:"permissions",ref},items)}get isSuspendedUserFeatureEnabled(){return this.props.context.siteSettings.canIUse("disableUser")}get translate(){return this.props.t}render(){return react.createElement(DialogWrapper.A,{title:this.getTitle(),subtitle:this.getSubtitle(),tooltip:this.getTooltip(),onClose:this.handleClose,disabled:this.hasAllInputDisabled()},react.createElement("form",{className:"share-form",onSubmit:this.handleFormSubmit,noValidate:!0},react.createElement("div",{className:"form-content"},react.createElement("div",{className:"scroll permission-edit"},this.state.loading&&react.createElement("ul",{className:"permissions"},react.createElement(SharePermissionItemSkeleton.A,null),react.createElement(SharePermissionItemSkeleton.A,null),react.createElement(SharePermissionItemSkeleton.A,null)),!this.state.loading&&react.createElement(react_list_default(),{itemRenderer:this.renderItem,itemsRenderer:this.renderContainer,length:this.state.permissions.length,minSize:this.props.listMinSize,type:this.state.permissions.length<4?"simple":"uniform",ref:this.permissionListRef,usePosition:!0,threshold:30})),react.createElement("div",{className:"permission-add"},react.createElement(Autocomplete.A,{id:"share-name-input",name:"name",label:this.translate("Share with people or groups"),placeholder:this.translate("Start typing a user or group name"),searchCallback:this.fetchAutocompleteItems,onSelect:this.handleAutocompleteSelect,onOpen:this.handleAutocompleteOpen,onClose:this.handleAutocompleteClose,disabled:this.hasAllInputDisabled(),baseUrl:this.props.context.userSettings.getTrustedDomain(),canShowUserAsSuspended:this.isSuspendedUserFeatureEnabled})),this.hasNoOwner()&&react.createElement("div",{className:"message error"},react.createElement(es.x6,null,"Please make sure there is at least one owner.")),this.hasChanges()&&!this.hasNoOwner()&&react.createElement("div",{className:"message warning"},react.createElement(es.x6,null,"Click save to apply your pending changes."))),react.createElement("div",{className:"submit-wrapper clearfix"},react.createElement(FormCancelButton.A,{disabled:this.hasAllInputDisabled(),onClick:this.handleClose}),react.createElement(FormSubmitButton.A,{disabled:this.hasSubmitDisabled(),processing:this.state.processing,value:this.translate("Save")}))))}}ShareDialog.defaultProps={listMinSize:4},ShareDialog.propTypes={context:prop_types_default().any,onClose:prop_types_default().func,resourceWorkspaceContext:prop_types_default().any,actionFeedbackContext:prop_types_default().any,dialogContext:prop_types_default().any,listMinSize:prop_types_default().number,t:prop_types_default().func};const Share_ShareDialog=(0,AppContext.L)((0,ResourceWorkspaceContext.Qw)((0,ActionFeedbackContext.ot)((0,DialogContext.z9)((0,es.CI)("common")(ShareDialog)))));ShareDialog.__docgenInfo={description:"",methods:[{name:"getDefaultState",docblock:"Get default state\n@returns {*}",modifiers:[],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindEventHandlers",docblock:"Bind event handlers\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind event handlers"},{name:"handleClose",docblock:"Handle close button click.\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Handle close button click."},{name:"handleAutocompleteOpen",docblock:"handleAutocompleteOpen\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"handleAutocompleteOpen"},{name:"handleAutocompleteClose",docblock:"handleAutocompleteClose\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"handleAutocompleteClose"},{name:"handleFormSubmit",docblock:"Handle form submit event.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form submit event."},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:[],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."},{name:"handleAutocompleteSelect",docblock:"handleAutocompleteSelect\nWhat happens when an item in the autocomplete list is selected\ne.g. if it's not already in the list, add it and scroll\n@param {object} aro",modifiers:[],params:[{name:"aro",type:{name:"object"},optional:!1}],returns:null,description:"handleAutocompleteSelect\nWhat happens when an item in the autocomplete list is selected\ne.g. if it's not already in the list, add it and scroll"},{name:"handlePermissionUpdate",docblock:"What happens when the user changes a permission for a group or user\ne.g. highlight if it's different than original, update permission list in the state\n\n@param {string} aroId The aro to update the permissions for\n@param {int} type like create, owner, etc.",modifiers:[],params:[{name:"aroId",description:"The aro to update the permissions for",type:{name:"string"},optional:!1},{name:"type",description:"like create, owner, etc.",type:{name:"int"},optional:!1}],returns:null,description:"What happens when the user changes a permission for a group or user\ne.g. highlight if it's different than original, update permission list in the state"},{name:"handlePermissionDelete",docblock:"What happens when the user delete a user or group from permission list\ne.g. delete permission from the shareChanges and update the state\n@param {string} aroId uuid",modifiers:[],params:[{name:"aroId",description:"uuid",type:{name:"string"},optional:!1}],returns:null,description:"What happens when the user delete a user or group from permission list\ne.g. delete permission from the shareChanges and update the state"},{name:"shareSave",docblock:"Save the permissions\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the permissions"},{name:"fetchAutocompleteItems",docblock:"Get users or groups matching the given keyword\n@param {string} keyword\n@returns {Promise<Array>}",modifiers:["async"],params:[{name:"keyword",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"Array"}]}},description:"Get users or groups matching the given keyword"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"isAboutItems",docblock:"Is this share screen handling sharing of multiple Acos?\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is this share screen handling sharing of multiple Acos?"},{name:"isAboutResources",docblock:"Is this share screen handling sharing of multiple resources?\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is this share screen handling sharing of multiple resources?"},{name:"isAboutFolders",docblock:"Is this share screen handling sharing of multiple folders?\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is this share screen handling sharing of multiple folders?"},{name:"isAboutAFolder",docblock:"Is this share screen handling sharing one folder?\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is this share screen handling sharing one folder?"},{name:"isAboutAResource",docblock:"Is this share screen handling sharing one resource?\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is this share screen handling sharing one resource?"},{name:"getTitle",docblock:"Return a relevant title in case of single resource/folder or multiple item share, etc.\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Return a relevant title in case of single resource/folder or multiple item share, etc."},{name:"getSubtitle",docblock:"Return a relevant subtitle in case of single resource/folder or multiple item share, etc.\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Return a relevant subtitle in case of single resource/folder or multiple item share, etc."},{name:"getTooltip",docblock:"Return the dialog title tooltip content (multi-share details)\nor false in case of single resource share\n@returns {false|string} tool",modifiers:[],params:[],returns:{description:"tool",type:{name:"union",elements:[{name:"string"}]}},description:"Return the dialog title tooltip content (multi-share details)\nor false in case of single resource share"},{name:"toggleProcessing",docblock:"Toggle processing state\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle processing state"},{name:"hasNoOwner",docblock:"Return true if the permission list does not have at least one owner\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the permission list does not have at least one owner"},{name:"hasChanges",docblock:"Return true if the permission list have changed since the start\n@returns {null|boolean}",modifiers:[],params:[],returns:{type:{name:"union",elements:[{name:"boolean"}]}},description:"Return true if the permission list have changed since the start"},{name:"hasSubmitDisabled",docblock:"Return true if submit button should be disabled\nTrue if there is no owner, if all input should be disabled, if there is no change since the start\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if submit button should be disabled\nTrue if there is no owner, if all input should be disabled, if there is no change since the start"},{name:"renderItem",docblock:"Use to render a single item of the share permission list\n@param {integer} index of the item in the source list\n@returns {JSX.Element}",modifiers:[],params:[{name:"index",description:"of the item in the source list",type:{name:"integer"},optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Use to render a single item of the share permission list"},{name:"renderContainer",docblock:"Use to render the container of the list of the ReactList component\n@param {Array<JSX.Element>} items the list of the items to be rendered as children element of the conainer\n@param {*} ref the ref ReactList needs to manage the scroll\n@returns {JSX.Element}",modifiers:[],params:[{name:"items",description:"the list of the items to be rendered as children element of the conainer",type:{name:"Array",elements:[{name:"JSX.Element"}]},optional:!1},{name:"ref",description:"the ref ReactList needs to manage the scroll",type:{name:"mixed"},optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Use to render the container of the list of the ReactList component"},{name:"isSuspendedUserFeatureEnabled",docblock:"Returns true if the feature flag disableUser is enabled.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the feature flag disableUser is enabled."},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"ShareDialog",props:{listMinSize:{defaultValue:{value:"4",computed:!1},description:"",type:{name:"number"},required:!1},context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);