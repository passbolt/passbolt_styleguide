/*! For license information please see 6047.39a287d0.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[6047],{"./src/react-extension/components/Administration/DisplayRbacAdministration/DisplayRbacAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayRbacAdministration_DisplayRbacAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),AdministrationRbacContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationRbacContext/AdministrationRbacContext.js");class DisplayAdministrationRbacActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this)}async handleSaveClick(){try{await this.props.adminRbacContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}}isSaveEnabled(){return!this.props.adminRbacContext.isProcessing()}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The role-based access control settings were updated."))}async handleSaveError(error){console.error(error),await this.props.actionFeedbackContext.displayError(error.message)}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary form",type:"button",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationRbacActions.propTypes={context:prop_types_default().object,adminRbacContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationRbacsActions_DisplayAdministrationRbacActions=(0,AdministrationRbacContext.gP)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationRbacActions)));DisplayAdministrationRbacActions.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."}],displayName:"DisplayAdministrationRbacActions",props:{context:{description:"",type:{name:"object"},required:!1},adminRbacContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var Icon=__webpack_require__("./src/shared/components/Icons/Icon.js");class DisplayRbacSection extends react.Component{render(){return react.createElement(react.Fragment,null,react.createElement("div",{className:`flex-container inner level-${this.props.level}`},react.createElement("div",{className:"flex-item first"},react.createElement("span",null,react.createElement(Icon.A,{name:"caret-down",baseline:!0}),"  ",this.props.label)),react.createElement("div",{className:"flex-item"}," "),react.createElement("div",{className:"flex-item"}," ")),this.props.children)}}DisplayRbacSection.propTypes={label:prop_types_default().string,level:prop_types_default().number,t:prop_types_default().func,children:prop_types_default().any};const DisplayRbacAdministration_DisplayRbacSection=(0,es.CI)("common")(DisplayRbacSection);DisplayRbacSection.__docgenInfo={description:"",methods:[],displayName:"DisplayRbacSection",props:{label:{description:"",type:{name:"string"},required:!1},level:{description:"",type:{name:"number"},required:!1},t:{description:"",type:{name:"func"},required:!1},children:{description:"",type:{name:"any"},required:!1}}};var Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),controlFunctionEnumeration=__webpack_require__("./src/shared/services/rbacs/controlFunctionEnumeration.js"),uiActionEnumeration=__webpack_require__("./src/shared/services/rbacs/uiActionEnumeration.js");class DisplayRbacItem extends react.Component{constructor(props){super(props),this.handleInputChange=this.handleInputChange.bind(this)}handleInputChange(event,role){this.props.onChange(role,this.props.actionName,event.target.value)}get allowedCtlFunctions(){const controls=[{value:controlFunctionEnumeration.HK.ALLOW,label:this.props.t("Allow")},{value:controlFunctionEnumeration.HK.DENY,label:this.props.t("Deny")}];return this.props.actionName===uiActionEnumeration.e.USERS_VIEW_WORKSPACE&&controls.push({value:controlFunctionEnumeration.HK.ALLOW_IF_GROUP_MANAGER_IN_ONE_GROUP,label:this.props.t("Allow group manager")}),controls}get rowClassName(){return this.props.actionName.toLowerCase().replaceAll(/[^\w]/gi,"-")}getCtlFunctionForRole(role){const rbac=this.props.rbacsUpdated?.findRbacByRoleAndUiActionName(role,this.props.actionName)||this.props.rbacs?.findRbacByRoleAndUiActionName(role,this.props.actionName);return rbac?.controlFunction||null}hasChanged(){return!!this.props.rbacsUpdated.findRbacByActionName(this.props.actionName)}render(){let customizableRoles=[];return this.props.roles&&(customizableRoles=this.props.roles.items.filter((role=>"user"===role.name))),react.createElement(react.Fragment,null,react.createElement("div",{className:`rbac-row ${this.rowClassName} flex-container inner level-${this.props.level} ${this.hasChanged()?"highlighted":""}`},react.createElement("div",{className:"flex-item first"},react.createElement("span",null,this.props.label)),react.createElement("div",{className:"flex-item"},react.createElement(Select.A,{className:"medium admin",items:this.allowedCtlFunctions,value:controlFunctionEnumeration.HK.ALLOW,disabled:!0})),customizableRoles.map((role=>react.createElement("div",{key:`${this.props.actionName}-${role.id}`,className:"flex-item input"},react.createElement(Select.A,{className:`${role.name}`,items:this.allowedCtlFunctions,value:this.getCtlFunctionForRole(role),disabled:!(this.props.rbacs?.length>0&&this.getCtlFunctionForRole(role)),onChange:event=>this.handleInputChange(event,role)}),!this.getCtlFunctionForRole(role)&&react.createElement("div",{className:"warning-message"},"There is no valid setting found for this action."))))))}}DisplayRbacItem.propTypes={label:prop_types_default().string.isRequired,level:prop_types_default().number.isRequired,actionName:prop_types_default().string.isRequired,rbacs:prop_types_default().object,rbacsUpdated:prop_types_default().object,roles:prop_types_default().object.isRequired,onChange:prop_types_default().func.isRequired,t:prop_types_default().func};const DisplayRbacAdministration_DisplayRbacItem=(0,es.CI)("common")(DisplayRbacItem);DisplayRbacItem.__docgenInfo={description:"",methods:[{name:"handleInputChange",docblock:"Handle select change.\n@param {Event} event The html event occurring on the select component\n@param {RoleEntity} role The role the select change for",modifiers:[],params:[{name:"event",description:"The html event occurring on the select component",type:{name:"Event"},optional:!1},{name:"role",description:"The role the select change for",type:{name:"RoleEntity"},optional:!1}],returns:null,description:"Handle select change."},{name:"allowedCtlFunctions",docblock:"Return the list of allowed control functions.\n@returns {[{label: string, value: string},{label: string, value: string}]}",modifiers:["get"],params:[],returns:{type:{name:"tuple",elements:[]}},description:"Return the list of allowed control functions."},{name:"rowClassName",docblock:"Get the row component class name.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the row component class name."},{name:"getCtlFunctionForRole",docblock:"Get the defined control function for the given role\n@param {RoleEntity} role The role to get the control function for\n@return {string|null}",modifiers:[],params:[{name:"role",description:"The role to get the control function for",type:{name:"RoleEntity"},optional:!1}],returns:{type:{name:"union",elements:[{name:"string"}]}},description:"Get the defined control function for the given role"},{name:"hasChanged",docblock:"Check if the control has changed\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the control has changed"}],displayName:"DisplayRbacItem",props:{label:{description:"",type:{name:"string"},required:!0},level:{description:"",type:{name:"number"},required:!0},actionName:{description:"",type:{name:"string"},required:!0},rbacs:{description:"",type:{name:"object"},required:!1},rbacsUpdated:{description:"",type:{name:"object"},required:!1},roles:{description:"",type:{name:"object"},required:!0},onChange:{description:"",type:{name:"func"},required:!0},t:{description:"",type:{name:"func"},required:!1}}};var rolesCollection=__webpack_require__("./src/shared/models/entity/role/rolesCollection.js"),roleService=__webpack_require__("./src/shared/services/api/role/roleService.js"),rbacService=__webpack_require__("./src/shared/services/api/rbac/rbacService.js"),rbacsCollection=__webpack_require__("./src/shared/models/entity/rbac/rbacsCollection.js"),rbacEntity=__webpack_require__("./src/shared/models/entity/rbac/rbacEntity.js"),file_text=__webpack_require__("./src/img/svg/file_text.svg"),portals=__webpack_require__("./src/shared/utils/portals.js");class DisplayRbacAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{roles:null}}bindCallbacks(){this.updateRbacControlFunction=this.updateRbacControlFunction.bind(this)}async componentDidMount(){this.findAndLoadRoles(this.props.RoleService),this.findAndLoadRbacSettings(this.props.RbacService)}componentWillUnmount(){this.props.adminRbacContext.clearContext()}async findAndLoadRoles(){const apiClientOptions=this.props.context.getApiClientOptions(),roleService=new this.props.RoleService(apiClientOptions),rolesDto=await roleService.findAll(),roles=new rolesCollection.A(rolesDto);this.setState({roles})}async findAndLoadRbacSettings(){const apiClientOptions=this.props.context.getApiClientOptions(),rbacService=new this.props.RbacService(apiClientOptions),rbacsDto=await rbacService.findAll({ui_action:!0}),rbacs=new rbacsCollection.A(rbacsDto,!0);this.props.adminRbacContext.setRbacs(rbacs)}updateRbacControlFunction(role,actionName,controlFunction){const rbacsUpdated=this.props.adminRbacContext.rbacsUpdated,rbac=this.props.adminRbacContext.rbacs.findRbacByRoleAndUiActionName(role,actionName);if(rbac.controlFunction===controlFunction)rbacsUpdated.remove(rbac);else{const clonedRbac=new rbacEntity.A(rbac.toDto({ui_action:!0,action:!0}));clonedRbac.controlFunction=controlFunction,rbacsUpdated.addOrReplace(clonedRbac)}this.props.adminRbacContext.setRbacsUpdated(rbacsUpdated)}get canIUseTags(){return this.props.context.siteSettings.canIUse("tags")}get canIUseDesktop(){return this.props.context.siteSettings.canIUse("desktop")}get canIUseMobile(){return this.props.context.siteSettings.canIUse("mobile")}get canIUseFolders(){return this.props.context.siteSettings.canIUse("folders")}get canIUsePreviewPassword(){return this.props.context.siteSettings.canIUse("previewPassword")}get canIUseExport(){return this.props.context.siteSettings.canIUse("export")}get canIUseImport(){return this.props.context.siteSettings.canIUse("import")}get isReady(){return null!==this.state.roles}render(){const hasSaveWarning=this.props.adminRbacContext.hasSettingsChanges();return react.createElement("div",{className:"row"},react.createElement("div",{className:"rbac-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",null,react.createElement(es.x6,null,"Role-Based Access Control")),react.createElement("p",null,react.createElement(es.x6,null,"In this section you can define access controls for each user role.")),react.createElement("form",{className:"form"},react.createElement("div",{className:"flex-container outer"},react.createElement("div",{className:"flex-container inner header-flex"},react.createElement("div",{className:"flex-item first"},react.createElement("label",null,react.createElement(es.x6,null,"UI Permissions"))),react.createElement("div",{className:"flex-item centered"},react.createElement("label",null,react.createElement(es.x6,null,"Admin"))),react.createElement("div",{className:"flex-item centered"},react.createElement("label",null,react.createElement(es.x6,null,"User")))),this.isReady&&react.createElement(react.Fragment,null,react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Resources"),level:1},(this.canIUseImport||this.canIUseExport)&&react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Import/Export"),level:2},this.canIUseImport&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can import"),actionName:uiActionEnumeration.e.RESOURCES_IMPORT,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),this.canIUseExport&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can export"),actionName:uiActionEnumeration.e.RESOURCES_EXPORT,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Password"),level:2},this.canIUsePreviewPassword&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can preview"),actionName:uiActionEnumeration.e.SECRETS_PREVIEW,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can copy"),actionName:uiActionEnumeration.e.SECRETS_COPY,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Metadata"),level:2},react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see password activities"),actionName:uiActionEnumeration.e.RESOURCES_SEE_ACTIVITIES,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see password comments"),actionName:uiActionEnumeration.e.RESOURCES_SEE_COMMENTS,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),(this.canIUseFolders||this.canIUseTags)&&react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Organization"),level:2},this.canIUseFolders&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can use folders"),actionName:uiActionEnumeration.e.FOLDERS_USE,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),this.canIUseTags&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can use tags"),actionName:uiActionEnumeration.e.TAGS_USE,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Sharing"),level:2},react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see with whom passwords are shared with"),actionName:uiActionEnumeration.e.SHARE_VIEW_LIST,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can share folders"),actionName:uiActionEnumeration.e.SHARE_FOLDER,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}))),react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("Users"),level:1},react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see users workspace"),actionName:uiActionEnumeration.e.USERS_VIEW_WORKSPACE,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})),(this.canIUseMobile||this.canIUseDesktop)&&react.createElement(DisplayRbacAdministration_DisplayRbacSection,{label:this.props.t("User settings"),level:1},this.canIUseMobile&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see mobile setup"),actionName:uiActionEnumeration.e.MOBILE_TRANSFER,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction}),this.canIUseDesktop&&react.createElement(DisplayRbacAdministration_DisplayRbacItem,{label:this.props.t("Can see desktop application setup"),actionName:uiActionEnumeration.e.DESKTOP_TRANSFER,level:3,rbacs:this.props.adminRbacContext.rbacs,rbacsUpdated:this.props.adminRbacContext.rbacsUpdated,roles:this.state.roles,onChange:this.updateRbacControlFunction})))))),hasSaveWarning&&react.createElement("div",{className:"warning message"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayAdministrationRbacsActions_DisplayAdministrationRbacActions,null),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need help?")),react.createElement("p",null,react.createElement(es.x6,null,"Check out the Role Based Access Control documentation.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/role-based-access-control/",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read RBAC doc")))),document.getElementById("administration-help-panel")))}}DisplayRbacAdministration.defaultProps={RoleService:roleService.A,RbacService:rbacService.A},DisplayRbacAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminRbacContext:prop_types_default().object,RoleService:prop_types_default().func,RbacService:prop_types_default().func,t:prop_types_default().func};const DisplayRbacAdministration_DisplayRbacAdministration=(0,AppContext.L)((0,AdministrationRbacContext.gP)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayRbacAdministration))));DisplayRbacAdministration.__docgenInfo={description:"This component allows to display the internationalisation for the administration",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"bindCallbacks",docblock:"Bind callbacks",modifiers:[],params:[],returns:null,description:"Bind callbacks"},{name:"findAndLoadRoles",docblock:"Find and load the roles\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find and load the roles"},{name:"findAndLoadRbacSettings",docblock:"Find and load the rbac settings\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find and load the rbac settings"},{name:"updateRbacControlFunction",docblock:"Update a rbac setting.\n@param {RoleEntity} role The role to update the rbac for.\n@param {string} actionName The action to update the rbac for.\n@param {string} controlFunction The new control function for the rbac.",modifiers:[],params:[{name:"role",description:"The role to update the rbac for.",type:{name:"RoleEntity"},optional:!1},{name:"actionName",description:"The action to update the rbac for.",type:{name:"string"},optional:!1},{name:"controlFunction",description:"The new control function for the rbac.",type:{name:"string"},optional:!1}],returns:null,description:"Update a rbac setting."},{name:"canIUseTags",docblock:"Is the user allowed to use the tags capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the tags capability"},{name:"canIUseDesktop",docblock:"Is the user allowed to use the desktop export capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the desktop export capability"},{name:"canIUseMobile",docblock:"Is the user allowed to use the mobile export capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the mobile export capability"},{name:"canIUseFolders",docblock:"Is the user allowed to use the folders capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use the folders capability"},{name:"canIUsePreviewPassword",docblock:"Is the user allowed to use preview password capability.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use preview password capability."},{name:"canIUseExport",docblock:"Is the user allowed to use export capability.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use export capability."},{name:"canIUseImport",docblock:"Is the user allowed to use import capability.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is the user allowed to use import capability."},{name:"isReady",docblock:"Check if the component is ready to display its rows.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Check if the component is ready to display its rows."}],displayName:"DisplayRbacAdministration",props:{RoleService:{defaultValue:{value:"class RoleService extends AbstractService {\n  /**\n   * Constructor\n   *\n   * @param {ApiClientOptions} apiClientOptions\n   * @public\n   */\n  constructor(apiClientOptions) {\n    super(apiClientOptions, RoleService.RESOURCE_NAME);\n  }\n\n  /**\n   * API Resource Name\n   *\n   * @returns {string}\n   * @public\n   */\n  static get RESOURCE_NAME() {\n    return ROLES_SERVICE_RESOURCE_NAME;\n  }\n\n  /**\n   * Find all roles\n   *\n   * @returns {Promise<*>} response body\n   * @throws {Error} if options are invalid or API error\n   * @public\n   */\n  async findAll() {\n    const response = await this.apiClient.findAll();\n    if (!response.body || !response.body.length) {\n      return [];\n    }\n    return response.body;\n  }\n}",computed:!1},description:"",type:{name:"func"},required:!1},RbacService:{defaultValue:{value:'class RbacService extends AbstractService {\n  /**\n   * Constructor\n   *\n   * @param {ApiClientOptions} apiClientOptions\n   * @public\n   */\n  constructor(apiClientOptions) {\n    super(apiClientOptions, RbacService.RESOURCE_NAME);\n  }\n\n  /**\n   * API Resource Name\n   *\n   * @returns {string}\n   * @public\n   */\n  static get RESOURCE_NAME() {\n    return RBAC_SERVICE_RESOURCE_NAME;\n  }\n\n  /**\n   * Return the list of supported options for the contain option in API find operations\n   *\n   * @returns {Array<string>} list of supported option\n   */\n  static getSupportedContainOptions() {\n    return ["action", "ui_action"];\n  }\n\n  /**\n   * Find all\n   * @param {object} contains\n   * @returns {object}\n   */\n  async findAll(contains) {\n    const options = contains ? this.formatContainOptions(contains, RbacService.getSupportedContainOptions()) : null;\n    const response = await this.apiClient.findAll(options);\n    return response.body;\n  }\n\n  /**\n   * Update all the given rbacs.\n   * @param {array} rbacsUpdatedDto A list of update rbacs dto.\n   * @param {object} contains\n   * @returns {object}\n   */\n  async updateAll(rbacsUpdatedDto, contains = {}) {\n    const options = contains ? this.formatContainOptions(contains, RbacService.getSupportedContainOptions()) : null;\n    const response = await this.apiClient.updateAll(rbacsUpdatedDto, options);\n    return response.body;\n  }\n}',computed:!1},description:"",type:{name:"func"},required:!1},context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminRbacContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationRbacContext/AdministrationRbacContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{gP:()=>withAdminRbac,ji:()=>AdminRbacContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_shared_models_entity_rbac_rbacsCollection__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/rbac/rbacsCollection.js"),_shared_services_api_rbac_rbacService__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/services/api/rbac/rbacService.js"),_shared_services_api_role_roleService__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/shared/services/api/role/roleService.js"),_shared_models_entity_rbac_rbacEntity__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/shared/models/entity/rbac/rbacEntity.js");const AdminRbacContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({processing:!1,rbacs:null,rbacsUpdated:{},setRbacs:()=>{},setRbacsUpdated:()=>{},save:()=>{},isProcessing:()=>{},hasSettingsChanges:()=>{},clearContext:()=>{}});class AdminRbacContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.rbacService=new _shared_services_api_rbac_rbacService__WEBPACK_IMPORTED_MODULE_3__.A(apiClientOptions),this.roleService=new _shared_services_api_role_roleService__WEBPACK_IMPORTED_MODULE_4__.A(apiClientOptions)}get defaultState(){return{processing:!1,rbacs:null,rbacsUpdated:new _shared_models_entity_rbac_rbacsCollection__WEBPACK_IMPORTED_MODULE_2__.A([]),setRbacs:this.setRbacs.bind(this),setRbacsUpdated:this.setRbacsUpdated.bind(this),isProcessing:this.isProcessing.bind(this),hasSettingsChanges:this.hasSettingsChanges.bind(this),save:this.save.bind(this),clearContext:this.clearContext.bind(this)}}async setRbacs(rbacs){this.setState({rbacs})}async setRbacsUpdated(rbacsUpdated){this.setState({rbacsUpdated})}isProcessing(){return this.state.processing}setProcessing(processing){this.setState({processing})}hasSettingsChanges(){return this.state.rbacsUpdated.rbacs.length>0}clearContext(){const{rbacs,rbacsUpdated,processing}=this.defaultState;this.setState({rbacs,rbacsUpdated,processing})}async save(){this.setProcessing(!0);try{const rbacsUpdatedDto=this.state.rbacsUpdated.toBulkUpdateDto();if(0===this.state.rbacsUpdated.length)return;const rbacsUpdatedResultDto=await this.rbacService.updateAll(rbacsUpdatedDto,{ui_action:!0,action:!0}),rbacs=this.state.rbacs;rbacsUpdatedResultDto.forEach((rbacUpdatedResultDto=>rbacs.addOrReplace(new _shared_models_entity_rbac_rbacEntity__WEBPACK_IMPORTED_MODULE_5__.A(rbacUpdatedResultDto))));const rbacsUpdated=new _shared_models_entity_rbac_rbacsCollection__WEBPACK_IMPORTED_MODULE_2__.A([]);this.setState({rbacs,rbacsUpdated})}finally{this.setProcessing(!1)}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(AdminRbacContext.Provider,{value:this.state},this.props.children)}}AdminRbacContextProvider.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_6___default().any,children:prop_types__WEBPACK_IMPORTED_MODULE_6___default().any};(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__.L)(AdminRbacContextProvider);function withAdminRbac(WrappedComponent){return class WithAdminRbac extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(AdminRbacContext.Consumer,null,(adminRbacContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{adminRbacContext,...this.props})))}}}AdminRbacContextProvider.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"setRbacs",docblock:"Set the rbacs\n@param {RbacsCollection} rbacs The rbacs collection to set.\n@return {void}",modifiers:["async"],params:[{name:"rbacs",description:"The rbacs collection to set.",type:{name:"RbacsCollection"},optional:!1}],returns:{type:{name:"void"}},description:"Set the rbacs"},{name:"setRbacsUpdated",docblock:"Set the updated rbacs\n@param {RbacsCollection} rbacsUpdated The updated rbacs collection to set.\n@return {void}",modifiers:["async"],params:[{name:"rbacsUpdated",description:"The updated rbacs collection to set.",type:{name:"RbacsCollection"},optional:!1}],returns:{type:{name:"void"}},description:"Set the updated rbacs"},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"setProcessing",docblock:"Handle processing change.\n@params {Boolean} processing value\n@returns {void}",modifiers:[],params:[{name:"processing",optional:!1}],returns:{type:{name:"void"}},description:"Handle processing change."},{name:"hasSettingsChanges",docblock:"Check if there are changes to apply\n@returns {Boolean}",modifiers:[],params:[],returns:{type:{name:"Boolean"}},description:"Check if there are changes to apply"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."},{name:"save",docblock:"Whenever the save has been requested",modifiers:["async"],params:[],returns:null,description:"Whenever the save has been requested"}],displayName:"AdminRbacContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1}}}},"./src/shared/models/entity/role/rolesCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _roleEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/role/roleEntity.js"),_abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityCollection.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),_abstract_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js");class RolesCollection extends _abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__.A{constructor(rolesCollectionDto,options={}){super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__.A.validate(RolesCollection.ENTITY_NAME,rolesCollectionDto,RolesCollection.getSchema()),options),this._props.forEach((role=>{this.push(new _roleEntity__WEBPACK_IMPORTED_MODULE_0__.A(role,{clone:!1}))})),this._props=null}static getSchema(){return{type:"array",items:_roleEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema()}}get roles(){return this._items}get ids(){return this._items.map((r=>r.id))}assertUniqueId(role){if(!role.id)return;const length=this.roles.length;let i=0;for(;i<length;i++){const existingRole=this.roles[i];if(existingRole.id&&existingRole.id===role.id)throw new _abstract_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__.A(i,RolesCollection.RULE_UNIQUE_ID,`Role id ${role.id} already exists.`)}}push(role){if(!role||"object"!=typeof role)throw new TypeError("RolesCollection push parameter should be an object.");role instanceof _roleEntity__WEBPACK_IMPORTED_MODULE_0__.A&&(role=role.toDto());const roleEntity=new _roleEntity__WEBPACK_IMPORTED_MODULE_0__.A(role);this.assertUniqueId(roleEntity),super.push(roleEntity)}static get ENTITY_NAME(){return"Roles"}static get RULE_UNIQUE_ID(){return"unique_id"}}const __WEBPACK_DEFAULT_EXPORT__=RolesCollection},"./src/shared/services/api/abstract/abstractService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _lib_apiClient_apiClient__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/lib/apiClient/apiClient.js"),validator__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/validator/index.js"),validator__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_1__);const __WEBPACK_DEFAULT_EXPORT__=class AbstractService{constructor(apiClientOptions,resourceName){apiClientOptions.setResourceName(resourceName),this.apiClient=new _lib_apiClient_apiClient__WEBPACK_IMPORTED_MODULE_0__.O(apiClientOptions)}formatContainOptions(contain,supportedOptions){const result={};for(const item in contain){if("string"!=typeof item){const details=JSON.stringify(contain);throw new TypeError(`Invalid contain ${details}, items should be a string.`)}supportedOptions.includes(item)&&(result[`contain[${item}]`]=contain[item]?"1":"0")}return result}formatFilterOptions(filter,supportedOptions){const result={};for(const item in filter)if(Object.prototype.hasOwnProperty.call(filter,item)&&supportedOptions.includes(item))if("boolean"==typeof filter[item])result[`filter[${item}]`]=filter[item]?"1":"0";else if("string"==typeof filter[item])result[`filter[${item}]`]=filter[item];else{if(!Array.isArray(filter[item]))throw new TypeError("Service error. Filter option should be an array or a string.");result[`filter[${item}][]`]=filter[item]}return result}formatOrderOptions(orders,supportedOrders){const result={};for(const order in orders)supportedOrders.includes(order)&&(result["order[]"]=order);return result}assertValidId(id){if(!id||"string"!=typeof id||!validator__WEBPACK_IMPORTED_MODULE_1___default().isUUID(id))throw new TypeError(`Service error. The id '${id}' is not a valid uuid.`)}assertNonEmptyData(data){if(!data)throw new TypeError("Service error. Data cannot be empty.")}}},"./src/shared/services/api/rbac/rbacService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_abstractService__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/services/api/abstract/abstractService.js");class RbacService extends _abstract_abstractService__WEBPACK_IMPORTED_MODULE_0__.A{constructor(apiClientOptions){super(apiClientOptions,RbacService.RESOURCE_NAME)}static get RESOURCE_NAME(){return"/rbacs"}static getSupportedContainOptions(){return["action","ui_action"]}async findAll(contains){const options=contains?this.formatContainOptions(contains,RbacService.getSupportedContainOptions()):null;return(await this.apiClient.findAll(options)).body}async updateAll(rbacsUpdatedDto,contains={}){const options=contains?this.formatContainOptions(contains,RbacService.getSupportedContainOptions()):null;return(await this.apiClient.updateAll(rbacsUpdatedDto,options)).body}}const __WEBPACK_DEFAULT_EXPORT__=RbacService},"./src/shared/services/api/role/roleService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_abstractService__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/services/api/abstract/abstractService.js");class RoleService extends _abstract_abstractService__WEBPACK_IMPORTED_MODULE_0__.A{constructor(apiClientOptions){super(apiClientOptions,RoleService.RESOURCE_NAME)}static get RESOURCE_NAME(){return"roles"}async findAll(){const response=await this.apiClient.findAll();return response.body&&response.body.length?response.body:[]}}const __WEBPACK_DEFAULT_EXPORT__=RoleService}}]);