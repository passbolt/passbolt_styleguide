/*! For license information please see react-extension-components-AuthenticationLogin-AcceptLoginServerKeyChange-AcceptLoginServerKeyChange-test-stories.3ab4fa99.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[3362],{"./src/react-extension/components/AuthenticationLogin/AcceptLoginServerKeyChange/AcceptLoginServerKeyChange.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AcceptLoginServerKeyChange_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),AcceptLoginServerKeyChange=__webpack_require__("./src/react-extension/components/AuthenticationLogin/AcceptLoginServerKeyChange/AcceptLoginServerKeyChange.js");const AcceptLoginServerKeyChange_test_stories={title:"Components/AuthenticationLogin/AcceptLoginServerKeyChange",component:AcceptLoginServerKeyChange.A},Initial=(args=>react.createElement(react_router.MemoryRouter,{initialEntries:["/"]},react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.Route,{component:routerProps=>react.createElement(AcceptLoginServerKeyChange.A,{...args,...routerProps})})))))).bind({});Initial.args=function defaultProps(props){const defaultProps={onAccept:jest.fn((()=>Promise.resolve())),serverKey:{fingerprint:"0c1d1761110d1e33c9006d1a5b1b332ed06426d3"}};return Object.assign(defaultProps,props||{})}(),Initial.parameters={css:"ext_authentication"};const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:'args => <MemoryRouter initialEntries={[\'/\']}>\n    <div id="container" className="container page login">\n      <div className="content">\n        <div className="login-form">\n          <Route component={routerProps => <AcceptLoginServerKeyChange {...args} {...routerProps} />} />\n        </div>\n      </div>\n    </div>\n  </MemoryRouter>',...Initial.parameters?.docs?.source}}}},"./src/react-extension/components/AuthenticationLogin/AcceptLoginServerKeyChange/AcceptLoginServerKeyChange.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);class AcceptLoginServerKeyChange extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.bindEventHandlers()}get defaultState(){return{fingerprint:null,hasAccepted:!1,hasBeenValidated:!1,errors:{hasNotAccepted:!1}}}componentDidMount(){this.fetchServerKey()}async fetchServerKey(){let{fingerprint}=await this.props.serverKey;fingerprint=fingerprint.replace(/.{4}/g,"$& "),fingerprint=react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,fingerprint.substr(0,24),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),fingerprint.substr(25)),this.setState({fingerprint})}get isValid(){return Object.values(this.state.errors).every((value=>!value))}get mustBeDisabled(){return this.state.hasBeenValidated&&!this.isValid}bindEventHandlers(){this.handleSubmit=this.handleSubmit.bind(this),this.handleAcceptChange=this.handleAcceptChange.bind(this)}async handleSubmit(event){event.preventDefault(),await this.validate(),this.isValid&&await this.accept()}async handleAcceptChange(){await this.toggleAccept()}async accept(){await this.props.onAccept()}async toggleAccept(){await this.setState({hasAccepted:!this.state.hasAccepted}),this.state.hasBeenValidated&&await this.validate()}async validate(){const{hasAccepted}=this.state;hasAccepted?await this.setState({hasBeenValidated:!0,errors:{}}):await this.setState({hasBeenValidated:!0,errors:{hasNotAccepted:!0}})}render(){const disabledClassName=this.mustBeDisabled?"disabled":"";return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Sorry, the server key has changed.")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"For security reasons please check with your administrator that this is a change that they initiated. The new fingerprint:")," "),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,this.state.fingerprint),react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{acceptCharset:"utf-8",onSubmit:this.handleSubmit},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input checkbox "+(this.state.hasBeenValidated&&this.state.errors.hasNotAccepted?"error":"")},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{id:"accept-new-key",type:"checkbox",name:"accept-new-key",value:this.state.hasAccepted,onChange:this.handleAcceptChange}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:"accept-new-key"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Yes I checked and it is all fine."))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-actions"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",className:`button primary big full-width ${disabledClassName}`,disabled:this.mustBeDisabled},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Accept new key")))))}}AcceptLoginServerKeyChange.propTypes={serverKey:prop_types__WEBPACK_IMPORTED_MODULE_2___default().object.isRequired,onAccept:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func.isRequired};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(AcceptLoginServerKeyChange);AcceptLoginServerKeyChange.__docgenInfo={description:"This component notifies the user that the server key change and ask to acccept it",methods:[{name:"defaultState",docblock:"Returns the default state",modifiers:["get"],params:[],returns:null,description:"Returns the default state"},{name:"fetchServerKey",docblock:"Fetch the server key\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Fetch the server key"},{name:"isValid",docblock:"Returns true if the passphrase is valid",modifiers:["get"],params:[],returns:null,description:"Returns true if the passphrase is valid"},{name:"mustBeDisabled",docblock:"Returns true if the component must be in a disabled mode",modifiers:["get"],params:[],returns:null,description:"Returns true if the component must be in a disabled mode"},{name:"bindEventHandlers",docblock:"Handle component event handlers",modifiers:[],params:[],returns:null,description:"Handle component event handlers"},{name:"handleSubmit",docblock:"Whenever the users\n@param event Dom event",modifiers:["async"],params:[{name:"event",description:"Dom event",optional:!1}],returns:null,description:"Whenever the users"},{name:"handleAcceptChange",docblock:"Whenever the user changes the accept new key checkbox",modifiers:["async"],params:[],returns:null,description:"Whenever the user changes the accept new key checkbox"},{name:"accept",docblock:"Accepts the new Gpg key",modifiers:["async"],params:[],returns:null,description:"Accepts the new Gpg key"},{name:"toggleAccept",docblock:"Toggle the accept checkbox",modifiers:["async"],params:[],returns:null,description:"Toggle the accept checkbox"},{name:"validate",docblock:"Validate the security token data",modifiers:["async"],params:[],returns:null,description:"Validate the security token data"}],displayName:"AcceptLoginServerKeyChange",props:{serverKey:{description:"",type:{name:"object"},required:!0},onAccept:{description:"",type:{name:"func"},required:!0}}}}}]);