/*! For license information please see 8319.637c49ff.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[8319],{"./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/SmtpProviders.data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const portsData={25:{port:25,tls:!1},2525:{port:2525,tls:!1},587:{port:587,tls:!0},588:{port:588,tls:!0},465:{port:465,tls:!0}};function generateConfiguration(endpointList,portList){const configurations=[];for(let i=0;i<endpointList.length;i++){const endpoint=endpointList[i];for(let j=0;j<portList.length;j++){const portData=portsData[portList[j].toString()];configurations.push({host:endpoint,...portData})}}return configurations}function getConfiguration(smtpProvider,port,host){return smtpProvider.availableConfigurations.find((config=>(!host||config.host===host)&&config.port===port))}const AwsSes={id:"aws-ses",name:"AWS SES",icon:"aws-ses.svg",help_page:"https://docs.aws.amazon.com/ses/latest/dg/send-email-smtp.html",availableConfigurations:generateConfiguration(function getAllAwsEnpoint(){const endpoints=[];return["us-east-2","us-east-1","us-west-1","us-west-2","ap-south-1","ap-northeast-3","ap-northeast-2","ap-northeast-1","ap-southeast-1","ap-southeast-2","ca-central-1","eu-central-1","eu-west-1","eu-west-2","eu-west-3","sa-east-1","us-gov-west-1"].forEach((region=>{endpoints.push(`email-smtp.${region}.amazonaws.com`)})),endpoints}(),[25,2525,587])};AwsSes.defaultConfiguration=getConfiguration(AwsSes,587,"email-smtp.eu-central-1.amazonaws.com");const ElasticEmail={id:"elastic-email",name:"ElasticEmail",icon:"elastic-email.svg",help_page:"https://help.elasticemail.com/en/articles/4803409-smtp-settings",availableConfigurations:generateConfiguration(["smtp.elasticemail.com","smtp25.elasticemail.com"],[25,2525,587])};ElasticEmail.defaultConfiguration=getConfiguration(ElasticEmail,587,"smtp.elasticemail.com");const GoogleWorkspace={id:"google-workspace",name:"Google Workspace",icon:"gmail.svg",help_page:"https://support.google.com/a/answer/2956491",availableConfigurations:generateConfiguration(["smtp-relay.gmail.com"],[25,587])};GoogleWorkspace.defaultConfiguration=getConfiguration(GoogleWorkspace,587);const GoogleMail={id:"google-mail",name:"Google Mail",icon:"gmail.svg",help_page:"https://support.google.com/a/answer/2956491",availableConfigurations:generateConfiguration(["smtp.gmail.com"],[587])};GoogleMail.defaultConfiguration=getConfiguration(GoogleMail,587);const MailGun={id:"mailgun",name:"MailGun",icon:"mailgun.svg",help_page:"https://documentation.mailgun.com/en/latest/quickstart-sending.html",availableConfigurations:generateConfiguration(["smtp.mailgun.com"],[587])};MailGun.defaultConfiguration=MailGun.availableConfigurations[0];const Mailjet={id:"mailjet",name:"Mailjet",icon:"mailjet.svg",help_page:"https://dev.mailjet.com/smtp-relay/configuration/",availableConfigurations:generateConfiguration(["in-v3.mailjet.com"],[25,2525,587,588])};Mailjet.defaultConfiguration=getConfiguration(Mailjet,587);const Mandrill={id:"mandrill",name:"Mandrill",icon:"mandrill.svg",help_page:"https://mailchimp.com/developer/transactional/docs/smtp-integration/",availableConfigurations:generateConfiguration(["smtp.mandrillapp.com"],[25,2525,587])};Mandrill.defaultConfiguration=getConfiguration(Mandrill,587);const Office365={id:"office-365",name:"Office 365",icon:"office365.svg",help_page:"https://learn.microsoft.com/exchange/mail-flow-best-practices/how-to-set-up-a-multifunction-device-or-application-to-send-email-using-microsoft-365-or-office-365",availableConfigurations:generateConfiguration(["smtp.office365.com"],[25,587])};Office365.defaultConfiguration=getConfiguration(Office365,587);const Outlook={id:"outlook",name:"Outlook",icon:"outlook.svg",help_page:"https://support.microsoft.com/office/pop-imap-and-smtp-settings-for-outlook-com-d088b986-291d-42b8-9564-9c414e2aa040",availableConfigurations:generateConfiguration(["smtp-mail.outlook.com"],[587])};Outlook.defaultConfiguration=getConfiguration(Outlook,587);const Sendgrid={id:"sendgrid",name:"Sendgrid",icon:"sendgrid.svg",help_page:"https://docs.sendgrid.com/for-developers/sending-email/integrating-with-the-smtp-api",availableConfigurations:generateConfiguration(["smtp.sendgrid.net"],[25,2525,587])};Sendgrid.defaultConfiguration=getConfiguration(Sendgrid,587);const Sendinblue={id:"sendinblue",name:"Sendinblue",icon:"sendinblue.svg",help_page:"https://help.sendinblue.com/hc/en-us/articles/209462765",availableConfigurations:generateConfiguration(["smtp-relay.sendinblue.com"],[25,587])};Sendinblue.defaultConfiguration=getConfiguration(Sendinblue,587);const Zoho={id:"zoho",name:"Zoho",icon:"zoho.svg",help_page:"https://www.zoho.com/mail/help/zoho-smtp.html",availableConfigurations:generateConfiguration(["smtp.zoho.eu","smtppro.zoho.eu"],[587])};Zoho.defaultConfiguration=getConfiguration(Zoho,587,"smtp.zoho.eu");const __WEBPACK_DEFAULT_EXPORT__=[AwsSes,ElasticEmail,GoogleMail,GoogleWorkspace,MailGun,Mailjet,Mandrill,Office365,Outlook,Sendgrid,Sendinblue,Zoho,{id:"other",name:"Other",icon:null,availableConfigurations:[],defaultConfiguration:{host:"",port:"",tls:!0}}]},"./src/react-extension/components/Administration/SendTestMailDialog/SendTestMailDialog.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),_contexts_AdminSmtpSettingsContext__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/contexts/AdminSmtpSettingsContext.js"),_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/shared/components/Icons/Icon.js"),_shared_services_validator_AppEmailValidatorService__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/shared/services/validator/AppEmailValidatorService.js");const uiStateEnum_FORM="form",uiStateEnum_ERROR="error",uiStateEnum_SUCCESS="success";class SendTestMailDialog extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{uiState:uiStateEnum_FORM,recipient:this.props.context.loggedInUser.username,processing:!1,displayLogs:!0}}bindCallbacks(){this.handleRetryClick=this.handleRetryClick.bind(this),this.handleError=this.handleError.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleDisplayLogsClick=this.handleDisplayLogsClick.bind(this)}async handleFormSubmit(event){if(event.preventDefault(),this.validateForm()){try{this.setState({processing:!0});const details=await this.props.adminSmtpSettingsContext.sendTestMailTo(this.state.recipient);this.setState({uiState:uiStateEnum_SUCCESS,debugDetails:this.formatDebug(details.debug),displayLogs:!1})}catch(e){this.handleError(e)}this.setState({processing:!1})}}async handleInputChange(event){this.setState({recipient:event.target.value})}validateForm(){const isValid=_shared_services_validator_AppEmailValidatorService__WEBPACK_IMPORTED_MODULE_8__.A.validate(this.state.recipient,this.props.context.siteSettings);return this.setState({recipientError:isValid?"":this.translate("Recipient must be a valid email")}),isValid}formatDebug(data){return JSON.stringify(data,null,4)}handleError(error){const debugInfo=error.data?.body?.debug,errorMessage=debugInfo?.length>0?debugInfo:error?.message;this.setState({uiState:uiStateEnum_ERROR,debugDetails:this.formatDebug(errorMessage),displayLogs:!0})}handleDisplayLogsClick(){this.setState({displayLogs:!this.state.displayLogs})}handleRetryClick(){this.setState({uiState:uiStateEnum_FORM})}hasAllInputDisabled(){return this.state.processing}get title(){return{form:this.translate("Send test email"),error:this.translate("Something went wrong!"),success:this.translate("Email sent")}[this.state.uiState]||""}get translate(){return this.props.t}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_3__.A,{className:"send-test-email-dialog",title:this.title,onClose:this.props.handleClose,disabled:this.hasAllInputDisabled()},this.state.uiState===uiStateEnum_FORM&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:this.handleFormSubmit,noValidate:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`input text required ${this.state.recipientError?"error":""} ${this.hasAllInputDisabled()?"disabled":""}`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Recipient")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{id:"recipient",type:"text",name:"recipient",required:"required",className:"required fluid form-element ready",placeholder:"name@email.com",onChange:this.handleInputChange,value:this.state.recipient,disabled:this.hasAllInputDisabled()}),this.state.recipientError&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"recipient error-message"},this.state.recipientError))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"message notice"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Pro tip"),":")," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"after clicking on send, a test email will be sent to the recipient email in order to check that your configuration is correct.")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_5__.A,{disabled:this.hasAllInputDisabled(),onClick:this.props.handleClose}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__.A,{disabled:this.hasAllInputDisabled(),processing:this.state.processing,value:this.translate("Send")}))),this.state.uiState===uiStateEnum_ERROR&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-body"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"The test email could not be sent. Kindly check the logs below for more information."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("a",{className:"faq-link",href:"https://help.passbolt.com/faq/hosting/why-email-not-sent",rel:"noopener noreferrer",target:"_blank"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"FAQ: Why are my emails not sent?"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"accordion-header"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"link no-border",onClick:this.handleDisplayLogsClick},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_7__.A,{name:this.state.displayLogs?"caret-down":"caret-right"})," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Logs"))),this.state.displayLogs&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"accordion-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("textarea",{className:"full_report",readOnly:!0,value:this.state.debugDetails}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-footer clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"cancel",disabled:this.hasAllInputDisabled(),onClick:this.handleRetryClick},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Retry")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:"button primary",type:"button",onClick:this.props.handleClose,disabled:this.isProcessing},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Close"))))),this.state.uiState===uiStateEnum_SUCCESS&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-body"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"The test email has been sent. Check your email box, you should receive it in a minute.")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"accordion-header"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"link no-border",onClick:this.handleDisplayLogsClick},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_7__.A,{name:this.state.displayLogs?"caret-down":"caret-right"})," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Logs"))),this.state.displayLogs&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"accordion-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("textarea",{className:"full_report",readOnly:!0,value:this.state.debugDetails}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"message notice"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Pro tip"),":")," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Check your spam folder if you do not hear from us after a while.")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-footer clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"cancel",disabled:this.hasAllInputDisabled(),onClick:this.handleRetryClick},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Retry")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:"button primary",type:"button",onClick:this.props.handleClose,disabled:this.isProcessing},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Close"))))))}}SendTestMailDialog.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_9___default().object,adminSmtpSettingsContext:prop_types__WEBPACK_IMPORTED_MODULE_9___default().object,handleClose:prop_types__WEBPACK_IMPORTED_MODULE_9___default().func,t:prop_types__WEBPACK_IMPORTED_MODULE_9___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_2__.L)((0,_contexts_AdminSmtpSettingsContext__WEBPACK_IMPORTED_MODULE_4__.fZ)((0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(SendTestMailDialog)));SendTestMailDialog.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks",modifiers:[],params:[],returns:null,description:"Bind callbacks"},{name:"handleFormSubmit",docblock:"Handles the form submission\n@param {Event} event\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"event",type:{name:"Event"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handles the form submission"},{name:"handleInputChange",docblock:"Handles form input changes\n@param {Event} event\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"event",type:{name:"Event"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handles form input changes"},{name:"validateForm",docblock:"Validates the current form\n@returns {Promise<Boolean>} true if the form is valid, false otherwise",modifiers:[],params:[],returns:{description:"true if the form is valid, false otherwise",type:{name:"Promise",elements:[{name:"Boolean"}]}},description:"Validates the current form"},{name:"formatDebug",docblock:"Format the JSON debug message for the log details.\n@param {object} data a serializable JS object\n@returns {string} a human readable JSON",modifiers:[],params:[{name:"data",description:"a serializable JS object",type:{name:"object"},optional:!1}],returns:{description:"a human readable JSON",type:{name:"string"}},description:"Format the JSON debug message for the log details."},{name:"handleError",docblock:"Handles error by setting the debug info from the error message and setting the UI state to ERROR\n@param {Error} error the error to parse",modifiers:[],params:[{name:"error",description:"the error to parse",type:{name:"Error"},optional:!1}],returns:null,description:"Handles error by setting the debug info from the error message and setting the UI state to ERROR"},{name:"handleDisplayLogsClick",docblock:'Handle the click on "Logs" button by toggling the log details display state.',modifiers:[],params:[],returns:null,description:'Handle the click on "Logs" button by toggling the log details display state.'},{name:"handleRetryClick",docblock:'Handle the click on "Retry" button by setting the UI to FORM state.',modifiers:[],params:[],returns:null,description:'Handle the click on "Retry" button by setting the UI to FORM state.'},{name:"hasAllInputDisabled",docblock:"Returns true if the input must be disabled.\nIt's true when the data is under process in the admin SMTP context.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the input must be disabled.\nIt's true when the data is under process in the admin SMTP context."},{name:"title",docblock:"Returns the title string to display on the dialog based on the UI state.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the title string to display on the dialog based on the UI state."},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"SendTestMailDialog",props:{context:{description:"",type:{name:"object"},required:!1},adminSmtpSettingsContext:{description:"",type:{name:"object"},required:!1},handleClose:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/contexts/AdminSmtpSettingsContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>contexts_AdminSmtpSettingsContext,fZ:()=>withAdminSmtpSettings});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),apiClient=__webpack_require__("./src/shared/lib/apiClient/apiClient.js");const smtpSettings_SmtpSettingsService=class SmtpSettingsService{constructor(apiClientOptions){apiClientOptions.setResourceName("smtp/settings"),this.apiClient=new apiClient.O(apiClientOptions)}async find(){const smtpSettings=await this.apiClient.findAll(),settings=smtpSettings?.body;return settings.client=settings.client??"",settings.tls=Boolean(settings?.tls),settings}async save(smtpSettings){const savedSettings=(await this.apiClient.create(smtpSettings)).body;return savedSettings.tls=Boolean(savedSettings.tls),savedSettings}};const smtpSettings_SmtpSettingsModel=class SmtpSettingsModel{constructor(apiClientOptions){this.smtpSettingsService=new smtpSettings_SmtpSettingsService(apiClientOptions)}findSmtpSettings(){return this.smtpSettingsService.find()}saveSmtpSettings(smtpSettings){return this.smtpSettingsService.save(smtpSettings)}};const smtpSettings_SmtpTestSettingsService=class SmtpTestSettingsService{constructor(apiClientOptions){apiClientOptions.setResourceName("smtp/email"),this.apiClient=new apiClient.O(apiClientOptions)}async sendTestEmail(sendTestEmailDto){return(await this.apiClient.create(sendTestEmailDto)).body}};const smtpSettings_SmtpTestSettingsModel=class SmtpTestSettingsModel{constructor(apiClientOptions){this.smtpTestSettingsService=new smtpSettings_SmtpTestSettingsService(apiClientOptions)}sendTestEmail(settings,recipient){const{sender_name,sender_email,host,port,client,username,password,tls}=settings,dto={sender_name,sender_email,host,port,client,username,password,tls,email_test_to:recipient};return dto.client=dto.client||null,this.smtpTestSettingsService.sendTestEmail(dto)}};var SmtpProviders_data=__webpack_require__("./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/SmtpProviders.data.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),DomainUtil=__webpack_require__("./src/react-extension/lib/Domain/DomainUtil.js"),AppEmailValidatorService=__webpack_require__("./src/shared/services/validator/AppEmailValidatorService.js");const AdminSmtpSettingsContext=react.createContext({getCurrentSmtpSettings:()=>{},findSmtpSettings:()=>{},changeProvider:()=>{},setData:()=>{},isSettingsModified:()=>{},isSettingsValid:()=>{},getErrors:()=>{},validateData:()=>{},getFieldToFocus:()=>{},saveSmtpSettings:()=>{},isProcessing:()=>{},hasProviderChanged:()=>{},sendTestMailTo:()=>{},isDataReady:()=>{},clearContext:()=>{}});class AdminSmtpSettingsContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.smtpSettingsModel=new smtpSettings_SmtpSettingsModel(apiClientOptions),this.smtpTestSettingsModel=new smtpSettings_SmtpTestSettingsModel(apiClientOptions),this.fieldToFocus=null,this.providerHasChanged=!1}get defaultState(){return{settingsModified:!1,currentSmtpSettings:{provider:null,username:"",password:"",host:"",tls:!0,port:"",client:"",sender_email:"",sender_name:"Passbolt"},errors:{},isLoaded:!1,processing:!1,hasSumittedForm:!1,getCurrentSmtpSettings:this.getCurrentSmtpSettings.bind(this),findSmtpSettings:this.findSmtpSettings.bind(this),changeProvider:this.changeProvider.bind(this),setData:this.setData.bind(this),isSettingsModified:this.isSettingsModified.bind(this),getErrors:this.getErrors.bind(this),validateData:this.validateData.bind(this),getFieldToFocus:this.getFieldToFocus.bind(this),saveSmtpSettings:this.saveSmtpSettings.bind(this),isProcessing:this.isProcessing.bind(this),hasProviderChanged:this.hasProviderChanged.bind(this),sendTestMailTo:this.sendTestMailTo.bind(this),isDataReady:this.isDataReady.bind(this),clearContext:this.clearContext.bind(this)}}async findSmtpSettings(){if(!this.props.context.siteSettings.canIUse("smtpSettings"))return;let currentSmtpSettings=this.state.currentSmtpSettings;try{currentSmtpSettings=await this.smtpSettingsModel.findSmtpSettings(),this.setState({currentSmtpSettings,isLoaded:!0})}catch(e){this.handleError(e)}currentSmtpSettings.sender_email||(currentSmtpSettings.sender_email=this.props.context.loggedInUser.username),currentSmtpSettings.host&&currentSmtpSettings.port&&(currentSmtpSettings.provider=this.detectProvider(currentSmtpSettings)),this.setState({currentSmtpSettings,isLoaded:!0})}clearContext(){const{settingsModified,currentSmtpSettings,errors,isLoaded,processing,hasSumittedForm}=this.defaultState;this.setState({settingsModified,currentSmtpSettings,errors,isLoaded,processing,hasSumittedForm})}async saveSmtpSettings(){this._doProcess((async()=>{try{const dto={...this.state.currentSmtpSettings};delete dto.provider,dto.client=dto.client||null,await this.smtpSettingsModel.saveSmtpSettings(dto),this.props.actionFeedbackContext.displaySuccess(this.props.t("The SMTP settings have been saved successfully"));const newSettings=Object.assign({},this.state.currentSmtpSettings,{source:"db"});this.setState({currentSmtpSettings:newSettings})}catch(e){this.handleError(e)}}))}async sendTestMailTo(recipient){return await this.smtpTestSettingsModel.sendTestEmail(this.getCurrentSmtpSettings(),recipient)}_doProcess(callback){this.setState({processing:!0},(async()=>{await callback(),this.setState({processing:!1})}))}hasProviderChanged(){const hasChanged=this.providerHasChanged;return this.providerHasChanged=!1,hasChanged}changeProvider(provider){provider.id!==this.state.currentSmtpSettings.provider?.id&&(this.providerHasChanged=!0,this.setState({settingsModified:!0,currentSmtpSettings:{...this.state.currentSmtpSettings,...provider.defaultConfiguration,provider}}))}setData(data){const newSettings=Object.assign({},this.state.currentSmtpSettings,data),newState={currentSmtpSettings:{...newSettings,provider:this.detectProvider(newSettings)},settingsModified:!0};this.setState(newState),this.state.hasSumittedForm&&this.validateData(newSettings)}detectProvider(settings){for(let i=0;i<SmtpProviders_data.A.length;i++){const provider=SmtpProviders_data.A[i];if(provider.availableConfigurations.find((config=>config.host===settings.host&&config.port===parseInt(settings.port,10)&&config.tls===settings.tls)))return provider}return SmtpProviders_data.A.find((provider=>"other"===provider.id))}isDataReady(){return this.state.isLoaded}isProcessing(){return this.state.processing}isSettingsModified(){return this.state.settingsModified}getErrors(){return this.state.errors}validateData(settings){settings=settings||this.state.currentSmtpSettings;const errors={};let isFormValid=!0;return isFormValid=this.validate_host(settings.host,errors)&&isFormValid,isFormValid=this.validate_sender_email(settings.sender_email,errors)&&isFormValid,isFormValid=this.validate_sender_name(settings.sender_name,errors)&&isFormValid,isFormValid=this.validate_username(settings.username,errors)&&isFormValid,isFormValid=this.validate_password(settings.password,errors)&&isFormValid,isFormValid=this.validate_port(settings.port,errors)&&isFormValid,isFormValid=this.validate_tls(settings.tls,errors)&&isFormValid,isFormValid=this.validate_client(settings.client,errors)&&isFormValid,isFormValid||(this.fieldToFocus=this.getFirstFieldInError(errors,["username","password","host","tls","port","client","sender_name","sender_email"])),this.setState({errors,hasSumittedForm:!0}),isFormValid}validate_host(data,errors){return"string"!=typeof data?(errors.host=this.props.t("SMTP Host must be a valid string"),!1):0!==data.length||(errors.host=this.props.t("SMTP Host is required"),!1)}validate_client(data,errors){return!!(0===data.length||DomainUtil.A.isValidHostname(data)&&data.length<=2048)||(errors.client=this.props.t("SMTP client should be a valid domain or IP address"),!1)}validate_sender_email(data,errors){return"string"!=typeof data?(errors.sender_email=this.props.t("Sender email must be a valid email"),!1):0===data.length?(errors.sender_email=this.props.t("Sender email is required"),!1):!!AppEmailValidatorService.A.validate(data,this.props.context.siteSettings)||(errors.sender_email=this.props.t("Sender email must be a valid email"),!1)}validate_sender_name(data,errors){return"string"!=typeof data?(errors.sender_name=this.props.t("Sender name must be a valid string"),!1):0!==data.length||(errors.sender_name=this.props.t("Sender name is required"),!1)}validate_username(data,errors){return null===data||("string"==typeof data||(errors.username=this.props.t("Username must be a valid string"),!1))}validate_password(data,errors){return null===data||("string"==typeof data||(errors.password=this.props.t("Password must be a valid string"),!1))}validate_tls(data,errors){return"boolean"==typeof data||(errors.tls=this.props.t("TLS must be set to 'Yes' or 'No'"),!1)}validate_port(data,errors){const portNum=parseInt(data,10);return isNaN(portNum)?(errors.port=this.props.t("Port must be a valid number"),!1):!(portNum<1||portNum>65535)||(errors.port=this.props.t("Port must be a number between 1 and 65535"),!1)}getFirstFieldInError(errors,fieldPriority){for(let i=0;i<fieldPriority.length;i++){const fieldName=fieldPriority[i];if(void 0!==errors[fieldName])return fieldName}return null}getCurrentSmtpSettings(){return this.state.currentSmtpSettings}getFieldToFocus(){const field=this.fieldToFocus;return this.fieldToFocus=null,field}handleError(error){console.error(error),this.props.dialogContext.open(NotifyError.A,{error})}render(){return react.createElement(AdminSmtpSettingsContext.Provider,{value:this.state},this.props.children)}}AdminSmtpSettingsContextProvider.propTypes={context:prop_types_default().any,dialogContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,children:prop_types_default().any,t:prop_types_default().func};const contexts_AdminSmtpSettingsContext=(0,AppContext.L)((0,DialogContext.z9)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(AdminSmtpSettingsContextProvider))));function withAdminSmtpSettings(WrappedComponent){return class WithAdminSmtpSettings extends react.Component{render(){return react.createElement(AdminSmtpSettingsContext.Consumer,null,(adminSmtpSettingsContext=>react.createElement(WrappedComponent,{adminSmtpSettingsContext,...this.props})))}}}AdminSmtpSettingsContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findSmtpSettings",docblock:"Find the SMTP settings\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find the SMTP settings"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."},{name:"saveSmtpSettings",docblock:"Register the settings against the API\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Register the settings against the API"},{name:"sendTestMailTo",docblock:"Send a call to the API in order to send a test email\n@returns {Promise<object>}",modifiers:["async"],params:[{name:"recipient",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"object"}]}},description:"Send a call to the API in order to send a test email"},{name:"_doProcess",docblock:'Run the given callback by ensuring the "processing" state is handled properly.\n@returns {Promise<void>}',modifiers:[],params:[{name:"callback",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:'Run the given callback by ensuring the "processing" state is handled properly.'},{name:"hasProviderChanged",docblock:"Returns true if the provider field has been changed (if asked a second time in a row, it returns false).\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the provider field has been changed (if asked a second time in a row, it returns false)."},{name:"changeProvider",docblock:"Handle change of provider.\n@param {object} provider",modifiers:[],params:[{name:"provider",type:{name:"object"},optional:!1}],returns:null,description:"Handle change of provider."},{name:"setData",docblock:"Set a given state field of this context.\n@param {object} data Settings data to update as key value object.",modifiers:[],params:[{name:"data",description:"Settings data to update as key value object.",type:{name:"object"},optional:!1}],returns:null,description:"Set a given state field of this context."},{name:"detectProvider",docblock:'Returns a provider based on the current configuration or the provider "other" if none detected\n@param {object} settings the settings from which to detect the provider\n@returns {object}',modifiers:[],params:[{name:"settings",description:"the settings from which to detect the provider",type:{name:"object"},optional:!1}],returns:{type:{name:"object"}},description:'Returns a provider based on the current configuration or the provider "other" if none detected'},{name:"isDataReady",docblock:"Returns true when the data is loaded from the server\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is loaded from the server"},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"isSettingsModified",docblock:"Returns true if the current settings has been modified in the state\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the current settings has been modified in the state"},{name:"getErrors",docblock:"Returns all the errors found during the validation step\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns all the errors found during the validation step"},{name:"validateData",docblock:"Validates the current data in the state\n@param {object} settings (Optional) The settings to validate, if not provided use the settings from the state.\n@returns {boolean} true if the data is valid, false otherwise",modifiers:[],params:[{name:"settings",description:"(Optional) The settings to validate, if not provided use the settings from the state.",type:{name:"object"},optional:!1}],returns:{description:"true if the data is valid, false otherwise",type:{name:"boolean"}},description:"Validates the current data in the state"},{name:"validate_host",docblock:"Returns true if the host value is valid\n@param {string} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"string"},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the host value is valid"},{name:"validate_client",docblock:"Returns true if the client value is valid\n@param {string|null} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"union",elements:[{name:"string"}]},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the client value is valid"},{name:"validate_sender_email",docblock:"Returns true if the sender_email value is valid\n@param {string} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"string"},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the sender_email value is valid"},{name:"validate_sender_name",docblock:"Returns true if the sender_name value is valid\n@param {string} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"string"},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the sender_name value is valid"},{name:"validate_username",docblock:"Returns true if the username value is valid\n@param {string|null} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"union",elements:[{name:"string"}]},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the username value is valid"},{name:"validate_password",docblock:"Returns true if the password value is valid\n@param {string|null} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"union",elements:[{name:"string"}]},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the password value is valid"},{name:"validate_tls",docblock:"Returns true if the tls value is valid\n@param {string} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"string"},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the tls value is valid"},{name:"validate_port",docblock:"Returns true if the port value is valid\n@param {string} data the data to validate\n@param {object} errors a ref object to put the validation onto\n@returns {boolean}",modifiers:[],params:[{name:"data",description:"the data to validate",type:{name:"string"},optional:!1},{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the port value is valid"},{name:"getFirstFieldInError",docblock:"Returns the first field with an error (first in the given list)\n@param {object} errors a ref object to put the validation onto\n@param {Array<string>} fieldPriority the ordered list of field to check\n@returns {string|null}",modifiers:[],params:[{name:"errors",description:"a ref object to put the validation onto",type:{name:"object"},optional:!1},{name:"fieldPriority",description:"the ordered list of field to check",type:{name:"Array",elements:[{name:"string"}]},optional:!1}],returns:{type:{name:"union",elements:[{name:"string"}]}},description:"Returns the first field with an error (first in the given list)"},{name:"getCurrentSmtpSettings",docblock:"Returns the current SMTP settings that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the current SMTP settings that have been fetch previously."},{name:"getFieldToFocus",docblock:"Returns the field name to focus on (if called twice in a row, the second time will return null).\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Returns the field name to focus on (if called twice in a row, the second time will return null)."},{name:"handleError",docblock:"Handle exception by displaying a pop-up containing the details of the error.\n@param {Error} error",modifiers:[],params:[{name:"error",type:{name:"Error"},optional:!1}],returns:null,description:"Handle exception by displaying a pop-up containing the details of the error."}],displayName:"AdminSmtpSettingsContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},children:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);