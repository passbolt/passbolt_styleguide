/*! For license information please see react-extension-components-Authentication-CreateGpgKey-CreateGpgKey-test-stories.67f0e59a.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[8235],{"./src/react-extension/components/Authentication/CreateGpgKey/CreateGpgKey.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GenerateAccountRecoveryGpgKey:()=>GenerateAccountRecoveryGpgKey,Setup:()=>Setup,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CreateGpgKey_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),Password=__webpack_require__("./src/shared/components/Password/Password.js"),SecretGenerator=__webpack_require__("./src/shared/lib/SecretGenerator/SecretGenerator.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),pownedService=__webpack_require__("./src/shared/services/api/secrets/pownedService.js"),PasswordComplexityWithGoal=__webpack_require__("./src/shared/components/PasswordComplexityWithGoal/PasswordComplexityWithGoal.js");const CreateGpgKeyVariation_SETUP="Setup",CreateGpgKeyVariation_GENERATE_ACCOUNT_RECOVERY_GPG_KEY="Account recovery request key";class CreateGpgKey extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.pownedService=null,this.bindEventHandlers(),this.createReferences()}get defaultState(){return{passphrase:"",passphraseEntropy:null,actions:{processing:!1},passphraseInDictionnary:!1}}get areActionsAllowed(){return!this.state.actions.processing}get isValid(){const validation={notInDictionary:null===this.pownedService||!this.state.passphraseInDictionnary,enoughEntropy:this.isMinimumRequiredEntropyReached(this.state.passphraseEntropy)};return Object.values(validation).every((value=>value))}get minimumEntropyRequired(){return this.props.userPassphrasePolicies.entropy_minimum}get mustBeDisabled(){return!this.isValid}get isProcessing(){return this.state.actions.processing}bindEventHandlers(){this.handlePassphraseChange=this.handlePassphraseChange.bind(this),this.handleSubmit=this.handleSubmit.bind(this)}createReferences(){this.passphraseInput=react.createRef()}async componentDidMount(){this.focusOnPassphrase(),this.props.userPassphrasePolicies.external_dictionary_check&&this.initPwnedPasswordService()}initPwnedPasswordService(){this.pownedService=new pownedService.A(this.props.context.port)}focusOnPassphrase(){this.passphraseInput.current.focus()}handlePassphraseChange(event){const newState={passphrase:event.target.value,passphraseEntropy:null,passphraseInDictionnary:!1};if(!newState.passphrase.length)return newState.passphraseInDictionnary=!1,void this.setState(newState);newState.passphraseEntropy=SecretGenerator.M.entropy(newState.passphrase),this.setState(newState)}async handleSubmit(event){if(event.preventDefault(),this.toggleProcessing(),!this.isValid)return this.toggleProcessing(),void this.focusOnPassphrase();if(await this.evaluatePassphraseIsInDictionary(this.state.passphrase))return this.toggleProcessing(),void this.focusOnPassphrase();await this.generateGpgKey(),this.toggleProcessing()}async evaluatePassphraseIsInDictionary(passphrase){if(!this.pownedService)return!1;const passphraseInDictionnary=(await this.pownedService.evaluateSecret(passphrase)).inDictionary;return this.setState({passphraseInDictionnary}),passphraseInDictionnary}async generateGpgKey(){await this.props.onComplete(this.state.passphrase)}toggleProcessing(){const actions={...this.state.actions,processing:!this.state.actions.processing};this.setState({actions})}isMinimumRequiredEntropyReached(passphraseEntropy){return passphraseEntropy&&passphraseEntropy>=this.props.userPassphrasePolicies.entropy_minimum}render(){const passphraseEntropy=this.state.passphraseInDictionnary?0:this.state.passphraseEntropy,processingClassName=this.isProcessing?"processing":"",disabledClassName=this.mustBeDisabled?"disabled":"";return react.createElement("div",{className:"create-gpg-key"},react.createElement("h1",null,this.props.displayAs===CreateGpgKeyVariation_SETUP&&react.createElement(es.x6,null,"Welcome to Passbolt, please select a passphrase!"),this.props.displayAs===CreateGpgKeyVariation_GENERATE_ACCOUNT_RECOVERY_GPG_KEY&&react.createElement(es.x6,null,"Choose a new passphrase.")),react.createElement("form",{acceptCharset:"utf-8",onSubmit:this.handleSubmit,className:"enter-passphrase"},react.createElement("p",null,react.createElement(es.x6,null,"This passphrase is the only passphrase you will need to remember from now on, choose wisely!")),react.createElement("div",{className:"input-password-wrapper input required"},react.createElement(Password.A,{id:"passphrase-input",autoComplete:"off",inputRef:this.passphraseInput,value:this.state.passphrase,preview:!0,onChange:this.handlePassphraseChange,disabled:!this.areActionsAllowed}),react.createElement(PasswordComplexityWithGoal.A,{entropy:passphraseEntropy,targetEntropy:this.props.userPassphrasePolicies.entropy_minimum}),react.createElement(react.Fragment,null,this.state.passphraseInDictionnary&&react.createElement("div",{className:"invalid-passphrase error-message"},react.createElement(es.x6,null,"The passphrase is part of an exposed data breach.")))),react.createElement("div",{className:"form-actions"},react.createElement("button",{type:"submit",className:`button primary big full-width ${disabledClassName} ${processingClassName}`,disabled:this.mustBeDisabled||this.isProcessing},react.createElement(es.x6,null,"Next")),this.props.onSecondaryActionClick&&react.createElement("button",{className:"link",type:"button",onClick:this.props.onSecondaryActionClick},{[CreateGpgKeyVariation_SETUP]:react.createElement(es.x6,null,"Or use an existing private key.")}[this.props.displayAs]))))}}CreateGpgKey.defaultProps={displayAs:CreateGpgKeyVariation_SETUP},CreateGpgKey.propTypes={context:prop_types_default().any,onComplete:prop_types_default().func.isRequired,userPassphrasePolicies:prop_types_default().object.isRequired,displayAs:prop_types_default().PropTypes.oneOf([CreateGpgKeyVariation_SETUP,CreateGpgKeyVariation_GENERATE_ACCOUNT_RECOVERY_GPG_KEY]),onSecondaryActionClick:prop_types_default().func};const CreateGpgKey_CreateGpgKey=(0,AppContext.L)((0,es.CI)("common")(CreateGpgKey));CreateGpgKey.__docgenInfo={description:"The component allows the user to create a Gpg key by automatic generation or by manually importing one",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"areActionsAllowed",docblock:"Returns true if the user can perform actions on the component",modifiers:["get"],params:[],returns:null,description:"Returns true if the user can perform actions on the component"},{name:"isValid",docblock:"Returns true if the passphrase is valid",modifiers:["get"],params:[],returns:null,description:"Returns true if the passphrase is valid"},{name:"minimumEntropyRequired",docblock:"Returns the minimum entropy required for the passphrase",modifiers:["get"],params:[],returns:null,description:"Returns the minimum entropy required for the passphrase"},{name:"mustBeDisabled",docblock:"Returns true if the component must be in a disabled mode",modifiers:["get"],params:[],returns:null,description:"Returns true if the component must be in a disabled mode"},{name:"isProcessing",docblock:"Returns true if the component must be in a processing mode",modifiers:["get"],params:[],returns:null,description:"Returns true if the component must be in a processing mode"},{name:"bindEventHandlers",docblock:"Bind the event handlers",modifiers:[],params:[],returns:null,description:"Bind the event handlers"},{name:"createReferences",docblock:"Create component element references",modifiers:[],params:[],returns:null,description:"Create component element references"},{name:"initPwnedPasswordService",docblock:"Initialize the pwned password service",modifiers:[],params:[],returns:null,description:"Initialize the pwned password service"},{name:"focusOnPassphrase",docblock:"Put the focus on the passphrase input",modifiers:[],params:[],returns:null,description:"Put the focus on the passphrase input"},{name:"handlePassphraseChange",docblock:"Whenever the passphrase change\n@param {Event} event The input event",modifiers:[],params:[{name:"event",description:"The input event",type:{name:"Event"},optional:!1}],returns:null,description:"Whenever the passphrase change"},{name:"handleSubmit",docblock:"Whenever the user submits the passphrase\n@param event A form submit event",modifiers:["async"],params:[{name:"event",description:"A form submit event",optional:!1}],returns:null,description:"Whenever the user submits the passphrase"},{name:"evaluatePassphraseIsInDictionary",docblock:"Evaluate if the passphrase is in dictionary\n@param {string} passphrase the passphrase to evaluate\n@return {Promise<boolean>}",modifiers:["async"],params:[{name:"passphrase",description:"the passphrase to evaluate",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"boolean"}]}},description:"Evaluate if the passphrase is in dictionary"},{name:"generateGpgKey",docblock:"Generate the Gpg key",modifiers:["async"],params:[],returns:null,description:"Generate the Gpg key"},{name:"toggleProcessing",docblock:"Toggle the processing mode",modifiers:[],params:[],returns:null,description:"Toggle the processing mode"},{name:"isMinimumRequiredEntropyReached",docblock:"Returns true if the given entropy is greater or equal to the minimum required entropy.\n@param {number} passphraseEntropy\n@returns {boolean}",modifiers:[],params:[{name:"passphraseEntropy",type:{name:"number"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the given entropy is greater or equal to the minimum required entropy."}],displayName:"CreateGpgKey",props:{displayAs:{defaultValue:{value:"'Setup'",computed:!1},description:"",type:{name:"enum",value:[{value:"'Setup'",computed:!1},{value:"'Account recovery request key'",computed:!1}]},required:!1},context:{description:"",type:{name:"any"},required:!1},onComplete:{description:"",type:{name:"func"},required:!0},userPassphrasePolicies:{description:"",type:{name:"object"},required:!0},onSecondaryActionClick:{description:"",type:{name:"func"},required:!1}}};var ApiAppContext_test_data=__webpack_require__("./src/react-extension/contexts/ApiAppContext.test.data.js"),UserPassphrasePoliciesDto_test_data=__webpack_require__("./src/shared/models/userPassphrasePolicies/UserPassphrasePoliciesDto.test.data.js");function defaultProps(props){const defaultProps={context:(0,ApiAppContext_test_data.s)({siteSettings:{canIUse:()=>!0}}),userPassphrasePolicies:(0,UserPassphrasePoliciesDto_test_data.Vg)(),displayAs:CreateGpgKeyVariation_SETUP,onComplete:jest.fn((()=>Promise.resolve())),onSecondaryActionClick:jest.fn((()=>Promise.resolve()))};return Object.assign(defaultProps,props||{})}const CreateGpgKey_test_stories={title:"Components/Authentication/CreateGpgKey",component:CreateGpgKey_CreateGpgKey},Template=args=>react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.MemoryRouter,{initialEntries:["/"]},react.createElement(react_router.Route,{component:routerProps=>react.createElement(CreateGpgKey_CreateGpgKey,{...args,...routerProps})}))))),defaultParameters={css:"ext_authentication"},Setup=Template.bind({});Setup.args=defaultProps({displayAs:CreateGpgKeyVariation_SETUP}),Setup.parameters=defaultParameters;const GenerateAccountRecoveryGpgKey=Template.bind({});GenerateAccountRecoveryGpgKey.args=defaultProps({displayAs:CreateGpgKeyVariation_GENERATE_ACCOUNT_RECOVERY_GPG_KEY}),GenerateAccountRecoveryGpgKey.parameters=defaultParameters;const __namedExportsOrder=["Setup","GenerateAccountRecoveryGpgKey"];Setup.parameters={...Setup.parameters,docs:{...Setup.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <CreateGpgKey {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...Setup.parameters?.docs?.source}}},GenerateAccountRecoveryGpgKey.parameters={...GenerateAccountRecoveryGpgKey.parameters,docs:{...GenerateAccountRecoveryGpgKey.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <CreateGpgKey {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...GenerateAccountRecoveryGpgKey.parameters?.docs?.source}}}},"./src/img/svg/eye_close.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgEyeClose(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",viewBox:"0 0 16 16"},props),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,clipPath:"url(#eye_close_svg__clip0_27_140048)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M6.587 6.587a2 2 0 1 0 2.826 2.827M7.153 3.386q.422-.052.847-.053C12.667 3.333 14.667 8 14.667 8a8.8 8.8 0 0 1-1.114 1.786"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M4.407 4.406A9 9 0 0 0 1.333 8s2 4.666 6.667 4.666a6.5 6.5 0 0 0 3.593-1.073M1.333 1.333l13.334 13.333"}))))}},"./src/img/svg/eye_open.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgEyeOpen(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",viewBox:"0 0 16 16"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M1.333 8s2-4.667 6.667-4.667S14.667 8 14.667 8s-2 4.666-6.667 4.666S1.333 8 1.333 8"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4"})))}},"./src/react-extension/components/Common/Tooltip/Tooltip.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class Tooltip extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"tooltip",tabIndex:"0"},this.props.children,react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:`tooltip-text ${this.props.direction}`},this.props.message))}}Tooltip.defaultProps={direction:"right"},Tooltip.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any,message:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any.isRequired,direction:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string};const __WEBPACK_DEFAULT_EXPORT__=Tooltip;Tooltip.__docgenInfo={description:"",methods:[],displayName:"Tooltip",props:{direction:{defaultValue:{value:"'right'",computed:!1},description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"any"},required:!1},message:{description:"",type:{name:"any"},required:!0}}}},"./src/shared/components/Password/Password.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_img_svg_eye_open_svg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/img/svg/eye_open.svg"),_img_svg_eye_close_svg__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/img/svg/eye_close.svg"),react_i18next__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class Password extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{viewPassword:!1,hasPassphraseFocus:!1,isPassphraseActive:!1}}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this),this.handlePasswordInputFocus=this.handlePasswordInputFocus.bind(this),this.handlePasswordInputBlur=this.handlePasswordInputBlur.bind(this),this.handleViewPasswordButtonClick=this.handleViewPasswordButtonClick.bind(this),this.handleMouseDown=this.handleMouseDown.bind(this),this.handleMouseUp=this.handleMouseUp.bind(this)}handleInputChange(event){this.props.onChange&&this.props.onChange(event)}handlePasswordInputFocus(){this.setState({hasPassphraseFocus:!0})}handlePasswordInputBlur(){this.setState({hasPassphraseFocus:!1})}handleViewPasswordButtonClick(){this.props.disabled||this.setState({viewPassword:!this.state.viewPassword})}get securityTokenStyle(){const inverseStyle={background:this.props.securityToken.textColor,color:this.props.securityToken.backgroundColor},fullStyle={background:this.props.securityToken.backgroundColor,color:this.props.securityToken.textColor};return this.state.hasPassphraseFocus?inverseStyle:fullStyle}get passphraseInputStyle(){if(!this.state.hasPassphraseFocus)return;const{backgroundColor}=this.props.securityToken,textColor=this.getContrastTextColor(backgroundColor);return{background:backgroundColor,color:textColor,"--passphrase-placeholder-color":textColor}}get previewStyle(){if(!this.state.hasPassphraseFocus)return;const{backgroundColor}=this.props.securityToken;return{"--icon-color":this.getContrastTextColor(backgroundColor),"--icon-background-color":backgroundColor}}getContrastTextColor(backgroundColor){const hex=backgroundColor.replace("#",""),bigint=parseInt(hex,16);return(.299*(bigint>>16&255)+.587*(bigint>>8&255)+.114*(255&bigint))/255>.5?"var(--Token-Token-text-and-icon)":"var(--Token-Token-text-and-icon-reversed)"}handleMouseDown(){this.setState({isPassphraseActive:!0})}handleMouseUp(){this.setState({isPassphraseActive:!1})}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`input password ${this.props.disabled?"disabled":""} ${this.state.hasPassphraseFocus?"":"no-focus"} ${this.state.isPassphraseActive?"active":""} ${this.props.securityToken?"security":""}`,style:this.props.securityToken?this.passphraseInputStyle:void 0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{id:this.props.id,name:this.props.name,maxLength:"4096",placeholder:this.props.placeholder,type:this.state.viewPassword&&!this.props.disabled?"text":"password",onKeyUp:this.props.onKeyUp,value:this.props.value,onFocus:this.handlePasswordInputFocus,onBlur:this.handlePasswordInputBlur,onChange:this.handleInputChange,disabled:this.props.disabled,readOnly:this.props.readOnly,autoComplete:this.props.autoComplete,onMouseDown:this.handleMouseDown,onMouseUp:this.handleMouseUp,"aria-required":!0,ref:this.props.inputRef}),this.props.preview&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"password-view-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",onClick:this.handleViewPasswordButtonClick,style:this.props.securityToken?this.previewStyle:void 0,className:"password-view infield button-transparent "+(this.props.disabled?"disabled":"")},!this.state.viewPassword&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_img_svg_eye_open_svg__WEBPACK_IMPORTED_MODULE_1__.A,{className:"svg-icon eye-open"}),this.state.viewPassword&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_img_svg_eye_close_svg__WEBPACK_IMPORTED_MODULE_2__.A,{className:"svg-icon eye-close"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"visually-hidden"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_3__.x6,null,"View")))),this.props.securityToken&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"security-token-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"security-token",style:this.securityTokenStyle},this.props.securityToken.code)))}}Password.defaultProps={id:"",name:"",autoComplete:"off"},Password.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_4___default().any,id:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,name:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,value:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,placeholder:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,autoComplete:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,inputRef:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object,disabled:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,preview:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,onChange:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,onKeyUp:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,securityToken:prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({code:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,backgroundColor:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,textColor:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string})};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_3__.CI)("common")(Password);Password.__docgenInfo={description:"This component represent a password input field with some additional properties",methods:[{name:"defaultState",docblock:null,modifiers:["get"],params:[],returns:null},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input change.\n@params {ReactEvent} The react event.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle form input change."},{name:"handlePasswordInputFocus",docblock:"Whenever the user focus on the password input",modifiers:[],params:[],returns:null,description:"Whenever the user focus on the password input"},{name:"handlePasswordInputBlur",docblock:"Whenever the user blurs on the password input",modifiers:[],params:[],returns:null,description:"Whenever the user blurs on the password input"},{name:"handleViewPasswordButtonClick",docblock:"Handle view password button click.",modifiers:[],params:[],returns:null,description:"Handle view password button click."},{name:"securityTokenStyle",docblock:"Returns the style of the security token (color and text color)",modifiers:["get"],params:[],returns:null,description:"Returns the style of the security token (color and text color)"},{name:"passphraseInputStyle",docblock:"Get the passphrase input style.\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the passphrase input style."},{name:"previewStyle",docblock:"Returns the style of preview (icon color and icon background color)",modifiers:["get"],params:[],returns:null,description:"Returns the style of preview (icon color and icon background color)"},{name:"getContrastTextColor",docblock:"Calculate the luminance of a color and return the appropriate text color variable.\n@param {string} backgroundColor - The background color in hex format.\n@returns {string} - The CSS variable for text color.",modifiers:[],params:[{name:"backgroundColor",description:"The background color in hex format.",type:{name:"string"},optional:!1}],returns:{description:"The CSS variable for text color.",type:{name:"string"}},description:"Calculate the luminance of a color and return the appropriate text color variable."},{name:"handleMouseDown",docblock:"Handle the mouse down to set active item",modifiers:[],params:[],returns:null,description:"Handle the mouse down to set active item"},{name:"handleMouseUp",docblock:"Handle the mouse down to set active item to false",modifiers:[],params:[],returns:null,description:"Handle the mouse down to set active item to false"}],displayName:"Password",props:{id:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},name:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},autoComplete:{defaultValue:{value:'"off"',computed:!1},description:"",type:{name:"string"},required:!1},context:{description:"",type:{name:"any"},required:!1},value:{description:"",type:{name:"string"},required:!1},placeholder:{description:"",type:{name:"string"},required:!1},inputRef:{description:"",type:{name:"object"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1},readOnly:{description:"",type:{name:"bool"},required:!1},preview:{description:"",type:{name:"bool"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},onKeyUp:{description:"",type:{name:"func"},required:!1},securityToken:{description:"",type:{name:"shape",value:{code:{name:"string",required:!1},backgroundColor:{name:"string",required:!1},textColor:{name:"string",required:!1}}},required:!1}}}},"./src/shared/components/PasswordComplexityWithGoal/PasswordComplexityWithGoal.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),_lib_SecretGenerator_SecretGeneratorComplexity__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/lib/SecretGenerator/SecretGeneratorComplexity.js"),_react_extension_components_Common_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/components/Common/Tooltip/Tooltip.js"),_Icons_Icon__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/shared/components/Icons/Icon.js");class PasswordComplexityWithGoal extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{static getRelativeEntropyPosition(entropyValue){return 100-99/(1+Math.pow(entropyValue/90,3))}formatEntropy(entropy){return(entropy=entropy||0).toFixed(1)}get relativeTargetEntropyRatio(){return PasswordComplexityWithGoal.getRelativeEntropyPosition(this.props.targetEntropy)}get targetEntropyPositionStyle(){return{left:`calc(${this.relativeTargetEntropyRatio}% - 0.6rem`}}get colorClassName(){if(!this.hasEntropy())return"";return this.props.entropy>=this.props.targetEntropy?"reached":this.props.isMinimumEntropyRequired?"required":"recommended"}get targetTooltipMessage(){return this.props.isMinimumEntropyRequired?this.props.t("Minimal requirement"):this.props.t("Minimal recommendation")}get currentEntropyTooltipMessage(){const currentEntropy=this.formatEntropy(this.props.entropy),targettedEntropy=this.formatEntropy(this.props.targetEntropy);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Entropy: ",{currentEntropy}," / ",{targettedEntropy}," bits")}get passwordStrengthLabel(){if(!(this.hasEntropy()||this.hasError()))return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Quality");const strength=_lib_SecretGenerator_SecretGeneratorComplexity__WEBPACK_IMPORTED_MODULE_2__.CH.strength(this.props.entropy);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,strength.label)}getProgresseBarStyle(entropy){return{width:`${PasswordComplexityWithGoal.getRelativeEntropyPosition(entropy)}%`}}hasEntropy(){return null!==this.props.entropy&&void 0!==this.props.entropy}hasError(){return this.props.error}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"password-complexity with-goal"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"complexity-text"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_extension_components_Common_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{message:this.currentEntropyTooltipMessage},this.passwordStrengthLabel," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons_Icon__WEBPACK_IMPORTED_MODULE_4__.A,{name:"info-circle"}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"progress"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"progress-bar background"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:`progress-bar target ${this.colorClassName}`,style:this.hasEntropy()?this.getProgresseBarStyle(this.props.targetEntropy):null}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:`progress-bar foreground ${this.colorClassName}`,style:this.hasEntropy()?this.getProgresseBarStyle(this.props.entropy):null}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:`target-entropy ${this.colorClassName}`,style:this.targetEntropyPositionStyle},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_extension_components_Common_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{message:this.targetTooltipMessage},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"tooltip-anchor"})))))}}PasswordComplexityWithGoal.defaultProps={isMinimumEntropyRequired:!0},PasswordComplexityWithGoal.propTypes={targetEntropy:prop_types__WEBPACK_IMPORTED_MODULE_5___default().number.isRequired,isMinimumEntropyRequired:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool.isRequired,entropy:prop_types__WEBPACK_IMPORTED_MODULE_5___default().number,error:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,t:prop_types__WEBPACK_IMPORTED_MODULE_5___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(PasswordComplexityWithGoal);PasswordComplexityWithGoal.__docgenInfo={description:"This component represents a password complexity with the strength and a goal, an entropy and a bar",methods:[{name:"getRelativeEntropyPosition",docblock:"Return a percentage value matching the position of the given entropy compared to the full value possible.\n@param {number} entropyValue\n@returns {number}",modifiers:["static"],params:[{name:"entropyValue",type:{name:"number"},optional:!1}],returns:{type:{name:"number"}},description:"Return a percentage value matching the position of the given entropy compared to the full value possible."},{name:"formatEntropy",docblock:"Get a formatted entropy value to display.\n@param {number} entropy\n@returns {number}",modifiers:[],params:[{name:"entropy",type:{name:"number"},optional:!1}],returns:{type:{name:"number"}},description:"Get a formatted entropy value to display."},{name:"relativeTargetEntropyRatio",docblock:"Get the representative percentage of the targetted entropy compared to the full available entropy\n@returns {number}",modifiers:["get"],params:[],returns:{type:{name:"number"}},description:"Get the representative percentage of the targetted entropy compared to the full available entropy"},{name:"targetEntropyPositionStyle",docblock:"Get the dynamic style of the target entropy cursors.\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the dynamic style of the target entropy cursors."},{name:"colorClassName",docblock:"Get the class to set on the different markers.\n@returns {'reached' | 'required' | 'recommended' | ''}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get the class to set on the different markers."},{name:"targetTooltipMessage",docblock:"Get the translated message for the target tooltip\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the translated message for the target tooltip"},{name:"currentEntropyTooltipMessage",docblock:"Get the message for the current entropy tooltip\n@returns {JSX}",modifiers:["get"],params:[],returns:{type:{name:"JSX"}},description:"Get the message for the current entropy tooltip"},{name:"passwordStrengthLabel",docblock:"Get the password strength label to display based on the actual entropy or error state.\n@returns {JSX};",modifiers:["get"],params:[],returns:{description:";",type:{name:"JSX"}},description:"Get the password strength label to display based on the actual entropy or error state."},{name:"getProgresseBarStyle",docblock:"Get the dynamic part style of the entropy progression bar.\n@param {number} entropy\n@returns {object}",modifiers:[],params:[{name:"entropy",type:{name:"number"},optional:!1}],returns:{type:{name:"object"}},description:"Get the dynamic part style of the entropy progression bar."},{name:"hasEntropy",docblock:"Has entropy\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has entropy"},{name:"hasError",docblock:"Has error\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has error"}],displayName:"PasswordComplexityWithGoal",props:{isMinimumEntropyRequired:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1},targetEntropy:{description:"",type:{name:"number"},required:!0},entropy:{description:"",type:{name:"number"},required:!1},error:{description:"",type:{name:"bool"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/shared/lib/SecretGenerator/SecretGenerator.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>SecretGenerator});var SecretGeneratorComplexity=__webpack_require__("./src/shared/lib/SecretGenerator/SecretGeneratorComplexity.js");const charactersToExclude=["O","l","|","I","0","1"];function randomNumberRange(min,max){const arr=new Uint32Array(1);window.crypto.getRandomValues(arr);const random=arr[0]/4294967296;return Math.floor(random*(max-min+1))+min}const PasswordGenerator={generate:function generate(configuration){const maskNameList=Object.entries(SecretGeneratorComplexity.MU),availableMasks=[];maskNameList.forEach((([maskName])=>{configuration[maskName]&&availableMasks.push(SecretGeneratorComplexity.MU[maskName])}));const secretLength=configuration.length;if(!(availableMasks.length>0&&secretLength>=configuration.min_length&&secretLength<=configuration.max_length))return"";let mask=[];mask=availableMasks.reduce(((mask,currentMask)=>[...mask,...currentMask.characters]),[]),configuration.exclude_look_alike_chars&&(mask=function excludeLookAlikeCharacters(characterArray){return characterArray?characterArray.reduce(((newCharacterArray,character)=>(charactersToExclude.includes(character)||newCharacterArray.push(character),newCharacterArray)),[]):characterArray}(mask));let secret="",attempt=0,secretEntropy=0;const goalEntropy=Math.floor(SecretGeneratorComplexity.CH.calculEntropy(secretLength,mask.length));do{let newSecret="";for(let i=0;i<secretLength;i++)newSecret+=mask[randomNumberRange(0,mask.length-1)];const newSecretEntropy=SecretGeneratorComplexity.CH.entropyPassword(newSecret);newSecretEntropy>secretEntropy&&(secret=newSecret,secretEntropy=newSecretEntropy)}while(secretEntropy<goalEntropy&&attempt++<10);return secret}};var PassphraseGeneratorWords=__webpack_require__("./src/shared/lib/SecretGenerator/PassphraseGeneratorWords.js");function extractWordWithCase(words,wordCase){const extractWord=()=>words[function PassphraseGenerator_randomNumberRange(min,max){const arr=new Uint32Array(1);window.crypto.getRandomValues(arr);const random=arr[0]/4294967296;return Math.floor(random*(max-min+1))+min}(0,words.length-1)];switch(wordCase){case"lowercase":return extractWord().toLowerCase();case"uppercase":return extractWord().toUpperCase();case"camelcase":return(word=extractWord()).charAt(0).toUpperCase()+word.slice(1);default:return extractWord()}var word}const PassphraseGenerator={generate:configuration=>{const wordCount=configuration.words;if(!(wordCount>=configuration.min_words&&wordCount<=configuration.max_words))return"";const wordCase=configuration.word_case,words=PassphraseGeneratorWords.A["en-UK"];return Array.from({length:wordCount},(()=>extractWordWithCase(words,wordCase))).join(configuration.word_separator)},detectPassphrase:function detectPassphrase(secret){const passwordDetected={isPassphrase:!1};if(!secret)return passwordDetected;const separatorsSecret=PassphraseGeneratorWords.A["en-UK"].reduce(((result,word)=>{const remainingSecret=result.remainingSecret.replace(new RegExp(word,"g"),""),newNumberReplacement=(result.remainingSecret.length-remainingSecret.length)/word.length;return{numberReplacement:result.numberReplacement+newNumberReplacement,remainingSecret}}),{numberReplacement:0,remainingSecret:secret.toLowerCase()}),remainingSecret=separatorsSecret.remainingSecret,numberSeparators=separatorsSecret.numberReplacement-1;if(1===numberSeparators){return-1===secret.indexOf(remainingSecret)||secret.startsWith(remainingSecret)||secret.endsWith(remainingSecret)?passwordDetected:{numberWords:2,separator:remainingSecret,isPassphrase:!0}}if(0==remainingSecret.length)return{numberWords:separatorsSecret.numberReplacement,separator:"",isPassphrase:!0};if(remainingSecret.length%numberSeparators!=0)return passwordDetected;const lengthSeparators=remainingSecret.length/numberSeparators,firstSeparator=remainingSecret.substring(0,lengthSeparators),firstSeparatorRegexEscaped=String(firstSeparator).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1"),isPassphrase=0===remainingSecret.replace(new RegExp(firstSeparatorRegexEscaped,"g"),"").length;return{numberWords:separatorsSecret.numberReplacement,separator:firstSeparator,isPassphrase:isPassphrase&&!secret.startsWith(firstSeparator)&&!secret.endsWith(firstSeparator)}}},SecretGenerator={generate:configuration=>{const type=configuration.default_generator;return"password"===type?PasswordGenerator.generate(configuration.password_generator_settings):"passphrase"===type?PassphraseGenerator.generate(configuration.passphrase_generator_settings):void 0},entropy:secret=>{const{numberWords,separator,isPassphrase}=PassphraseGenerator.detectPassphrase(secret);return isPassphrase?SecretGeneratorComplexity.CH.entropyPassphrase(numberWords,separator):SecretGeneratorComplexity.CH.entropyPassword(secret)}}},"./src/shared/models/userPassphrasePolicies/UserPassphrasePoliciesDto.test.data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Vg:()=>defaultUserPassphrasePoliciesEntityDto});const defaultUserPassphrasePoliciesEntityDto=(data={})=>Object.assign({external_dictionary_check:!0,entropy_minimum:112},data)},"./src/shared/services/api/secrets/pownedService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=class PownedService{constructor(port){this.port=port}async evaluateSecret(secret){let inDictionary=!0,isPwnedServiceAvailable=!0;try{inDictionary=await this.checkIfPasswordPowned(secret)}catch(error){inDictionary=!1,isPwnedServiceAvailable=!1}return{inDictionary,isPwnedServiceAvailable}}async checkIfPasswordPowned(password){return await this.port.request("passbolt.secrets.powned-password",password)>0}}}}]);