/*! For license information please see 2201.fcab9f96.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[2201],{"./src/react-extension/components/Administration/DisplayContentTypesMetadataKeyAdministration/DisplayContentTypesMetadataKeyAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Administration_DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),metadataSettingsServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js"),metadataKeysCollection=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysCollection.js"),externalGpgKeyPairEntity=__webpack_require__("./src/shared/models/entity/gpgkey/external/externalGpgKeyPairEntity.js"),metadataKeyEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataKeyEntity.js");const metadataKeysServiceWorkerService=class MetadataKeysServiceWorkerService{constructor(port){this.port=port}async findAll(){const metadataKeysDto=await this.port.request("passbolt.metadata.find-all-non-deleted-metadata-keys");return new metadataKeysCollection.A(metadataKeysDto)}async generateKeyPair(){const externalGpgKeyPairDto=await this.port.request("passbolt.metadata.generate-metadata-key");return new externalGpgKeyPairEntity.A(externalGpgKeyPairDto)}async createKey(metadataKeyPair){if(!(metadataKeyPair instanceof externalGpgKeyPairEntity.A))throw new TypeError("The parameter `metadataKeyPair` should be of type ExternalGpgKeyPairEntity.");const metadataKeyDto=await this.port.request("passbolt.metadata.create-key",metadataKeyPair.toDto({public_key:!0,private_key:!0}));return new metadataKeyEntity.A(metadataKeyDto)}};var Fingerprint=__webpack_require__("./src/react-extension/components/Common/Fingerprint/Fingerprint.js"),externalGpgKeyEntity=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js"),externalGpgKeyCollection=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyCollection.js");const gpgServiceWorkerService=class GpgServiceWorkerService{constructor(port){this.port=port}async keyInfo(armoredKey){const keyInfoDto=await this.port.request("passbolt.keyring.get-key-info",armoredKey);return new externalGpgKeyEntity.A(keyInfoDto)}async keysInfo(armoredKeys=[]){const keysInfoDto=[];for(const armoredKey of armoredKeys){const keyInfo=await this.keyInfo(armoredKey);keysInfoDto.push(keyInfo)}return new externalGpgKeyCollection.A(keysInfoDto)}};var metadataKeysSettingsEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysSettingsEntity.js");class MetadataKeysSettingsFormEntity extends metadataKeysSettingsEntity.A{constructor(dto,options={}){super(dto,options),this._props.generated_metadata_key&&(this._generated_metadata_key=new externalGpgKeyPairEntity.A(this._props.generated_metadata_key,{...options,clone:!1}),delete this._props.generated_metadata_key)}static getSchema(){return{type:"object",required:["allow_usage_of_personal_keys","zero_knowledge_key_share"],properties:{...metadataKeysSettingsEntity.A.getSchema().properties,generated_metadata_key:externalGpgKeyPairEntity.A.getSchema()}}}toDto(){return{...this._props,generated_metadata_key:this.generatedMetadataKey?.toDto({public_key:!0,private_key:!0})||null}}get generatedMetadataKey(){return this._generated_metadata_key||null}set generatedMetadataKey(generatedMetadataKey){if(null!==generatedMetadataKey&&!(generatedMetadataKey instanceof externalGpgKeyPairEntity.A))throw new TypeError("The parameter `generatedMetadataKey` should be of type ExternalGpgKeyPairEntity.");this._generated_metadata_key=generatedMetadataKey}}const metadataKeysSettingsFormEntity=MetadataKeysSettingsFormEntity;var Icon=__webpack_require__("./src/shared/components/Icons/Icon.js");class DisplayContentTypesMetadataKeyAdministration extends react.Component{render(){return react.createElement("div",{className:"col2_3 actions-wrapper"},react.createElement("div",{className:"actions"},react.createElement("ul",null,react.createElement("li",null,react.createElement("button",{type:"button",disabled:this.props.isProcessing,onClick:this.props.onSaveRequested},react.createElement(Icon.A,{name:"save"}),react.createElement("span",null,react.createElement(es.x6,null,"Save settings")))))))}}DisplayContentTypesMetadataKeyAdministration.propTypes={isProcessing:prop_types_default().bool,onSaveRequested:prop_types_default().func,t:prop_types_default().func};const DisplayContentTypesMetadataKeyAdministrationActions=(0,es.CI)("common")(DisplayContentTypesMetadataKeyAdministration);DisplayContentTypesMetadataKeyAdministration.__docgenInfo={description:"",methods:[],displayName:"DisplayContentTypesMetadataKeyAdministration",props:{isProcessing:{description:"",type:{name:"bool"},required:!1},onSaveRequested:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js");class DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration extends react.Component{originalSettings=null;formSettings=null;constructor(props){super(props),this.metadataSettingsServiceWorkerService=props.metadataSettingsServiceWorkerService??new metadataSettingsServiceWorkerService.Ay(props.context.port),this.metadataKeysServiceWorkerService=props.metadataKeysServiceWorkerService??new metadataKeysServiceWorkerService(props.context.port),this.gpgServiceWorkerService=props.gpgServiceWorkerService??new gpgServiceWorkerService(props.context.port),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isProcessing:!0,hasAlreadyBeenValidated:!1,settings:{allow_usage_of_personal_keys:!0,zero_knowledge_key_share:!1,generated_metadata_key:null},activeMetadataKeys:null,expiredMetadataKeys:null}}bindCallbacks(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.generateMetadataKey=this.generateMetadataKey.bind(this),this.save=this.save.bind(this)}async componentDidMount(){await this.loadKeysSettings(),await this.loadKeys(),this.setState({isProcessing:!1})}async loadKeysSettings(){try{const settings=await this.metadataSettingsServiceWorkerService.findKeysSettings();this.originalSettings=new metadataKeysSettingsFormEntity(settings.toDto(),{validate:!1}),this.formSettings=new metadataKeysSettingsFormEntity(settings.toDto(),{validate:!1}),this.setState({settings:this.formSettings.toDto()})}catch(error){await this.handleUnexpectedError(error)}}handleUnexpectedError(error){if(console.error(error),"UserAbortsOperationError"!==error.name)return this.props.dialogContext.open(NotifyError.A,{error})}async loadKeys(){try{const metadataKeys=await this.metadataKeysServiceWorkerService.findAll(),activeMetadataKeys=new metadataKeysCollection.A(metadataKeys);activeMetadataKeys.filterByCallback((metadataKey=>!metadataKey.expired));const expiredMetadataKeys=new metadataKeysCollection.A(metadataKeys);expiredMetadataKeys.filterByCallback((metadataKey=>metadataKey.expired));const armoredKeys=metadataKeys.items.map((metadataKey=>metadataKey.armoredKey)),metadataKeysInfo=await this.gpgServiceWorkerService.keysInfo(armoredKeys);this.setState({activeMetadataKeys,expiredMetadataKeys,metadataKeysInfo})}catch(error){await this.handleUnexpectedError(error)}}hasSettingsChanges=(0,memoize_one_esm.A)(((originalSettings,formSettings,formSettingsDto)=>originalSettings?.hasDiffProps(formSettings)||originalSettings?.generatedMetadataKey!==formSettings?.generatedMetadataKey));handleInputChange(event){if(this.hasAllInputDisabled())return;const{type,checked,value,name}=event.target;let parsedValue=value;"checkbox"===type&&(parsedValue=checked),"allow_usage_of_personal_keys"!==name&&"zero_knowledge_key_share"!==name||(parsedValue="true"===value),this.setFormPropertyValue(name,parsedValue)}setFormPropertyValue(name,parsedValue){this.formSettings.set(name,parsedValue,{validate:!1}),this.setState({settings:this.formSettings.toDto()})}hasAllInputDisabled(){return this.state.isProcessing}async generateMetadataKey(){const metadataKeysInfo=this.state.metadataKeysInfo,activeMetadataKeys=this.state.activeMetadataKeys;this.setState({isProcessing:!0});try{const metadataKeyPair=await this.metadataKeysServiceWorkerService.generateKeyPair(),metadataKeyInfo=await this.gpgServiceWorkerService.keyInfo(metadataKeyPair.publicKey.armoredKey);metadataKeysInfo.push(metadataKeyInfo);const metadataKey=new metadataKeyEntity.A({armored_key:metadataKeyPair.publicKey.armoredKey,fingerprint:metadataKeyInfo.fingerprint});activeMetadataKeys.push(metadataKey),this.formSettings.generatedMetadataKey=metadataKeyPair,this.setState({activeMetadataKeys,metadataKeysInfo,settings:this.formSettings.toDto()})}catch(error){await this.handleUnexpectedError(error)}this.setState({isProcessing:!1})}handleFormSubmit(event){event.preventDefault(),this.save()}async save(){if(this.state.isProcessing)return;this.setState({isProcessing:!0});const validationError=this.validateForm(this.state.settings);if(validationError?.hasErrors())this.setState({isProcessing:!1,hasAlreadyBeenValidated:!0});else{try{await this.saveMetadataKeysSettings(),await this.createMetadataKey(),await this.props.actionFeedbackContext.displaySuccess(this.props.t("The metadata key settings were updated."))}catch(error){await this.handleUnexpectedError(error)}this.setState({isProcessing:!1,settings:this.formSettings.toDto()})}}validateForm=(0,memoize_one_esm.A)((formSettingsDto=>{if(!this.formSettings)return null;let validationErrors=this.formSettings.validate();return this.state.activeMetadataKeys.length||(validationErrors=validationErrors||new entityValidationError.A,validationErrors.addError("generated_metadata_key","required",this.props.t("A shared metadata key is required."))),validationErrors}));async saveMetadataKeysSettings(){const metadataKeysSettings=new metadataKeysSettingsEntity.A(this.formSettings.toDto()),savedMetadataKeysSettings=await this.metadataSettingsServiceWorkerService.saveKeysSettings(metadataKeysSettings);this.originalSettings=new metadataKeysSettingsFormEntity({...this.originalSettings.toDto(),...savedMetadataKeysSettings.toDto()}),this.formSettings=new metadataKeysSettingsFormEntity({...this.formSettings.toDto(),...savedMetadataKeysSettings.toDto()})}async createMetadataKey(){if(!this.formSettings.generatedMetadataKey)return;const metadataKey=await this.metadataKeysServiceWorkerService.createKey(this.formSettings.generatedMetadataKey);this.state.activeMetadataKeys.pushOrReplace(metadataKey,{},{replacePropertyName:"fingerprint"}),this.formSettings.generatedMetadataKey=null}render(){const errors=this.state.hasAlreadyBeenValidated?this.validateForm(this.state.settings):null,hasSettingsChanges=this.hasSettingsChanges(this.originalSettings,this.formSettings,this.state.settings);return react.createElement("div",{className:"row"},(this.props.createPortal||react_dom.createPortal)(react.createElement(DisplayContentTypesMetadataKeyAdministrationActions,{onSaveRequested:this.save,isProcessing:this.state.isProcessing}),document.getElementById("administration-actions-content-action")),react.createElement("div",{id:"content-types-metadata-key-settings",className:"col8 main-column"},react.createElement("form",{onSubmit:this.handleFormSubmit,"data-testid":"submit-form"},react.createElement("h3",null,react.createElement("label",null,react.createElement(es.x6,null,"Metadata key"))),hasSettingsChanges&&react.createElement("div",{className:"warning message form-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))),errors?.hasError("generated_metadata_key","required")&&react.createElement("div",{className:"warning message form-banner"},react.createElement("p",null,react.createElement(es.x6,null,"A shared metadata key is required to save the metadata keys settings."))),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"This section controls the layer of encryption that is used to protect metadata such as the name of a resource, URIs, etc.")),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Metadata key policy")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"It is possible for users to use their personal keys to encrypt resources metadata for more security. However you can elect to enforce the use of the shared metadata keys for all resources metadata for auditing purposes. Secrets such as passwords will always be encrypted using the user personal keys.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+(!0===this.state.settings.allow_usage_of_personal_keys?"checked":"")},react.createElement("input",{type:"radio",value:"true",onChange:this.handleInputChange,name:"allow_usage_of_personal_keys",checked:!0===this.state.settings.allow_usage_of_personal_keys,id:"allowUsageOfPersonalKeysInput",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowUsageOfPersonalKeysInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Allow the use of personal keys. (Recommended)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users can use shared and personal keys. By default personal resources that are not shared will be encrypted with the users personal keys."),react.createElement("br",null))))),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+(!1===this.state.settings.allow_usage_of_personal_keys?"checked":"")},react.createElement("input",{type:"radio",value:"false",onChange:this.handleInputChange,name:"allow_usage_of_personal_keys",checked:!1===this.state.settings.allow_usage_of_personal_keys,id:"disallowUsageOfPersonalKeysInput",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"disallowUsageOfPersonalKeysInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Enforce the use of shared metadata keys.")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"By default, metadata wil be encrypted with the shared keys. It is not possible to use personal keys to encrypt metadata."),react.createElement("br",null))))),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Zero knowledge (Coming soon)")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"This section defines how the shared metadata key is shared with users.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+(!1===this.state.settings.zero_knowledge_key_share?"checked":"")},react.createElement("input",{type:"radio",value:"true",name:"zero_knowledge_key_share",checked:!1===this.state.settings.zero_knowledge_key_share,id:"disableZeroKnowledgeKeyShareInput",disabled:!0}),react.createElement("label",{htmlFor:"disableZeroKnowledgeKeyShareInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"User-friendly mode (Better on-boarding)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"The shared metadata key is accessible to the server and can be shared by the server when a user completes the setup. In practice, an attacker with full server access can see the shared metadata."),react.createElement("br",null))))),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+(!0===this.state.settings.zero_knowledge_key_share?"checked":"")},react.createElement("input",{type:"radio",value:"true",name:"zero_knowledge_key_share",checked:!0===this.state.settings.zero_knowledge_key_share,id:"enableZeroKnowledgeKeyShareInput",disabled:!0}),react.createElement("label",{htmlFor:"enableZeroKnowledgeKeyShareInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Zero-knowledge mode (More secure)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"The shared metadata key is not available to the server and must be shared with users by the admins. New users are not allowed to create or access shared content until they are provided the metadata key. It is recommended to rotate the key if you switch to that mode."),react.createElement("br",null))))),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Shared metadata keys")),react.createElement("div",{className:`metadata-key-info ${errors?.hasError("generated_metadata_key","required")&&"error"}`},this.state.activeMetadataKeys?.length>0&&react.createElement("div",{id:"metadata-active-keys"},this.state.activeMetadataKeys?.items.map((metadataKey=>{const metadataKeyInfo=this.state.metadataKeysInfo?.getFirst("fingerprint",metadataKey.fingerprint);return react.createElement("table",{key:metadataKey.fingerprint,className:"table-info"},react.createElement("tbody",null,react.createElement("tr",{className:"fingerprint"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Fingerprint")),react.createElement("td",{className:"value"},react.createElement(Fingerprint.A,{fingerprint:metadataKey.fingerprint}))),react.createElement("tr",{className:"algorithm"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Algorithm")),react.createElement("td",{className:"value"},metadataKeyInfo?.algorithm," ",metadataKeyInfo?.curve)),react.createElement("tr",{className:"key-length"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Key length")),react.createElement("td",{className:"value"},metadataKeyInfo?.length)),react.createElement("tr",{className:"created"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Created")),metadataKey.created&&react.createElement("td",{className:"value"},react.createElement("span",{title:metadataKey.created},(0,dateUtils.kD)(metadataKey.created,this.props.t,this.props.context.locale))),!metadataKey.created&&react.createElement("td",{className:"empty-value"},react.createElement(es.x6,null,"Pending")))))}))),!this.state.activeMetadataKeys?.length&&react.createElement("div",{id:"no-metadata-active-keys"},react.createElement("table",{className:"table-info"},react.createElement("tbody",null,react.createElement("tr",null,react.createElement("td",{className:"empty-value"},react.createElement(es.x6,null,"You need to generate a new shared key to enable encrypted metadata.")),react.createElement("td",{className:"table-button"},react.createElement("button",{className:"button primary medium",type:"button",disabled:this.hasAllInputDisabled(),onClick:this.generateMetadataKey,"data-testid":"generate-key-buton"},react.createElement(es.x6,null,"Generate key")))),errors?.hasError("generated_metadata_key","required")&&react.createElement("tr",{className:"error-message"},react.createElement(es.x6,null,"A shared metadata key is required."))))),this.state.expiredMetadataKeys?.length>0&&react.createElement(react.Fragment,null,react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Previous keys")),react.createElement("div",{id:"metadata-expired-keys"},this.state.expiredMetadataKeys?.items.map((metadataKey=>{const metadataKeyInfo=this.state.metadataKeysInfo.getFirst("fingerprint",metadataKey.fingerprint);return react.createElement("table",{key:metadataKey.fingerprint,className:"table-info"},react.createElement("tbody",null,react.createElement("tr",{className:"fingerprint"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Fingerprint")),react.createElement("td",{className:"value"},react.createElement(Fingerprint.A,{fingerprint:metadataKey.fingerprint}))),react.createElement("tr",{className:"algorithm"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Algorithm")),react.createElement("td",{className:"value"},metadataKeyInfo?.algorithm," ",metadataKeyInfo?.curve)),react.createElement("tr",{className:"key-length"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Key length")),react.createElement("td",{className:"value"},metadataKeyInfo?.length)),react.createElement("tr",{className:"created"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Created")),react.createElement("td",{className:"value"},react.createElement("span",{title:metadataKey.created},(0,dateUtils.kD)(metadataKey.created,this.props.t,this.props.context.locale)))),react.createElement("tr",{className:"expired"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Expired")),react.createElement("td",{className:"value"},react.createElement("span",{title:metadataKey.expired},(0,dateUtils.kD)(metadataKey.expired,this.props.t,this.props.context.locale))))))}))))))))}}DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration.propTypes={context:prop_types_default().object,actionFeedbackContext:prop_types_default().object,dialogContext:prop_types_default().object,createPortal:prop_types_default().func,metadataSettingsServiceWorkerService:prop_types_default().object,metadataKeysServiceWorkerService:prop_types_default().object,gpgServiceWorkerService:prop_types_default().object,t:prop_types_default().func};const Administration_DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration=(0,AppContext.L)((0,DialogContext.z9)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration))));DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"loadKeysSettings",docblock:"Load the metadata key settings.\nIf the settings cannot be loaded, display the error dialog.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Load the metadata key settings.\nIf the settings cannot be loaded, display the error dialog."},{name:"handleUnexpectedError",docblock:"Handle unexpected error\n@param {Error} error The error\n@returns {Promise<string>} Return the dialog key identifier.",modifiers:[],params:[{name:"error",description:"The error",type:{name:"Error"},optional:!1}],returns:{description:"Return the dialog key identifier.",type:{name:"Promise",elements:[{name:"string"}]}},description:"Handle unexpected error"},{name:"loadKeys",docblock:"Load the metadata keys.\nIf the metadata keys cannot be loaded, display the error dialog.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Load the metadata keys.\nIf the metadata keys cannot be loaded, display the error dialog."},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"setFormPropertyValue",docblock:"Set a form property value. Trigger the validation if the form has already been submitted once.\n@param name\n@param parsedValue",modifiers:[],params:[{name:"name",optional:!1},{name:"parsedValue",optional:!1}],returns:null,description:"Set a form property value. Trigger the validation if the form has already been submitted once."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"generateMetadataKey",docblock:"Generate a new metadata key\n@return {Promise}",modifiers:["async"],params:[],returns:{type:{name:"Promise"}},description:"Generate a new metadata key"},{name:"handleFormSubmit",docblock:"Handle form submission that can be trigger when hitting `enter`\n@param {Event} event The html event triggering the form submit.",modifiers:[],params:[{name:"event",description:"The html event triggering the form submit.",type:{name:"Event"},optional:!1}],returns:null,description:"Handle form submission that can be trigger when hitting `enter`"},{name:"save",docblock:"Save the settings.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the settings."},{name:"saveMetadataKeysSettings",docblock:"Save the metadata keys settings.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the metadata keys settings."},{name:"createMetadataKey",docblock:"Create the metadata key.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Create the metadata key."}],displayName:"DisplayContentTypesMetadataKeyAdministration",props:{context:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},createPortal:{description:"",type:{name:"func"},required:!1},metadataSettingsServiceWorkerService:{description:"",type:{name:"object"},required:!1},metadataKeysServiceWorkerService:{description:"",type:{name:"object"},required:!1},gpgServiceWorkerService:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Fingerprint/Fingerprint.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class Fingerprint extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fingerprint"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fingerprint-line"},this.props.fingerprint?.substring(0,20)?.replace(/.{4}/g,"$& ")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fingerprint-line"},this.props.fingerprint?.substring(20)?.replace(/.{4}/g,"$& ")))}}Fingerprint.propTypes={fingerprint:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired};const __WEBPACK_DEFAULT_EXPORT__=Fingerprint;Fingerprint.__docgenInfo={description:"",methods:[],displayName:"Fingerprint",props:{fingerprint:{description:"",type:{name:"string"},required:!0}}}},"./src/shared/models/entity/abstract/entityCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js"),_entityValidationError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js");class EntityCollection{constructor(dtos=[],options={}){const clone=options?.clone??!0;this._items=[],clone&&(dtos=JSON.parse(JSON.stringify(dtos))),this._props=dtos}toDto(){return JSON.parse(JSON.stringify(this._items))}toJSON(){return this.toDto()}get items(){return this._items}get length(){return this._items.length}[Symbol.iterator](){let i=0;return{next:()=>i<this._items.length?{value:this._items[i++],done:!1}:{done:!0}}}getAll(propName,search){if("string"!=typeof propName)throw new TypeError("EntityCollection excludeAll expects propName to be string.");if("string"!=typeof search)throw new TypeError("EntityCollection excludeAll expects search to be string.");return this._items.filter((item=>Object.prototype.hasOwnProperty.call(item._props,propName)&&item._props[propName]===search))}getFirst(propName,search){if("string"!=typeof propName||"string"!=typeof search)throw new TypeError("EntityCollection getFirst by expect propName and search to be strings");const found=this.getAll(propName,search);if(found&&found.length)return found[0]}extract(propName){if("string"!=typeof propName)throw new TypeError("EntityCollection extract expects propName to be a string.");return this._items.reduce(((accumulator,item)=>(void 0!==item._props[propName]&&accumulator.push(item._props[propName]),accumulator)),[])}push(item){return this._items.push(item),this._items.length}unshift(item){return this._items.unshift(item),this._items.length}filterByPropertyValueIn(propName,needles,excludeUndefined=!0){if("string"!=typeof propName)throw new TypeError("EntityCollection filterByPropertyValueIn expects propName to be a string.");if(!Array.isArray(needles))throw new TypeError("EntityCollection filterByPropertyValueIn expects needles to be an array.");this.filterByCallback((item=>{const isPropertyDefined=Object.prototype.hasOwnProperty.call(item._props,propName);return!(excludeUndefined&&!isPropertyDefined||isPropertyDefined&&!needles.includes(item._props[propName]))}))}filterByCallback(callback){if("function"!=typeof callback)throw new TypeError("EntityCollection filterByCallback expects callback to be a function.");for(let currentIndex=this._items.length-1;currentIndex>=0;currentIndex--)callback(this._items[currentIndex])||this._items.splice(currentIndex,1)}assertUniqueByProperty(propName,message){const ruleId=`unique_${propName}`,propValues=this.extract(propName),uniqueElements=new Set;message=message||`The collection should only contain items with unique values for the property: ${propName}.`,propValues.forEach(((propValue,index)=>{if(uniqueElements.add(propValue),index!==uniqueElements.size-1)throw new _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__.A(index,ruleId,message)}))}assertNotExist(propName,propValue,options={}){if(void 0===propValue)return;let haystackSet=options?.haystackSet;if(!haystackSet){const propValues=this.extract(propName);haystackSet=new Set(propValues)}if(haystackSet.has(propValue)){const error=new _entityValidationError__WEBPACK_IMPORTED_MODULE_1__.A,message=options?.message||`The collection already includes an element that has a property (${propName}) with an identical value.`;throw error.addError(propName,"unique",message),error}}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollection},"./src/shared/models/entity/abstract/entityCollectionError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class EntityCollectionError extends Error{constructor(position,rule,message){if(super(message=message||"Entity collection error."),"number"!=typeof position)throw new TypeError("EntityCollectionError requires a valid position");if(!rule||"string"!=typeof rule)throw new TypeError("EntityCollectionError requires a valid rule");if(!message||"string"!=typeof message)throw new TypeError("EntityCollectionError requires a valid message");this.position=position,this.rule=rule}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollectionError},"./src/shared/models/entity/gpgkey/external/externalGpgKeyPairEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_entity__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/entity.js"),_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class ExternalGpgKeyPairEntity extends _abstract_entity__WEBPACK_IMPORTED_MODULE_2__.A{constructor(externalGpgKeyPeyPairDto,options={}){super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_1__.A.validate(ExternalGpgKeyPairEntity.ENTITY_NAME,externalGpgKeyPeyPairDto,ExternalGpgKeyPairEntity.getSchema()),options),this._props.private_key&&(this._private_key=new _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A(this._props.private_key,{clone:!1}),delete this._props.private_key),this._props.public_key&&(this._public_key=new _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A(this._props.public_key,{clone:!1}),delete this._props.public_key)}static getSchema(){return{type:"object",required:["public_key","private_key"],properties:{public_key:_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema(),private_key:_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return contain?(contain.public_key&&this._public_key&&(result.public_key=this.publicKey.toDto()),contain.private_key&&this._private_key&&(result.private_key=this.privateKey.toDto()),result):result}toJSON(){return this.toDto(ExternalGpgKeyPairEntity.ALL_CONTAIN_OPTIONS)}get publicKey(){return this._public_key}get privateKey(){return this._private_key}static get ENTITY_NAME(){return"externalGpgKeyPairEntity"}static get ALL_CONTAIN_OPTIONS(){return{public_key:!0,private_key:!0}}}const __WEBPACK_DEFAULT_EXPORT__=ExternalGpgKeyPairEntity},"./src/shared/models/entity/gpgkey/externalGpgKeyCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js"),_abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityCollection.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),_abstract_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js");class ExternalGpgKeyCollection extends _abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__.A{constructor(externalGpgKeyCollectionDto,options={}){super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__.A.validate(ExternalGpgKeyCollection.ENTITY_NAME,externalGpgKeyCollectionDto,ExternalGpgKeyCollection.getSchema()),options);this._props.map((resource=>resource.id)).sort().sort(((a,b)=>{if(a===b)throw new _abstract_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__.A(0,ExternalGpgKeyCollection.RULE_UNIQUE_ID,`Gpgkey fingerprint ${a} already exists.`)})),this._props.forEach((resource=>{this._items.push(new _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A(resource,{clone:!1}))})),this._props=null}static getSchema(){return{type:"array",items:_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema()}}static get ENTITY_NAME(){return"externalGpgKey"}static get RULE_UNIQUE_ID(){return"fingerprint"}}const __WEBPACK_DEFAULT_EXPORT__=ExternalGpgKeyCollection},"./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_entity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entity.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class ExternalGpgKeyEntity extends _abstract_entity__WEBPACK_IMPORTED_MODULE_1__.A{constructor(gpgkeyDto,options={}){const sanitizedGpgkeyDto=ExternalGpgKeyEntity.sanitizeDto(gpgkeyDto);super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_0__.A.validate(ExternalGpgKeyEntity.ENTITY_NAME,sanitizedGpgkeyDto,ExternalGpgKeyEntity.getSchema()),options)}static getSchema(){return{type:"object",required:["armored_key"],properties:{armored_key:{type:"string",minLength:1},key_id:{type:"string",minLength:8,maxLength:16},user_ids:{type:"array"},fingerprint:{type:"string",minLength:40,maxLength:40},expires:{anyOf:[{type:"string",format:"date-time"},{type:"string",pattern:"^Infinity$"},{}],nullable:!0},created:{type:"string",format:"date-time"},algorithm:{type:"string"},length:{type:"integer",minimum:1},curve:{type:"string",nullable:!0},private:{type:"boolean"},revoked:{type:"boolean"}}}}static sanitizeDto(dto){const sanitizedDto=JSON.parse(JSON.stringify(dto));if(dto.key&&(sanitizedDto.armored_key=dto.key,delete sanitizedDto.key),dto.keyId&&(sanitizedDto.key_id=dto.keyId,delete sanitizedDto.keyId),dto.userIds&&(sanitizedDto.user_ids=dto.userIds,delete sanitizedDto.userIds),dto.created)try{const date=new Date(sanitizedDto.created);sanitizedDto.created=date.toISOString()}catch(error){delete sanitizedDto.created}if("Never"===dto.expires)sanitizedDto.expires="Infinity";else if(dto.expires&&"Infinity"!==dto.expires)try{const date=new Date(sanitizedDto.expires);sanitizedDto.expires=date.toISOString()}catch(error){delete sanitizedDto.expires,console.error(`ExternalGpgKeyEntity::sanitizeDto Unable to sanitize the key for the user ${dto.user_id}`)}return sanitizedDto}get armoredKey(){return this._props.armored_key}get keyId(){return this._props.key_id}get userIds(){return this._props.user_ids}get fingerprint(){return this._props.fingerprint}get expires(){return this._props.expires}get isValid(){return null!==this.expires}get created(){return this._props.created}get algorithm(){return this._props.algorithm}get length(){return this._props.length}get curve(){return this._props.curve}get revoked(){return this._props.revoked}get private(){return this._props.private}get isExpired(){const expires=this.expires;if(null===expires)return null;if("Infinity"===expires)return!1;const now=Date.now();return new Date(expires)<now}static get ENTITY_NAME(){return"externalGpgKey"}}const __WEBPACK_DEFAULT_EXPORT__=ExternalGpgKeyEntity},"./src/shared/models/entity/metadata/metadataKeyEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>metadataKeyEntity});var entityV2=__webpack_require__("./src/shared/models/entity/abstract/entityV2.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),entityV2Collection=__webpack_require__("./src/shared/models/entity/abstract/entityV2Collection.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class MetadataPrivateKeyDataEntity extends entityV2.A{static getSchema(){return{type:"object",required:["object_type","domain","fingerprint","armored_key","passphrase"],properties:{object_type:{type:"string",enum:["PASSBOLT_METADATA_PRIVATE_KEY"]},domain:{type:"string",maxLength:1024},fingerprint:{type:"string",pattern:/^[a-f0-9]{40}$/im},armored_key:{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP PRIVATE KEY BLOCK-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP PRIVATE KEY BLOCK-----([\r\n]*)$/},passphrase:{type:"string",maxLength:1024}}}}get armoredKey(){return this._props.armored_key}}const metadataPrivateKeyDataEntity=MetadataPrivateKeyDataEntity;class MetadataPrivateKeyEntity extends entityV2.A{constructor(dto,options={}){super(dto),this._props.data&&"string"!=typeof this._props.data&&(this._data=new metadataPrivateKeyDataEntity(this._props.data,{...options,clone:!1}),delete this._props.data)}static getSchema(){return{type:"object",required:["user_id","data"],properties:{id:{type:"string",format:"uuid",nullable:!0},metadata_key_id:{type:"string",format:"uuid",nullable:!0},user_id:{type:"string",format:"uuid",nullable:!0},data:{anyOf:[{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP MESSAGE-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP MESSAGE-----([\r\n]*)$/},{type:"object"}]},created:{type:"string",format:"date-time"},created_by:{type:"string",format:"uuid"},modified:{type:"string",format:"date-time"},modified_by:{type:"string",format:"uuid"}}}}validateBuildRules(){if(Boolean(this._props.data)&&Boolean(this._data)){const error=new entityValidationError.A,message="The property data and _data cannot be set at the same time";throw error.addError("data","only-one-defined",message),error}}toDto(){const result=Object.assign({},this._props),data=this.data;return result.data=data instanceof metadataPrivateKeyDataEntity?data.toDto():data,result}toJSON(){return this.toDto()}get data(){return this.isDecrypted?this._data:this._props.data}get metadataKeyId(){return this._props.metadata_key_id||null}set data(data){entitySchema.A.validateProp("data",data,this.cachedSchema.properties.data),"string"==typeof data?(this._props.data=data,delete this._data):(this._data=new metadataPrivateKeyDataEntity(data.toDto(),{clone:!0,validate:!1}),delete this._props.data)}get isDecrypted(){return Boolean(this._data)}get userId(){return this._props.user_id}}const metadataPrivateKeyEntity=MetadataPrivateKeyEntity;class MetadataPrivateKeysCollection extends entityV2Collection.A{get entityClass(){return metadataPrivateKeyEntity}constructor(dtos=[],options={}){super(dtos,options)}static getSchema(){return{type:"array",items:metadataPrivateKeyEntity.getSchema()}}validateBuildRules(item,options={}){this.assertNotExist("id",item._props.id,{haystackSet:options?.uniqueIdsSetCache}),this.assertNotExist("user_id",item._props.user_id,{haystackSet:options?.uniqueUserIdsSetCache}),this.assertSameMetadataKeyId(item)}assertSameMetadataKeyId(item){if(!item.metadataKeyId)return;const collectionMetadataKeyId=this._items.find((item=>Boolean(item.metadataKeyId)))?.metadataKeyId;if(!collectionMetadataKeyId)return;if(item.metadataKeyId===collectionMetadataKeyId)return;const error=new entityValidationError.A;throw error.addError("metadata_key_id","same_metadata_key","The collection should not contain different metadata key ID."),error}hasDecryptedPrivateKeys(){return this._items.some((item=>item.isDecrypted))}hasEncryptedPrivateKeys(){return this._items.some((item=>!item.isDecrypted))}pushMany(data,entityOptions={},options={}){const uniqueIdsSetCache=new Set(this.extract("id")),uniqueUserIdsSetCache=new Set(this.extract("user_id"));options={onItemPushed:item=>{uniqueIdsSetCache.add(item._props.id),uniqueUserIdsSetCache.add(item._props.user_id)},validateBuildRules:{...options?.validateBuildRules,uniqueIdsSetCache,uniqueUserIdsSetCache},...options},super.pushMany(data,entityOptions,options)}}const metadataPrivateKeysCollection=MetadataPrivateKeysCollection;class MetadataKeyEntity extends entityV2.A{constructor(dto,options={}){super(dto,options),this._props.metadata_private_keys&&(this._metadata_private_keys=new metadataPrivateKeysCollection(this._props.metadata_private_keys,{...options,clone:!1}),delete this._props.metadata_private_keys,this.assertSameMetadataKeyId())}static getSchema(){return{type:"object",required:["fingerprint","armored_key"],properties:{id:{type:"string",format:"uuid",nullable:!0},fingerprint:{type:"string",pattern:/^[a-f0-9]{40}$/im},armored_key:{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP PUBLIC KEY BLOCK-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP PUBLIC KEY BLOCK-----([\r\n]*)$/},created:{type:"string",format:"date-time",nullable:!0},created_by:{type:"string",format:"uuid",nullable:!0},modified:{type:"string",format:"date-time",nullable:!0},modified_by:{type:"string",format:"uuid",nullable:!0},deleted:{type:"string",format:"date-time",nullable:!0},expired:{type:"string",format:"date-time",nullable:!0},metadata_private_keys:metadataPrivateKeysCollection.getSchema()}}}validateBuildRules(){}assertSameMetadataKeyId(){if(0===(this._metadata_private_keys?.length||0))return;if(this.id!==this._metadata_private_keys.items[0].metadataKeyId){const error=new entityValidationError.A;throw error.addError("id:metadata_private_keys","same_id","`id` and the `metadata_private_keys.id` should be the same"),error}}toDto(contain){const result=Object.assign({},this._props);return contain?(this._metadata_private_keys&&contain.metadata_private_keys&&(result.metadata_private_keys=this._metadata_private_keys.toDto()),result):result}get armoredKey(){return this._props.armored_key}get id(){return this._props.id||null}get metadataPrivateKeys(){return this._metadata_private_keys||null}get created(){return this._props.created||null}get fingerprint(){return this._props.fingerprint}get expired(){return this._props.expired||null}static get ALL_CONTAIN_OPTIONS(){return{metadata_private_keys:!0}}}const metadataKeyEntity=MetadataKeyEntity},"./src/shared/models/entity/metadata/metadataKeysCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_entityV2Collection__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityV2Collection.js"),_metadataKeyEntity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/metadata/metadataKeyEntity.js");class MetadataKeysCollection extends _abstract_entityV2Collection__WEBPACK_IMPORTED_MODULE_0__.A{get entityClass(){return _metadataKeyEntity__WEBPACK_IMPORTED_MODULE_1__.A}constructor(dtos=[],options={}){super(dtos,options)}static getSchema(){return{type:"array",items:_metadataKeyEntity__WEBPACK_IMPORTED_MODULE_1__.A.getSchema()}}validateBuildRules(item,options={}){this.assertNotExist("id",item._props.id,{haystackSet:options?.uniqueIdsSetCache}),this.assertNotExist("fingerprint",item._props.fingerprint,{haystackSet:options?.uniqueFingerprintsSetCache})}getFirstByLatestCreated(){return this.length?this._items.reduce(((latestCreatedItem,item)=>latestCreatedItem.created?item.created&&item.created>latestCreatedItem.created?item:latestCreatedItem:item)):null}toDto(contains={}){return this._items.map((entity=>entity.toDto(contains)))}hasDecryptedKeys(){return this._items.some((metadataKey=>metadataKey.metadataPrivateKeys?.hasDecryptedPrivateKeys()))}hasEncryptedKeys(){return this._items.some((metadataKey=>metadataKey.metadataPrivateKeys?.hasEncryptedPrivateKeys()))}pushMany(data,entityOptions={},options={}){const uniqueIdsSetCache=new Set(this.extract("id")),uniqueFingerprintsSetCache=new Set(this.extract("fingerprint"));options={onItemPushed:item=>{uniqueIdsSetCache.add(item._props.id),uniqueFingerprintsSetCache.add(item._props.fingerprint)},validateBuildRules:{...options?.validateBuildRules,uniqueIdsSetCache,uniqueFingerprintsSetCache},...options},super.pushMany(data,entityOptions,options)}}const __WEBPACK_DEFAULT_EXPORT__=MetadataKeysCollection},"./src/shared/models/entity/metadata/metadataKeysSettingsEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_entityV2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityV2.js");class MetadataKeysSettingsEntity extends _abstract_entityV2__WEBPACK_IMPORTED_MODULE_0__.A{static getSchema(){return{type:"object",required:["allow_usage_of_personal_keys","zero_knowledge_key_share"],properties:{allow_usage_of_personal_keys:{type:"boolean"},zero_knowledge_key_share:{type:"boolean"}}}}static createFromDefault(data={}){return new MetadataKeysSettingsEntity({allow_usage_of_personal_keys:!0,zero_knowledge_key_share:!1,...data})}get allowUsageOfPersonalKeys(){return this._props.allow_usage_of_personal_keys}get zeroKnowledgeKeyShare(){return this._props.zero_knowledge_key_share}}const __WEBPACK_DEFAULT_EXPORT__=MetadataKeysSettingsEntity},"./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});var _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/metadata/metadataTypesSettingsEntity.js"),_models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysSettingsEntity.js");const __WEBPACK_DEFAULT_EXPORT__=class MetadataSettingsServiceWorkerService{constructor(port){this.port=port}async findKeysSettings(){const settingsDto=await this.port.request("passbolt.metadata.find-metadata-keys-settings");return new _models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__.A(settingsDto)}async findTypesSettings(){const settingsDto=await this.port.request("passbolt.metadata.find-metadata-types-settings");return new _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__.Ay(settingsDto)}async saveTypesSettings(formSettings){if(!(formSettings instanceof _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__.Ay))throw new TypeError("The 'settings' property should be of type 'MetadataTypesSettingsEntity'.");const savedSettingsDto=await this.port.request("passbolt.metadata.save-metadata-types-settings",formSettings.toDto());return new _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__.Ay(savedSettingsDto)}async saveKeysSettings(settings){if(!(settings instanceof _models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__.A))throw new TypeError("The 'settings' property should be of type 'MetadataKeysSettingsEntity'.");const savedSettingsDto=await this.port.request("passbolt.metadata.save-metadata-keys-settings",settings.toDto());return new _models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__.A(savedSettingsDto)}}}}]);