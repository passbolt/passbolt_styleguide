/*! For license information please see 7085.fdbb220e.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[7085],{"./src/img/svg/favorite.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgFavorite(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"var(--icon-background-color)",stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"m9 1.5 2.318 4.695 5.182.757-3.75 3.653.885 5.16L9 13.328l-4.635 2.437.885-5.16L1.5 6.952l5.183-.757z"})))}},"./src/react-extension/components/Resource/DisplayResourcesList/DisplayResourcesList.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayResourcesList_DisplayResourcesList});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),ResourceWorkspaceContext=__webpack_require__("./src/react-extension/contexts/ResourceWorkspaceContext.js"),dist=__webpack_require__("./node_modules/debounce-promise/dist/index.js"),dist_default=__webpack_require__.n(dist),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),DisplayResourcesListContextualMenu=__webpack_require__("./src/react-extension/components/Resource/DisplayResourcesList/DisplayResourcesListContextualMenu.js"),ContextualMenuContext=__webpack_require__("./src/react-extension/contexts/ContextualMenuContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),DragContext=__webpack_require__("./src/react-extension/contexts/DragContext.js");class DisplayDragResource extends react.Component{get selectedResources(){return this.props.resourceWorkspaceContext.selectedResources}isMultipleSelected(){return this.selectedResources.length>1}hasMoreThanThreeResourcesSelected(){return this.selectedResources.length>3}get numberOfResources(){return this.selectedResources.length>99?"99+":this.props.resourceWorkspaceContext.selectedResources.length}render(){return react.createElement("div",{className:"drag-and-drop "+(this.hasMoreThanThreeResourcesSelected()?"item-n":`item-${this.numberOfResources}`)},react.createElement("span",{className:"message"},this.selectedResources[0]?.metadata.name),this.isMultipleSelected()&&react.createElement("span",{className:"count"},this.numberOfResources))}}DisplayDragResource.contextType=AppContext.A,DisplayDragResource.propTypes={resourceWorkspaceContext:prop_types_default().any};const DisplayResourcesList_DisplayDragResource=(0,ResourceWorkspaceContext.Qw)(DisplayDragResource);DisplayDragResource.__docgenInfo={description:"",methods:[{name:"selectedResources",docblock:"the resource selected\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"the resource selected"},{name:"isMultipleSelected",docblock:"is multiple resources selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"is multiple resources selected"},{name:"hasMoreThanThreeResourcesSelected",docblock:"has more than three resources selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"has more than three resources selected"},{name:"numberOfResources",docblock:"Get the number of resources\n@returns {string|*}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"string"},{name:"mixed"}]}},description:"Get the number of resources"}],displayName:"DisplayDragResource",props:{resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1}}};var clipBoard=__webpack_require__("./src/shared/lib/Browser/clipBoard.js"),RbacContext=__webpack_require__("./src/shared/context/Rbac/RbacContext.js"),uiActionEnumeration=__webpack_require__("./src/shared/services/rbacs/uiActionEnumeration.js"),GridTable=__webpack_require__("./src/shared/components/Table/GridTable.js"),favorite=__webpack_require__("./src/img/svg/favorite.svg");class CellFavorite extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(this.value)}get value(){return this.props.value}render(){const isFavorite=null!==this.value.favorite&&void 0!==this.value.favorite;return react.createElement("button",{type:"button",className:"no-border no-text "+(isFavorite?"fav":"unfav"),onClick:this.handleClick},react.createElement(favorite.A,null))}}CellFavorite.propTypes={value:prop_types_default().object.isRequired,onClick:prop_types_default().func};const Table_CellFavorite=(0,react.memo)(CellFavorite);CellFavorite.__docgenInfo={description:"This component represents a table cell favorite",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"Handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellFavorite",props:{value:{description:"",type:{name:"object"},required:!0},onClick:{description:"",type:{name:"func"},required:!1}}};var sanitizeUrl=__webpack_require__("./src/react-extension/lib/Sanitize/sanitizeUrl.js"),DisplayResourceUrisBadge=__webpack_require__("./src/react-extension/components/Resource/DisplayResourceUrisBadge/DisplayResourceUrisBadge.js");class CellUris extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event,safeLink){event.stopPropagation(),this.props.onClick(safeLink)}safeLink(link){return(0,sanitizeUrl.A)(link,{whiteListedProtocols:linkAuthorizedProtocols,defaultProtocol:sanitizeUrl.P.HTTPS})||""}get mainUri(){return this.props.value?.[0]}get additionalUris(){return this.props.value?.slice(1)}render(){const safeLink=this.safeLink(this.mainUri);return react.createElement("div",null,safeLink&&react.createElement("button",{title:this.mainUri,className:"no-border ellipsis",type:"button",onClick:event=>this.handleClick(event,safeLink)},react.createElement("span",null,this.mainUri)),!safeLink&&react.createElement("span",{title:this.mainUri},this.mainUri),this.additionalUris?.length>0&&react.createElement(DisplayResourceUrisBadge.A,{additionalUris:this.additionalUris}))}}CellUris.propTypes={value:prop_types_default().arrayOf(prop_types_default().string),onClick:prop_types_default().func};const Table_CellUris=(0,react.memo)(CellUris),linkAuthorizedProtocols=[sanitizeUrl.P.FTP,sanitizeUrl.P.FTPS,sanitizeUrl.P.HTTPS,sanitizeUrl.P.HTTP,sanitizeUrl.P.SSH];CellUris.__docgenInfo={description:"This component represents a table cell link",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"Handle click\n@param {Event} event\n@param {string} safeLink",modifiers:[],params:[{name:"event",type:{name:"Event"},optional:!1},{name:"safeLink",type:{name:"string"},optional:!1}],returns:null,description:"Handle click"},{name:"safeLink",docblock:"Get safe uri of a resource\n@param {string} link The resource to get the safe uri for\n@return {string}",modifiers:[],params:[{name:"link",description:"The resource to get the safe uri for",type:{name:"string"},optional:!1}],returns:{type:{name:"string"}},description:"Get safe uri of a resource"},{name:"mainUri",docblock:"Get the main uri\n@return {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the main uri"},{name:"additionalUris",docblock:"Get the additional uris\n@return {Array<string>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"string"}]}},description:"Get the additional uris"}],displayName:"CellUris",props:{value:{description:"",type:{name:"arrayOf",value:{name:"string"}},required:!1},onClick:{description:"",type:{name:"func"},required:!1}}};var HiddenPassword=__webpack_require__("./src/shared/components/Password/HiddenPassword.js"),eye_open=__webpack_require__("./src/img/svg/eye_open.svg"),eye_close=__webpack_require__("./src/img/svg/eye_close.svg");class CellPassword extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handlePasswordClick=this.handlePasswordClick.bind(this),this.handlePreviewPasswordButtonClick=this.handlePreviewPasswordButtonClick.bind(this)}handlePreviewPasswordButtonClick(event){event.stopPropagation(),this.props.onPreviewPasswordClick(this.value)}async handlePasswordClick(){this.props.onPasswordClick(this.value)}get value(){return this.props.value}render(){const previewedPassword=this.props.getPreviewPassword(this.value),showPassword="string"==typeof previewedPassword,hasPassword=this.props.hasPassword(this.value);return react.createElement(react.Fragment,null,hasPassword&&react.createElement(react.Fragment,null,react.createElement("div",{className:"secret secret-password "+(showPassword?"":"secret-copy"),title:previewedPassword||this.props.title},react.createElement(HiddenPassword.A,{canClick:this.props.canCopy,preview:previewedPassword,onClick:this.handlePasswordClick})),this.props.canPreview&&react.createElement("button",{type:"button",onClick:this.handlePreviewPasswordButtonClick,className:"password-view inline button-transparent"},previewedPassword?react.createElement(eye_close.A,null):react.createElement(eye_open.A,null))))}}CellPassword.defaultProps={canPreviewSecret:!1,canCopySecret:!1},CellPassword.propTypes={value:prop_types_default().object.isRequired,title:prop_types_default().string,canPreview:prop_types_default().bool,canCopy:prop_types_default().bool,getPreviewPassword:prop_types_default().func.isRequired,onPasswordClick:prop_types_default().func,onPreviewPasswordClick:prop_types_default().func,hasPassword:prop_types_default().func};const Table_CellPassword=CellPassword;CellPassword.__docgenInfo={description:"This component represents a table cell password",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handlePreviewPasswordButtonClick",docblock:"Handle preview password button click.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle preview password button click."},{name:"handlePasswordClick",docblock:"Handle password button click.",modifiers:["async"],params:[],returns:null,description:"Handle password button click."},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellPassword",props:{canPreviewSecret:{defaultValue:{value:"false",computed:!1},required:!1},canCopySecret:{defaultValue:{value:"false",computed:!1},required:!1},value:{description:"",type:{name:"object"},required:!0},title:{description:"",type:{name:"string"},required:!1},canPreview:{description:"",type:{name:"bool"},required:!1},canCopy:{description:"",type:{name:"bool"},required:!1},getPreviewPassword:{description:"",type:{name:"func"},required:!0},onPasswordClick:{description:"",type:{name:"func"},required:!1},onPreviewPasswordClick:{description:"",type:{name:"func"},required:!1},hasPassword:{description:"",type:{name:"func"},required:!1}}};class CellButton extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(this.value)}get value(){return this.props.value}hasValue(){return Boolean(this.value)}render(){return react.createElement("div",{title:this.value},this.hasValue()&&react.createElement("button",{className:"no-border",type:"button",onClick:this.handleClick},react.createElement("span",null,this.value)))}}CellButton.propTypes={value:prop_types_default().string,onClick:prop_types_default().func};const Table_CellButton=(0,react.memo)(CellButton);CellButton.__docgenInfo={description:"This component represents a table cell button",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"},{name:"hasValue",docblock:"Has value\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has value"}],displayName:"CellButton",props:{value:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1}}};var CellHeaderCheckbox=__webpack_require__("./src/shared/components/Table/CellHeaderCheckbox.js"),CellChecbox=__webpack_require__("./src/shared/components/Table/CellChecbox.js"),ColumnCheckboxModel=__webpack_require__("./src/shared/models/column/ColumnCheckboxModel.js"),ColumnModel=__webpack_require__("./src/shared/models/column/ColumnModel.js");class ColumnFavoriteModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.FAVORITE,columnDto.field=ColumnModel.uH.FAVORITE,columnDto.width=columnDto.width||20,columnDto.defaultWidth=20,columnDto.resizable=!1,columnDto.draggable=!1,columnDto.sortable=!0,columnDto.getValue=value=>({id:value.id,favorite:value.favorite}),super(columnDto)}}const column_ColumnFavoriteModel=ColumnFavoriteModel;class ColumnNameModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.NAME,columnDto.field=ColumnModel.uH.METADATA_NAME,columnDto.width=columnDto.width||210,columnDto.defaultWidth=210,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,columnDto.getValue=value=>value,super(columnDto)}}const column_ColumnNameModel=ColumnNameModel;class ColumnUsernameModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.USERNAME,columnDto.field=ColumnModel.uH.METADATA_USERNAME,columnDto.width=columnDto.width||210,columnDto.defaultWidth=210,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnUsernameModel=ColumnUsernameModel;class ColumnPasswordModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.PASSWORD,columnDto.field=ColumnModel.uH.PASSWORD,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!1,columnDto.getValue=value=>value,super(columnDto)}}const column_ColumnPasswordModel=ColumnPasswordModel;class ColumnUriModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.URI,columnDto.field=ColumnModel.uH.METADATA_URIS,columnDto.width=columnDto.width||210,columnDto.defaultWidth=210,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnUriModel=ColumnUriModel;var ColumnModifiedModel=__webpack_require__("./src/shared/models/column/ColumnModifiedModel.js"),ProgressContext=__webpack_require__("./src/react-extension/contexts/ProgressContext.js"),Totp=__webpack_require__("./src/shared/components/Totp/Totp.js");class CellTotp extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleTotpClick=this.handleTotpClick.bind(this),this.handlePreviewTotpButtonClick=this.handlePreviewTotpButtonClick.bind(this)}handlePreviewTotpButtonClick(event){event.stopPropagation(),this.props.onPreviewTotpClick(this.value)}async handleTotpClick(event){event?.stopPropagation(),this.props.onTotpClick(this.value)}get value(){return this.props.value}get previewedTotp(){return this.props.getPreviewTotp(this.value)}render(){const hasTotp=this.props.hasTotp(this.value);return react.createElement(react.Fragment,null,hasTotp&&react.createElement(react.Fragment,null,react.createElement("div",{className:"secret secret-totp "+(this.previewedTotp?"":"secret-copy")},this.previewedTotp&&react.createElement(Totp.A,{totp:this.previewedTotp,canClick:this.props.canCopy,onClick:this.handleTotpClick}),!this.previewedTotp&&react.createElement("button",{type:"button",className:"no-border",onClick:this.handleTotpClick,disabled:!this.props.canCopy},react.createElement("span",null,"Copy TOTP to clipboard"))),this.props.canPreview&&react.createElement("button",{type:"button",onClick:this.handlePreviewTotpButtonClick,className:"totp-view inline button-transparent"},this.previewedTotp?react.createElement(eye_close.A,null):react.createElement(eye_open.A,null))))}}CellTotp.defaultProps={canPreviewSecret:!1,canCopySecret:!1},CellTotp.propTypes={value:prop_types_default().object.isRequired,title:prop_types_default().string,canPreview:prop_types_default().bool,canCopy:prop_types_default().bool,getPreviewTotp:prop_types_default().func.isRequired,onTotpClick:prop_types_default().func,onPreviewTotpClick:prop_types_default().func,hasTotp:prop_types_default().func};const Table_CellTotp=CellTotp;CellTotp.__docgenInfo={description:"This component represents a table cell totp",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handlePreviewTotpButtonClick",docblock:"Handle preview totp button click.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle preview totp button click."},{name:"handleTotpClick",docblock:"Handle totp button click.",modifiers:["async"],params:[{name:"event",optional:!1}],returns:null,description:"Handle totp button click."},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"},{name:"previewedTotp",docblock:"Get the preview totp\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get the preview totp"}],displayName:"CellTotp",props:{canPreviewSecret:{defaultValue:{value:"false",computed:!1},required:!1},canCopySecret:{defaultValue:{value:"false",computed:!1},required:!1},value:{description:"",type:{name:"object"},required:!0},title:{description:"",type:{name:"string"},required:!1},canPreview:{description:"",type:{name:"bool"},required:!1},canCopy:{description:"",type:{name:"bool"},required:!1},getPreviewTotp:{description:"",type:{name:"func"},required:!0},onTotpClick:{description:"",type:{name:"func"},required:!1},onPreviewTotpClick:{description:"",type:{name:"func"},required:!1},hasTotp:{description:"",type:{name:"func"},required:!1}}};class ColumnTotpModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.TOTP,columnDto.field=ColumnModel.uH.TOTP,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!1,columnDto.getValue=value=>value,super(columnDto)}}const column_ColumnTotpModel=ColumnTotpModel;var TotpCodeGeneratorService=__webpack_require__("./src/shared/services/otp/TotpCodeGeneratorService.js");class ColumnExpiredModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.EXPIRED,columnDto.field=ColumnModel.uH.EXPIRED,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnExpiredModel=ColumnExpiredModel;var PasswordExpirySettingsContext=__webpack_require__("./src/react-extension/contexts/PasswordExpirySettingsContext.js"),CellDate=__webpack_require__("./src/shared/components/Table/CellDate.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js");class CellExpiryDate extends react.Component{render(){if(!this.props.value)return null;const displayedDate=(0,dateUtils.Br)(this.props.value,this.props.t,this.props.locale);return react.createElement("div",{title:this.props.value||displayedDate},react.createElement("span",null,displayedDate))}}CellExpiryDate.propTypes={value:prop_types_default().string,locale:prop_types_default().string,t:prop_types_default().func};const Table_CellExpiryDate=(0,react.memo)(CellExpiryDate);CellExpiryDate.__docgenInfo={description:"This component represents a table date cell",methods:[],displayName:"CellExpiryDate",props:{value:{description:"",type:{name:"string"},required:!1},locale:{description:"",type:{name:"string"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var CellHeaderDefault=__webpack_require__("./src/shared/components/Table/CellHeaderDefault.js");class ColumnLocationModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.LOCATION,columnDto.field=ColumnModel.uH.LOCATION,columnDto.width=columnDto.width||210,columnDto.defaultWidth=210,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!1,super(columnDto)}}const column_ColumnLocationModel=ColumnLocationModel;var folder=__webpack_require__("./src/img/svg/folder.svg"),share_folder=__webpack_require__("./src/img/svg/share_folder.svg"),TooltipPortal=__webpack_require__("./src/react-extension/components/Common/Tooltip/TooltipPortal.js"),cabinet=__webpack_require__("./src/img/svg/cabinet.svg");class CellLocation extends react.Component{handleClick(event,id){event.stopPropagation(),this.props.onClick(id)}get value(){return this.props.value}get lastFolder(){return this.value[this.value.length-1]}get tooltipHierarchyFolder(){return this.value.map(((folder,index)=>react.createElement("div",{key:folder.id,className:"folder-level",style:{marginLeft:5*index+"px"}},null!==folder.folder_parent_id&&react.createElement("span",{className:"caret"},"›"),react.createElement("span",null,folder.name))))}render(){return null===this.value?null:0===this.value.length?react.createElement(TooltipPortal.A,{message:react.createElement("span",null,this.props.t("My workspace")),direction:"auto"},react.createElement("button",{className:"no-border",type:"button",onClick:event=>this.handleClick(event,null)},react.createElement(cabinet.A,null),react.createElement("span",null,this.props.t("My workspace")))):react.createElement(TooltipPortal.A,{message:this.tooltipHierarchyFolder,direction:"auto"},react.createElement("button",{className:"no-border",type:"button",onClick:event=>this.handleClick(event,this.lastFolder.id)},!this.lastFolder.personal&&react.createElement(share_folder.A,null),this.lastFolder.personal&&react.createElement(folder.A,null),this.value.map((folder=>react.createElement(react.Fragment,{key:folder.id},null!==folder.folder_parent_id&&react.createElement("span",{className:"caret"},"›"),react.createElement("span",null,folder.name))))))}}CellLocation.propTypes={value:prop_types_default().array,onClick:prop_types_default().func,t:prop_types_default().func};const Table_CellLocation=CellLocation;CellLocation.__docgenInfo={description:"This component represents a table cell location",methods:[{name:"handleClick",docblock:"Handle click\n@param event\n@param {string | null} id The folder id",modifiers:[],params:[{name:"event",optional:!1},{name:"id",description:"The folder id",type:{name:"union",elements:[{name:"string"}]},optional:!1}],returns:null,description:"Handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"},{name:"lastFolder",docblock:"Get the last folder\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get the last folder"},{name:"tooltipHierarchyFolder",docblock:"Get the tooltip hierarchy folder message",modifiers:["get"],params:[],returns:null,description:"Get the tooltip hierarchy folder message"}],displayName:"CellLocation",props:{value:{description:"",type:{name:"array"},required:!1},onClick:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var resourceTypesCollection=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypesCollection.js"),ResourceTypesLocalStorageContext=__webpack_require__("./src/shared/context/ResourceTypesLocalStorageContext/ResourceTypesLocalStorageContext.js"),attention=__webpack_require__("./src/img/svg/attention.svg"),ResourceIcon=__webpack_require__("./src/shared/components/Icons/ResourceIcon.js");class CellName extends react.Component{get isAttentionRequiredOnExpiryDate(){const expirationDate=this.props.value.expired;if(!expirationDate)return!1;return new Date(expirationDate)<=new Date}get name(){return this.props.value.metadata?.name}render(){const hasAttentionRequired=this.props.hasAttentionRequiredFeature&&this.isAttentionRequiredOnExpiryDate;return react.createElement("div",{title:this.name},this.props.hasIconVisibleCallback()&&react.createElement(ResourceIcon.A,{resource:this.props.value}),react.createElement("span",null,this.name),hasAttentionRequired&&react.createElement(attention.A,{className:"attention-required"}))}}CellName.propTypes={value:prop_types_default().object.isRequired,hasIconVisibleCallback:prop_types_default().func,hasAttentionRequiredFeature:prop_types_default().bool.isRequired};const Table_CellName=CellName;CellName.__docgenInfo={description:"This component represents a table cell name",methods:[{name:"isAttentionRequiredOnExpiryDate",docblock:"Returns true if the given date is under the current date.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the given date is under the current date."},{name:"name",docblock:"Get the name\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the name"}],displayName:"CellName",props:{value:{description:"",type:{name:"object"},required:!0},hasIconVisibleCallback:{description:"",type:{name:"func"},required:!1},hasAttentionRequiredFeature:{description:"",type:{name:"bool"},required:!0}}};var circle_off=__webpack_require__("./src/img/svg/circle_off.svg"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js");class DisplayResourcesList extends react.Component{defaultColumns=[];constructor(props){super(props),this.state=this.getDefaultState(),this.initEventHandlers(),this.handleFavoriteClickDebounced=dist_default()(this.handleFavoriteUpdate,200),this.createRefs()}getDefaultState(){return{columns:[],previewedCellule:{columnId:null,resourceId:null},plaintextSecretDto:null}}initEventHandlers(){this.handleSelectAllChange=this.handleSelectAllChange.bind(this),this.handleResourceSelected=this.handleResourceSelected.bind(this),this.handleResourceRightClick=this.handleResourceRightClick.bind(this),this.handleResourceDragStartEvent=this.handleResourceDragStartEvent.bind(this),this.handleDragEndEvent=this.handleDragEndEvent.bind(this),this.handleCheckboxWrapperClick=this.handleCheckboxWrapperClick.bind(this),this.handleCopyPasswordClick=this.handleCopyPasswordClick.bind(this),this.handleCopyUsernameClick=this.handleCopyUsernameClick.bind(this),this.hasIconVisible=this.hasIconVisible.bind(this),this.handleFavoriteClick=this.handleFavoriteClick.bind(this),this.handleSortByColumnClick=this.handleSortByColumnClick.bind(this),this.handleChangeColumnsSettings=this.handleChangeColumnsSettings.bind(this),this.handleGoToResourceUriClick=this.handleGoToResourceUriClick.bind(this),this.handlePreviewPasswordButtonClick=this.handlePreviewPasswordButtonClick.bind(this),this.handleCopyTotpClick=this.handleCopyTotpClick.bind(this),this.handlePreviewTotpButtonClick=this.handlePreviewTotpButtonClick.bind(this),this.getPreviewPassword=this.getPreviewPassword.bind(this),this.getPreviewTotp=this.getPreviewTotp.bind(this),this.isPasswordResources=this.isPasswordResources.bind(this),this.isTotpResources=this.isTotpResources.bind(this),this.handleLocationClick=this.handleLocationClick.bind(this)}initColumns(){this.defaultColumns.push(new ColumnCheckboxModel.A({cellRenderer:{component:CellChecbox.A,props:{onClick:this.handleCheckboxWrapperClick}},headerCellRenderer:{component:CellHeaderCheckbox.A,props:{onChange:this.handleSelectAllChange}}})),this.defaultColumns.push(new column_ColumnFavoriteModel({cellRenderer:{component:Table_CellFavorite,props:{onClick:this.handleFavoriteClick}},headerCellRenderer:{component:favorite.A}})),this.defaultColumns.push(new column_ColumnNameModel({cellRenderer:{component:Table_CellName,props:{hasAttentionRequiredFeature:this.hasAttentionRequiredFeature,hasIconVisibleCallback:this.hasIconVisible}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("Name")}}})),this.props.passwordExpiryContext.isFeatureEnabled()&&this.defaultColumns.push(new column_ColumnExpiredModel({cellRenderer:{component:Table_CellExpiryDate,props:{locale:this.props.context.locale,t:this.props.t}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("Expiry")}}})),this.defaultColumns.push(new column_ColumnUsernameModel({cellRenderer:{component:Table_CellButton,props:{onClick:this.handleCopyUsernameClick}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("Username")}}})),this.defaultColumns.push(new column_ColumnPasswordModel({cellRenderer:{component:Table_CellPassword,props:{title:this.translate("secret"),getPreviewPassword:this.getPreviewPassword,canCopy:this.canCopySecret,canPreview:this.canPreviewSecret,onPasswordClick:this.handleCopyPasswordClick,onPreviewPasswordClick:this.handlePreviewPasswordButtonClick,hasPassword:this.isPasswordResources}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("Password")}}})),this.props.context.siteSettings.canIUse("totpResourceTypes")&&this.defaultColumns.push(new column_ColumnTotpModel({cellRenderer:{component:Table_CellTotp,props:{title:this.translate("secret"),getPreviewTotp:this.getPreviewTotp,canCopy:this.canCopySecret,canPreview:this.canPreviewSecret,onTotpClick:this.handleCopyTotpClick,onPreviewTotpClick:this.handlePreviewTotpButtonClick,hasTotp:this.isTotpResources}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("TOTP")}}})),this.defaultColumns.push(new column_ColumnUriModel({cellRenderer:{component:Table_CellUris,props:{onClick:this.handleGoToResourceUriClick}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("URI")}}})),this.defaultColumns.push(new ColumnModifiedModel.A({cellRenderer:{component:CellDate.A,props:{locale:this.props.context.locale,t:this.props.t}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("Modified")}}})),this.canUseFolders&&this.defaultColumns.push(new column_ColumnLocationModel({getValue:resource=>this.props.context.getHierarchyFolderCache(resource.folder_parent_id),cellRenderer:{component:Table_CellLocation,props:{onClick:this.handleLocationClick,t:this.props.t}},headerCellRenderer:{component:CellHeaderDefault.A,props:{label:this.translate("Location")}}}))}async componentDidMount(){await this.props.passwordExpiryContext.findSettings(),this.initColumns(),null!==this.columnsResourceSetting&&this.mergeAndSortColumns()}mergeAndSortColumns(){const columnsResourceSetting=this.columnsResourceSetting.toHashTable(),columns=this.defaultColumns.map((column=>Object.assign(new ColumnModel.Ay(column),columnsResourceSetting[column.id])));columns.sort(((columnA,columnB)=>(columnA.position||0)<(columnB.position||0)?-1:1)),this.setState({columns})}hasIconVisible(){return this.memoizedHasIconVisible(this.columnsResourceSetting)}memoizedHasIconVisible=(0,memoize_one_esm.A)((columns=>columns.getFirst("id",ColumnModel.nN.ICON).show));componentDidUpdate(prevProps){this.handleResourceScroll();const hasColumnsResourceViewChange=this.columnsResourceSetting?.hasDifferentShowValue(prevProps.resourceWorkspaceContext.columnsResourceSetting);(prevProps.resourceWorkspaceContext.columnsResourceSetting!==this.props.resourceWorkspaceContext.columnsResourceSetting||hasColumnsResourceViewChange)&&this.mergeAndSortColumns()}shouldComponentUpdate(nextProps,nextState){const{filteredResources,selectedResources,sorter,scrollTo,columnsResourceSetting}=nextProps.resourceWorkspaceContext,hasFilteredResourcesChanged=this.props.resourceWorkspaceContext.filteredResources!==filteredResources,hasSingleSelectedResourceChanged=1===selectedResources.length&&1===this.props.resourceWorkspaceContext.selectedResources.length&&selectedResources[0].id!==this.props.resourceWorkspaceContext.selectedResources[0].id,hasSelectedResourcesLengthChanged=this.props.resourceWorkspaceContext.selectedResources.length!==selectedResources.length,hasSorterChanged=sorter!==this.props.resourceWorkspaceContext.sorter,hasResourceToScrollChange=Boolean(scrollTo.resource&&scrollTo.resource.id),hasResourcePreviewSecretChange=nextState.previewedCellule!==this.state.previewedCellule,hasResourceColumnsChange=nextState.columns!==this.state.columns,hasColumnOrderChanged=nextProps.resourceWorkspaceContext.columnsResourceSetting!==this.props.resourceWorkspaceContext.columnsResourceSetting,hasColumnsResourceViewChange=columnsResourceSetting?.hasDifferentShowValue(this.props.resourceWorkspaceContext.columnsResourceSetting),hasRowsSettingChanged=nextProps.resourceWorkspaceContext.rowsSetting?.height!==this.props.resourceWorkspaceContext.rowsSetting?.height;return(hasFilteredResourcesChanged||hasSingleSelectedResourceChanged||hasSelectedResourcesLengthChanged||hasSorterChanged)&&this.hidePreviewedCellule(),hasFilteredResourcesChanged||hasSelectedResourcesLengthChanged||hasSingleSelectedResourceChanged||hasSorterChanged||hasResourceToScrollChange||hasResourceColumnsChange||hasColumnsResourceViewChange||hasResourcePreviewSecretChange||hasColumnOrderChanged||hasRowsSettingChanged}createRefs(){this.tableviewRef=react.createRef(),this.listRef=react.createRef()}get canUseFolders(){return this.props.context.siteSettings.canIUse("folders")&&this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.FOLDERS_USE)}handleSelectAllChange(event){const operationName=event.target.checked?"all":"none";this.props.resourceWorkspaceContext.onResourceSelected[operationName]()}async handleResourceSelected(event,resource){await this.selectResource(resource,event)}handleSelectResources(resources){const selectedResources=resources;this.setState({selectedFolders:[],selectedResources},(()=>{1===resources.length&&this.props.history.push(`/app/passwords/view/${resources[0].id}`)}))}handleResourceRightClick(event,resource){this.handleSelectResources([resource]);const contextualMenuProps={left:event.pageX,top:event.pageY,resource};this.props.contextualMenuContext.show(DisplayResourcesListContextualMenu.A,contextualMenuProps)}async handleCheckboxWrapperClick(event,resource){event&&event.shiftKey?await this.props.resourceWorkspaceContext.onResourceSelected.range(resource):await this.props.resourceWorkspaceContext.onResourceSelected.multiple(resource)}handleResourceScroll(){const resourceToScroll=this.props.resourceWorkspaceContext.scrollTo.resource,hasNotEmptyRange=this.listRef.current?.getVisibleRange().some((value=>value));resourceToScroll&&hasNotEmptyRange&&(this.scrollTo(resourceToScroll.id),this.props.resourceWorkspaceContext.onResourceScrolled())}get resources(){return this.props.resourceWorkspaceContext.filteredResources}get selectedResources(){return this.props.resourceWorkspaceContext.selectedResources}get selectedResourcesIds(){return this.selectedResources.map((resource=>resource.id))}get columnsResourceSetting(){return this.props.resourceWorkspaceContext.columnsResourceSetting}get columnsFiltered(){return this.state.columns.filter((column=>"checkbox"===column.id||column.show))}getPreviewPassword(resource){return this.isCellulePreviewed("password",resource.id)?this.state.plaintextSecretDto?.password:void 0}getPreviewTotp(resource){return this.isCellulePreviewed("totp",resource.id)?this.state.plaintextSecretDto?.totp:void 0}async handleCopyUsernameClick(username){await clipBoard.A.copy(username,this.props.context.port),this.props.actionFeedbackContext.displaySuccess(this.translate("The username has been copied to clipboard"))}async handleCopyPasswordClick(resource){await this.copyPasswordToClipboard(resource.id)}async handlePreviewPasswordButtonClick(resource){await this.togglePreviewPassword(resource.id)}async handleCopyTotpClick(resource){await this.copyTotpToClipboard(resource.id)}async handlePreviewTotpButtonClick(resource){await this.togglePreviewTotp(resource.id)}async copyTotpToClipboard(resourceId){let plaintextSecretDto,code;if(this.isCellulePreviewed("totp",resourceId))plaintextSecretDto=this.state.plaintextSecretDto;else{this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}this.props.progressContext.close()}if(plaintextSecretDto)if(plaintextSecretDto.totp){try{code=TotpCodeGeneratorService.l.generate(plaintextSecretDto.totp)}catch(error){return void await this.props.actionFeedbackContext.displayError(this.translate("Unable to copy the TOTP"))}await clipBoard.A.copy(code,this.props.context.port),await this.props.resourceWorkspaceContext.onResourceCopied(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The TOTP has been copied to clipboard"))}else await this.props.actionFeedbackContext.displayError(this.translate("The TOTP is empty and cannot be copied to clipboard."))}async copyPasswordToClipboard(resourceId){let plaintextSecretDto;if(this.isCellulePreviewed("password",resourceId))plaintextSecretDto=this.state.plaintextSecretDto;else{this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}this.props.progressContext.close()}plaintextSecretDto&&(plaintextSecretDto?.password?.length?(await clipBoard.A.copy(plaintextSecretDto.password,this.props.context.port),await this.props.resourceWorkspaceContext.onResourceCopied(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The password has been copied to clipboard"))):await this.props.actionFeedbackContext.displayWarning(this.translate("The password is empty and cannot be copied to clipboard.")))}async togglePreviewPassword(resourceId){const isPasswordPreviewedPreviewed=this.isCellulePreviewed("password",resourceId);this.hidePreviewedCellule(),isPasswordPreviewedPreviewed||(await this.previewPassword(resourceId),await this.props.resourceWorkspaceContext.onResourcePreviewed())}hidePreviewedCellule(){this.setState({previewedCellule:null,plaintextSecretDto:null})}async previewPassword(resourceId){let plaintextSecretDto;this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}if(this.props.progressContext.close(),!plaintextSecretDto)return;plaintextSecretDto?.password?.length||(plaintextSecretDto.password="");const previewedCellule={resourceId,columnId:"password"};this.setState({previewedCellule,plaintextSecretDto})}async togglePreviewTotp(resourceId){const isTotpPreviewedPreviewed=this.isCellulePreviewed("totp",resourceId);this.hidePreviewedCellule(),isTotpPreviewedPreviewed||(await this.previewTotp(resourceId),await this.props.resourceWorkspaceContext.onResourcePreviewed())}async previewTotp(resourceId){let plaintextSecretDto;this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}if(this.props.progressContext.close(),!plaintextSecretDto)return;if(!plaintextSecretDto.totp)return void await this.props.actionFeedbackContext.displayError(this.translate("The TOTP is empty and cannot be previewed."));const previewedCellule={resourceId,columnId:"totp"};this.setState({previewedCellule,plaintextSecretDto})}decryptResourceSecret(resourceId){return this.props.context.port.request("passbolt.secret.find-by-resource-id",resourceId)}async handleFavoriteClick(resource){await this.handleFavoriteClickDebounced(resource)}handleFavoriteUpdate(resource){null===resource.favorite?this.favoriteResource(resource):this.unfavoriteResource(resource)}async handleSortByColumnClick(sortProperty){this.props.resourceWorkspaceContext.onSorterChanged(sortProperty)}handleChangeColumnsSettings(columns){columns.shift(),this.props.resourceWorkspaceContext.onChangeColumnsSettings(columns)}async handleResourceDragStartEvent(event,resource,isSelected){isSelected||await this.props.resourceWorkspaceContext.onResourceSelected.single(resource);const draggedItems={resources:this.props.resourceWorkspaceContext.selectedResources,folders:[]};this.props.dragContext.onDragStart(event,DisplayResourcesList_DisplayDragResource,draggedItems)}handleDragEndEvent(){this.props.dragContext.onDragEnd()}async selectResource(resource,event){const isMultipleSelection=event&&this.isMacOS?event.metaKey:event.ctrlKey,isRangeSelection=event&&event.shiftKey;!event||isMultipleSelection?await this.props.resourceWorkspaceContext.onResourceSelected.multiple(resource):isRangeSelection?await this.props.resourceWorkspaceContext.onResourceSelected.range(resource):await this.props.resourceWorkspaceContext.onResourceSelected.single(resource)}get isMacOS(){const platform=navigator.userAgentData?navigator.userAgentData.platform:navigator.userAgent;return/mac/i.test(platform)}async favoriteResource(resource){try{await this.props.context.port.request("passbolt.favorite.add",resource.id),this.displaySuccessNotification(this.translate("The password has been added as a favorite"))}catch(error){this.displayErrorNotification(error.message)}}async unfavoriteResource(resource){try{await this.props.context.port.request("passbolt.favorite.delete",resource.id),this.displaySuccessNotification(this.translate("The password has been removed from favorites"))}catch(error){this.displayErrorNotification(error.message)}}handleLocationClick(folderId){if(folderId){this.props.resourceWorkspaceContext.filter.payload?.folder?.id!==folderId&&this.props.history.push(`/app/folders/view/${folderId}`)}else{const filter={type:ResourceWorkspaceContext.FM.ROOT_FOLDER};this.props.history.push("/app/passwords",{filter})}}displaySuccessNotification(message){this.props.actionFeedbackContext.displaySuccess(message)}displayErrorNotification(message){this.props.actionFeedbackContext.displayError(message)}scrollTo(resourceId){const resourceIndex=this.resources.findIndex((resource=>resource.id===resourceId)),[visibleStartIndex,visibleEndIndex]=this.listRef.current.getVisibleRange();(resourceIndex<visibleStartIndex||resourceIndex>visibleEndIndex)&&this.listRef.current.scrollTo(resourceIndex-1)}handleGoToResourceUriClick(uri){this.props.resourceWorkspaceContext.onGoToResourceUriRequested(uri)}isCellulePreviewed(columnId,resourceId){return this.state.previewedCellule?.columnId===columnId&&this.state.previewedCellule?.resourceId===resourceId}isPasswordResources(resource){return this.props.resourceTypes?.getFirstById(resource.resource_type_id)?.hasPassword()}isTotpResources(resource){return this.props.resourceTypes?.getFirstById(resource.resource_type_id)?.hasTotp()}get hasAttentionRequiredFeature(){return this.props.passwordExpiryContext.isFeatureEnabled()}get canPreviewSecret(){return this.props.context.siteSettings.canIUse("previewPassword")&&this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.SECRETS_PREVIEW)}get canCopySecret(){return this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.SECRETS_COPY)}get isReady(){return null!==this.resources}get isGridReady(){return this.isReady&&0!==this.resources.length&&0!==this.columnsFiltered.length}get translate(){return this.props.t}render(){const isEmpty=this.isReady&&0===this.resources.length,filterType=this.props.resourceWorkspaceContext.filter.type;return react.createElement(react.Fragment,null,isEmpty&&react.createElement("div",{className:"tableview empty"},filterType===ResourceWorkspaceContext.FM.TEXT&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"None of your passwords matched this search.")),react.createElement("p",null,react.createElement(es.x6,null,"Try another search or use the left panel to navigate into your passwords.")))),filterType===ResourceWorkspaceContext.FM.FAVORITE&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"None of your passwords are yet marked as favorite.")),react.createElement("p",null,react.createElement(es.x6,null,"Add stars to passwords you want to easily find later.")))),filterType===ResourceWorkspaceContext.FM.GROUP&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"No passwords are shared with this group yet.")),react.createElement("p",null,react.createElement(es.x6,null,"Share a password with this group or wait for a team member to share one with this group.")))),(filterType===ResourceWorkspaceContext.FM.FOLDER||filterType===ResourceWorkspaceContext.FM.ROOT_FOLDER)&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"No passwords in this folder yet.")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")))),filterType===ResourceWorkspaceContext.FM.SHARED_WITH_ME&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"No passwords are shared with you yet.")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Wait for a team member to share a password with you.")))),filterType===ResourceWorkspaceContext.FM.EXPIRED&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"No passwords have expired yet.")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Wait for a password to expire.")))),(filterType===ResourceWorkspaceContext.FM.ITEMS_I_OWN||filterType===ResourceWorkspaceContext.FM.ALL)&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"Welcome to passbolt!")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Create your first password or wait for a team member to share one with you.")))),filterType===ResourceWorkspaceContext.FM.PRIVATE&&react.createElement("div",{className:"empty-content"},react.createElement(circle_off.A,null),react.createElement("div",{className:"message"},react.createElement("h1",null,react.createElement(es.x6,null,"Welcome to passbolt!")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Create your first password."))))),this.isGridReady&&react.createElement(GridTable.A,{columns:this.columnsFiltered,rows:this.resources,rowsSetting:this.props.resourceWorkspaceContext.rowsSetting,sorter:this.props.resourceWorkspaceContext.sorter,onSortChange:this.handleSortByColumnClick,onChange:this.handleChangeColumnsSettings,onRowClick:this.handleResourceSelected,onRowContextMenu:this.handleResourceRightClick,onRowDragStart:this.handleResourceDragStartEvent,onRowDragEnd:this.handleDragEndEvent,selectedRowsIds:this.selectedResourcesIds,rowsRef:this.listRef}))}}DisplayResourcesList.propTypes={context:prop_types_default().any,rbacContext:prop_types_default().any,resourceWorkspaceContext:prop_types_default().any,resourceTypes:prop_types_default().instanceOf(resourceTypesCollection.A),actionFeedbackContext:prop_types_default().any,contextualMenuContext:prop_types_default().any,passwordExpiryContext:prop_types_default().object,progressContext:prop_types_default().any,history:prop_types_default().any,dragContext:prop_types_default().any,t:prop_types_default().func};const DisplayResourcesList_DisplayResourcesList=(0,AppContext.L)((0,react_router.withRouter)((0,RbacContext.x6)((0,ActionFeedbackContext.ot)((0,ContextualMenuContext.t6)((0,ResourceWorkspaceContext.Qw)((0,ResourceTypesLocalStorageContext.KH)((0,PasswordExpirySettingsContext.f4)((0,DragContext.zk)((0,ProgressContext.E0)((0,es.CI)("common")(DisplayResourcesList)))))))))));DisplayResourcesList.__docgenInfo={description:"This component allows to display the filtered resources into a grid",methods:[{name:"getDefaultState",docblock:"Returns the component default state",modifiers:[],params:[],returns:null,description:"Returns the component default state"},{name:"initEventHandlers",docblock:"Initialize the component event handlers",modifiers:[],params:[],returns:null,description:"Initialize the component event handlers"},{name:"initColumns",docblock:"Init the grid columns.",modifiers:[],params:[],returns:null,description:"Init the grid columns."},{name:"mergeAndSortColumns",docblock:"Merge and sort columns",modifiers:[],params:[],returns:null,description:"Merge and sort columns"},{name:"hasIconVisible",docblock:"Returns true if the icon should be visible",modifiers:[],params:[],returns:null,description:"Returns true if the icon should be visible"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"canUseFolders",docblock:"Check if the user can use folders.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Check if the user can use folders."},{name:"handleSelectAllChange",docblock:"Handle the All resources selection\n@param event The DOM event",modifiers:[],params:[{name:"event",description:"The DOM event",optional:!1}],returns:null,description:"Handle the All resources selection"},{name:"handleResourceSelected",docblock:"Handle the resource selection\n@param event The DOM event\n@param resource The selected resource",modifiers:["async"],params:[{name:"event",description:"The DOM event",optional:!1},{name:"resource",description:"The selected resource",optional:!1}],returns:null,description:"Handle the resource selection"},{name:"handleSelectResources",docblock:"Handle when the user selects an element in the grid.\n@param {array} resources The selected resources",modifiers:[],params:[{name:"resources",description:"The selected resources",type:{name:"array"},optional:!1}],returns:null,description:"Handle when the user selects an element in the grid."},{name:"handleResourceRightClick",docblock:"Handle the right click on a resource\n@param event\n@param resource",modifiers:[],params:[{name:"event",optional:!1},{name:"resource",optional:!1}],returns:null,description:"Handle the right click on a resource"},{name:"handleCheckboxWrapperClick",docblock:null,modifiers:["async"],params:[{name:"event",optional:!1,type:null},{name:"resource",optional:!1,type:null}],returns:null},{name:"handleResourceScroll",docblock:"Handles the initial resource scroll ( with a specific manual resource url /password/view/:id )",modifiers:[],params:[],returns:null,description:"Handles the initial resource scroll ( with a specific manual resource url /password/view/:id )"},{name:"resources",docblock:"Returns the current list of filtered resources to display",modifiers:["get"],params:[],returns:null,description:"Returns the current list of filtered resources to display"},{name:"selectedResources",docblock:"Returns the current list of selected resources",modifiers:["get"],params:[],returns:null,description:"Returns the current list of selected resources"},{name:"selectedResourcesIds",docblock:"Get selected resource ids\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get selected resource ids"},{name:"columnsResourceSetting",docblock:"get columns resource setting\n@return {ColumnsResourceSettingCollection}",modifiers:["get"],params:[],returns:{type:{name:"ColumnsResourceSettingCollection"}},description:"get columns resource setting"},{name:"columnsFiltered",docblock:"Get the columns to display\n@return {[]}",modifiers:["get"],params:[],returns:{type:{name:"tuple",elements:[]}},description:"Get the columns to display"},{name:"getPreviewPassword",docblock:"Get the previewed password\n@param {object} resource The resource\n@return {string|undefined}",modifiers:[],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:{type:{name:"union",elements:[{name:"string"}]}},description:"Get the previewed password"},{name:"getPreviewTotp",docblock:"Get preview totp\n@param {object} resource The resource\n@return {object|undefined}",modifiers:[],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:{type:{name:"union",elements:[{name:"object"}]}},description:"Get preview totp"},{name:"handleCopyUsernameClick",docblock:"Handle copy username click\n@param username\n@return {Promise<void>}",modifiers:["async"],params:[{name:"username",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle copy username click"},{name:"handleCopyPasswordClick",docblock:"Handle copy password button click.\n@param {object} resource The resource",modifiers:["async"],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:null,description:"Handle copy password button click."},{name:"handlePreviewPasswordButtonClick",docblock:"Handle preview password button click.\n@param {object} resource The resource to preview the password for",modifiers:["async"],params:[{name:"resource",description:"The resource to preview the password for",type:{name:"object"},optional:!1}],returns:null,description:"Handle preview password button click."},{name:"handleCopyTotpClick",docblock:"Handle copy totp button click.\n@param {object} resource The resource",modifiers:["async"],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:null,description:"Handle copy totp button click."},{name:"handlePreviewTotpButtonClick",docblock:"Handle preview totp button click.\n@param {object} resource The resource to preview the totp for",modifiers:["async"],params:[{name:"resource",description:"The resource to preview the totp for",type:{name:"object"},optional:!1}],returns:null,description:"Handle preview totp button click."},{name:"copyTotpToClipboard",docblock:"Handle copy totp\n@param resource The resource\n@return {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle copy totp"},{name:"copyPasswordToClipboard",docblock:"Copy a resource secret to clipboard.\n@param {string} resourceId The target resource id\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The target resource id",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Copy a resource secret to clipboard."},{name:"togglePreviewPassword",docblock:"Toggle preview password for a given resource\n@param {string} resourceId The resource id to preview the password for\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview the password for",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle preview password for a given resource"},{name:"hidePreviewedCellule",docblock:"Hide the previewed cellule.",modifiers:[],params:[],returns:null,description:"Hide the previewed cellule."},{name:"previewPassword",docblock:"Preview password for a given resource\n@param {string} resourceId The resource id to preview the password for\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview the password for",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Preview password for a given resource"},{name:"togglePreviewTotp",docblock:"Toggle preview totp for a given resource\n@param {string} resourceId The resource id to preview the password for\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview the password for",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle preview totp for a given resource"},{name:"previewTotp",docblock:"Preview totp\n@param {string} resourceId The resource id to preview",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview",type:{name:"string"},optional:!1}],returns:null,description:"Preview totp"},{name:"decryptResourceSecret",docblock:"Decrypt the resource secret\n@param {string} resourceId The target resource id\n@returns {Promise<object>} The secret in plaintext format\n@throw UserAbortsOperationError If the user cancel the operation",modifiers:[],params:[{name:"resourceId",description:"The target resource id",type:{name:"string"},optional:!1}],returns:{description:"The secret in plaintext format",type:{name:"Promise",elements:[{name:"object"}]}},description:"Decrypt the resource secret"},{name:"handleFavoriteClick",docblock:null,modifiers:["async"],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"handleFavoriteUpdate",docblock:null,modifiers:[],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"handleSortByColumnClick",docblock:"Handle the resource sorter change\n@param sortProperty The resource property to sort on",modifiers:["async"],params:[{name:"sortProperty",description:"The resource property to sort on",optional:!1}],returns:null,description:"Handle the resource sorter change"},{name:"handleChangeColumnsSettings",docblock:"Handle change columns settings\n@param columns",modifiers:[],params:[{name:"columns",optional:!1}],returns:null,description:"Handle change columns settings"},{name:"handleResourceDragStartEvent",docblock:"Handle the drag start on the selected resource\n@param event The DOM event\n@param resource The selected resource\n@param isSelected is resource selected\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"event",description:"The DOM event",optional:!1},{name:"resource",description:"The selected resource",optional:!1},{name:"isSelected",description:"is resource selected",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the drag start on the selected resource"},{name:"handleDragEndEvent",docblock:"Handle when the user stop dragging content.",modifiers:[],params:[],returns:null,description:"Handle when the user stop dragging content."},{name:"selectResource",docblock:"Select the resource given the selection event.\nIf no event is provided, the selection is considered as multiple\n@param resource\n@param event",modifiers:["async"],params:[{name:"resource",optional:!1},{name:"event",optional:!1}],returns:null,description:"Select the resource given the selection event.\nIf no event is provided, the selection is considered as multiple"},{name:"isMacOS",docblock:"Is mac os system\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is mac os system"},{name:"favoriteResource",docblock:null,modifiers:["async"],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"unfavoriteResource",docblock:null,modifiers:["async"],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"handleLocationClick",docblock:"Handle the user click on location folder from the grid.",modifiers:[],params:[{name:"folderId",optional:!1}],returns:null,description:"Handle the user click on location folder from the grid."},{name:"displaySuccessNotification",docblock:"Display success notification (toaster)\n@param message",modifiers:[],params:[{name:"message",optional:!1}],returns:null,description:"Display success notification (toaster)"},{name:"displayErrorNotification",docblock:"Display error notification (toaster)\n@param message",modifiers:[],params:[{name:"message",optional:!1}],returns:null,description:"Display error notification (toaster)"},{name:"scrollTo",docblock:"Triggers a scroll of the grid to a resource given its id, if the resource is not visible yet.\n@param {string} resourceId",modifiers:[],params:[{name:"resourceId",type:{name:"string"},optional:!1}],returns:null,description:"Triggers a scroll of the grid to a resource given its id, if the resource is not visible yet."},{name:"handleGoToResourceUriClick",docblock:"Whenever the user wants to follow a resource uri.\n@param {string} uri The uri",modifiers:[],params:[{name:"uri",description:"The uri",type:{name:"string"},optional:!1}],returns:null,description:"Whenever the user wants to follow a resource uri."},{name:"isCellulePreviewed",docblock:"Check if the password of the given resource is previewed.\n@param {string} columnId The column id.\n@param {string} resourceId The resource id.\n@returns {boolean}",modifiers:[],params:[{name:"columnId",description:"The column id.",type:{name:"string"},optional:!1},{name:"resourceId",description:"The resource id.",type:{name:"string"},optional:!1}],returns:{type:{name:"boolean"}},description:"Check if the password of the given resource is previewed."},{name:"isPasswordResources",docblock:"Is password resource\n@param resource\n@return {boolean}",modifiers:[],params:[{name:"resource",optional:!1}],returns:{type:{name:"boolean"}},description:"Is password resource"},{name:"isTotpResources",docblock:"Is TOTP resource\n@param resource\n@return {boolean}",modifiers:[],params:[{name:"resource",optional:!1}],returns:{type:{name:"boolean"}},description:"Is TOTP resource"},{name:"hasAttentionRequiredFeature",docblock:'Returns true if the "attention required" column feature is available.\n@returns {boolean}',modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:'Returns true if the "attention required" column feature is available.'},{name:"canPreviewSecret",docblock:"Can preview secret\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can preview secret"},{name:"canCopySecret",docblock:"Can copy secret\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can copy secret"},{name:"isReady",docblock:"Is ready\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is ready"},{name:"isGridReady",docblock:"Is grid ready and not empty\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is grid ready and not empty"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DisplayResourcesList",props:{context:{description:"",type:{name:"any"},required:!1},rbacContext:{description:"",type:{name:"any"},required:!1},resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1},resourceTypes:{description:"",type:{name:"instanceOf",value:"ResourceTypesCollection"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},contextualMenuContext:{description:"",type:{name:"any"},required:!1},passwordExpiryContext:{description:"",type:{name:"object"},required:!1},progressContext:{description:"",type:{name:"any"},required:!1},history:{description:"",type:{name:"any"},required:!1},dragContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);