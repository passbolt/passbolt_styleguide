/*! For license information please see 2879.bd4f53ae.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[2879],{"./src/react-extension/components/Administration/DisplayTestUserDirectoryAdministration/DisplayTestUserDirectoryAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayTestUserDirectoryAdministration_DisplayTestUserDirectoryAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),DialogWrapper=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js");class DisplayStructureGroupsUsersTreeItem extends react.Component{hasChildren(){return this.props.node.group.groups.length>0}displayUserName(user){return`${user.profile.first_name} ${user.profile.last_name}`}get node(){return this.props.node}render(){return react.createElement("ul",{key:this.node.id},"group"===this.node.type&&react.createElement("li",{className:"group"},this.node.group.name,react.createElement("ul",null,Object.values(this.node.group.users).map((node=>react.createElement("li",{className:"user",key:node.id},node.errors&&react.createElement("span",{className:"error"},node.directory_name),!node.errors&&react.createElement("span",null,this.displayUserName(node.user)," ",react.createElement("em",null,"(",node.user.username,")"))))),Object.values(this.node.group.groups).map((node=>react.createElement(DisplayStructureGroupsUsersTreeItem,{key:`tree-${node.id}`,node}))))),"user"===this.node.type&&react.createElement("li",{className:"user"},this.node.errors&&react.createElement("span",{className:"error"},this.node.directory_name),!this.node.errors&&react.createElement("span",null,this.displayUserName(this.node.user)," ",react.createElement("em",null,"(",this.node.user.username,")"))))}}DisplayStructureGroupsUsersTreeItem.propTypes={node:prop_types_default().object};const DisplayTestUserDirectoryAdministration_DisplayStructureGroupsUsersTreeItem=DisplayStructureGroupsUsersTreeItem;DisplayStructureGroupsUsersTreeItem.__docgenInfo={description:"",methods:[{name:"hasChildren",docblock:"has children\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"has children"},{name:"displayUserName",docblock:"display user firstname and lastname\n@param user",modifiers:[],params:[{name:"user",optional:!1}],returns:null,description:"display user firstname and lastname"},{name:"node",docblock:null,modifiers:["get"],params:[],returns:null}],displayName:"DisplayStructureGroupsUsersTreeItem",props:{node:{description:"",type:{name:"object"},required:!1}}};var es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class DisplayTestUserDirectoryAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindEventHandlers()}get defaultState(){return{loading:!0,openListGroupsUsers:!1,openStructureGroupsUsers:!1,openErrors:!1}}bindEventHandlers(){this.handleListGroupsUsersClicked=this.handleListGroupsUsersClicked.bind(this),this.handleStructureGroupsUsersClicked=this.handleStructureGroupsUsersClicked.bind(this),this.handleErrorsClicked=this.handleErrorsClicked.bind(this),this.handleClose=this.handleClose.bind(this)}componentDidMount(){this.setState({loading:!1})}handleListGroupsUsersClicked(){this.setState({openListGroupsUsers:!this.state.openListGroupsUsers})}handleStructureGroupsUsersClicked(){this.setState({openStructureGroupsUsers:!this.state.openStructureGroupsUsers})}handleErrorsClicked(){this.setState({openErrors:!this.state.openErrors})}handleClose(){this.props.onClose(),this.props.context.setContext({displayTestUserDirectoryDialogProps:null})}hasAllInputDisabled(){return this.state.loading}displayUserName(user){return`${user.profile.first_name} ${user.profile.last_name}`}get users(){return this.props.context.displayTestUserDirectoryDialogProps.userDirectoryTestResult.users}get groups(){return this.props.context.displayTestUserDirectoryDialogProps.userDirectoryTestResult.groups}get tree(){return this.props.context.displayTestUserDirectoryDialogProps.userDirectoryTestResult.tree}get errors(){return this.props.context.displayTestUserDirectoryDialogProps.userDirectoryTestResult.errors}get translate(){return this.props.t}render(){return react.createElement(DialogWrapper.A,{className:"ldap-test-settings-dialog",title:this.translate("Test settings report"),onClose:this.handleClose,disabled:this.hasAllInputDisabled()},react.createElement("div",{className:"form-content"},react.createElement("p",null,react.createElement("strong",null,react.createElement(es.x6,null,"A connection could be established. Well done!"))),react.createElement("p",null),react.createElement("div",{className:"ldap-test-settings-report"},react.createElement("p",null,this.users.length>0&&react.createElement(react.Fragment,null,this.translate("{{count}} user has been found.",{count:this.users.length})),this.users.length>0&&this.groups.length>0&&react.createElement("br",null),this.groups.length>0&&react.createElement(react.Fragment,null,this.translate("{{count}} group has been found.",{count:this.groups.length}))),react.createElement("div",{className:"accordion directory-list "+(this.state.openListGroupsUsers?"":"closed")},react.createElement("div",{className:"accordion-header",onClick:this.handleListGroupsUsersClicked},react.createElement("button",{type:"button",className:"link no-border"},react.createElement(es.x6,null,"See list"),this.state.openListGroupsUsers&&react.createElement(Icon.A,{name:"caret-down",baseline:!0}),!this.state.openListGroupsUsers&&react.createElement(Icon.A,{name:"caret-right",baseline:!0}))),react.createElement("div",{className:"accordion-content"},react.createElement("table",null,react.createElement("tbody",null,react.createElement("tr",null,react.createElement("td",null,react.createElement(es.x6,null,"Groups")),react.createElement("td",null,react.createElement(es.x6,null,"Users"))),react.createElement("tr",null,react.createElement("td",null,this.groups.map((group=>group.errors&&react.createElement("div",{key:group.id},react.createElement("span",{className:"error"},group.directory_name))||react.createElement("div",{key:group.id},group.group.name)))),react.createElement("td",null,this.users.map((user=>user.errors&&react.createElement("div",{key:user.id},react.createElement("span",{className:"error"},user.directory_name))||react.createElement("div",{key:user.id},this.displayUserName(user.user)," ",react.createElement("em",null,"(",user.user.username,")")))))))))),react.createElement("div",{className:"accordion accordion-directory-structure "+(this.state.openStructureGroupsUsers?"":"closed")},react.createElement("div",{className:"accordion-header",onClick:this.handleStructureGroupsUsersClicked},react.createElement("button",{type:"button",className:"link no-border"},react.createElement(es.x6,null,"See structure"),this.state.openStructureGroupsUsers&&react.createElement(Icon.A,{name:"caret-down",baseline:!0}),!this.state.openStructureGroupsUsers&&react.createElement(Icon.A,{name:"caret-right",baseline:!0}))),react.createElement("div",{className:"accordion-content"},react.createElement("div",{className:"directory-structure"},react.createElement("ul",null,react.createElement("li",{className:"group"},"Root",Object.values(this.tree).map((node=>react.createElement(DisplayTestUserDirectoryAdministration_DisplayStructureGroupsUsersTreeItem,{key:`tree-${node.id}`,node})))))))),this.errors.length>0&&react.createElement("div",null,react.createElement("p",{className:"directory-errors error"},this.translate("{{count}} entry had errors and will be ignored during synchronization.",{count:this.errors.length})),react.createElement("div",{className:"accordion accordion-directory-errors "+(this.state.openErrors?"":"closed")},react.createElement("div",{className:"accordion-header",onClick:this.handleErrorsClicked},react.createElement("button",{type:"button",className:"link no-border"},react.createElement(es.x6,null,"See error details"),this.state.openErrors&&react.createElement(Icon.A,{name:"caret-down",baseline:!0}),!this.state.openErrors&&react.createElement(Icon.A,{name:"caret-right",baseline:!0}))),react.createElement("div",{className:"accordion-content"},react.createElement("div",{className:"directory-errors"},react.createElement("textarea",{value:JSON.stringify(this.errors,null," "),readOnly:!0}))))))),react.createElement("div",{className:"submit-wrapper clearfix"},react.createElement("button",{type:"button",disabled:this.hasAllInputDisabled(),className:"primary",onClick:this.handleClose},react.createElement(es.x6,null,"OK"))))}}DisplayTestUserDirectoryAdministration.propTypes={context:prop_types_default().any,onClose:prop_types_default().func,t:prop_types_default().func};const DisplayTestUserDirectoryAdministration_DisplayTestUserDirectoryAdministration=(0,AppContext.L)((0,es.CI)("common")(DisplayTestUserDirectoryAdministration));DisplayTestUserDirectoryAdministration.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindEventHandlers",docblock:"Bind event handlers\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind event handlers"},{name:"handleListGroupsUsersClicked",docblock:"Handle the click on the list groups users",modifiers:[],params:[],returns:null,description:"Handle the click on the list groups users"},{name:"handleStructureGroupsUsersClicked",docblock:"Handle the click on the structure groups users",modifiers:[],params:[],returns:null,description:"Handle the click on the structure groups users"},{name:"handleErrorsClicked",docblock:"Handle the click on the errors",modifiers:[],params:[],returns:null,description:"Handle the click on the errors"},{name:"handleClose",docblock:"Handle close button click.\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Handle close button click."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading"},{name:"displayUserName",docblock:"display user firstname and lastname\n@param user",modifiers:[],params:[{name:"user",optional:!1}],returns:null,description:"display user firstname and lastname"},{name:"users",docblock:"get users\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"get users"},{name:"groups",docblock:"get groups\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"get groups"},{name:"tree",docblock:"get tree\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"get tree"},{name:"errors",docblock:"get errors\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"get errors"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DisplayTestUserDirectoryAdministration",props:{context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);