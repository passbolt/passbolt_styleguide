/*! For license information please see react-extension-components-User-DisplayUsersContextualMenu-DisplayUsersContextualMenu-test-stories.5a6a7367.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[5042],{"./src/react-extension/components/User/DisplayUsersContextualMenu/DisplayUsersContextualMenu.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AdminWithReviewRecovery:()=>AdminWithReviewRecovery,AdminWithoutReviewRecovery:()=>AdminWithoutReviewRecovery,User:()=>User,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DisplayUsersContextualMenu_test_stories});var react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),react=__webpack_require__("./node_modules/react/index.js"),MockTranslationProvider=__webpack_require__("./src/react-extension/test/mock/components/Internationalisation/MockTranslationProvider.js"),DisplayUsersContextualMenu=__webpack_require__("./src/react-extension/components/User/DisplayUsersContextualMenu/DisplayUsersContextualMenu.js"),MockPort=__webpack_require__("./src/react-extension/test/mock/MockPort.js"),role_test_data=__webpack_require__("./src/shared/models/entity/role/role.test.data.js");function defaultAppContext(appContext){const defaultAppContext={port:new MockPort.A,siteSettings:{canIUse:()=>!0},userSettings:{getTrustedDomain:()=>new URL(window.location.href).origin},loggedInUser:{role:{name:"admin"}},setContext:jest.fn()};return Object.assign(defaultAppContext,appContext||{})}function defaultProps(){return{actionFeedbackContext:{displaySuccess:jest.fn()},dialogContext:{open:jest.fn()},hide:jest.fn(),workflowContext:{start:jest.fn()},user:{id:"640ebc06-5ec1-5322-a1ae-6120ed2f3a74",role_id:role_test_data.ol,role:{created:"2012-07-04T13:39:25+00:00",description:"Logged in user",id:role_test_data.ol,modified:"2012-07-04T13:39:25+00:00",name:"user"},username:"carol@passbolt.com",active:!0,deleted:!1,created:"2020-05-11T09:32:49+00:00",modified:"2020-05-12T09:32:49+00:00",profile:{id:"48bcd9ac-a520-53e0-b3a4-9da7e57b91aa",user_id:"640ebc06-5ec1-5322-a1ae-6120ed2f3a74",first_name:"Carol",last_name:"Shaw",created:"2020-05-13T09:32:49+00:00",modified:"2020-05-13T09:32:49+00:00",avatar:{id:"0f769127-3053-45e4-bd8e-75e766bb4d52",user_id:"640ebc06-5ec1-5322-a1ae-6120ed2f3a74",foreign_key:"48bcd9ac-a520-53e0-b3a4-9da7e57b91aa",model:"Avatar",filename:"carol.png",filesize:733439,mime_type:"image/png",extension:"png",hash:"7445a736df60a1ac1bfdab8fc5b842a95c495aec",path:"Avatar/73/09/19/0f769127305345e4bd8e75e766bb4d52/0f769127305345e4bd8e75e766bb4d52.png",adapter:"Local",created:"2020-05-13T09:32:51+00:00",modified:"2020-05-13T09:32:51+00:00",url:{medium:"img/public/Avatar/73/09/19/0f769127305345e4bd8e75e766bb4d52/0f769127305345e4bd8e75e766bb4d52.a99472d5.png",small:"img/public/Avatar/73/09/19/0f769127305345e4bd8e75e766bb4d52/0f769127305345e4bd8e75e766bb4d52.65a0ba70.png"}}},__placeholder_last_logged_in__:"",last_logged_in:"",is_mfa_enabled:!1,pending_account_recovery_request:{id:"54c6278e-f824-5fda-91ff-3e946b18d997"}}}}const DisplayUsersContextualMenu_test_stories={title:"Components/User/DisplayUsersContextualMenu",component:DisplayUsersContextualMenu.A},Template=args=>react.createElement(MockTranslationProvider.A,null,react.createElement(react_router.fS,{initialEntries:["/"]},react.createElement(react_router.qh,{component:routerProps=>react.createElement(DisplayUsersContextualMenu.A,{...args,...routerProps})}))),AdminWithoutReviewRecovery=Template.bind({});AdminWithoutReviewRecovery.args=Object.assign(defaultProps(),{context:defaultAppContext()});const AdminWithReviewRecovery=Template.bind({});AdminWithReviewRecovery.args=Object.assign(function propsWithUserTemporaryHasPendingAccountRecovery(){const props=defaultProps();return props.user.pending_account_recovery_request=!0,props}(),{context:defaultAppContext()});const User=Template.bind({});User.args=Object.assign(defaultProps(),{context:defaultAppContext({loggedInUser:{role:{name:"user"}}})});const __namedExportsOrder=["AdminWithoutReviewRecovery","AdminWithReviewRecovery","User"];AdminWithoutReviewRecovery.parameters={...AdminWithoutReviewRecovery.parameters,docs:{...AdminWithoutReviewRecovery.parameters?.docs,source:{originalSource:"args => <MockTranslationProvider>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <DisplayUsersContextualMenu {...args} {...routerProps} />}></Route>\n    </MemoryRouter>\n  </MockTranslationProvider>",...AdminWithoutReviewRecovery.parameters?.docs?.source}}},AdminWithReviewRecovery.parameters={...AdminWithReviewRecovery.parameters,docs:{...AdminWithReviewRecovery.parameters?.docs,source:{originalSource:"args => <MockTranslationProvider>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <DisplayUsersContextualMenu {...args} {...routerProps} />}></Route>\n    </MemoryRouter>\n  </MockTranslationProvider>",...AdminWithReviewRecovery.parameters?.docs?.source}}},User.parameters={...User.parameters,docs:{...User.parameters?.docs,source:{originalSource:"args => <MockTranslationProvider>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <DisplayUsersContextualMenu {...args} {...routerProps} />}></Route>\n    </MemoryRouter>\n  </MockTranslationProvider>",...User.parameters?.docs?.source}}}},"./src/react-extension/test/mock/MockPort.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function delay(t,v){return new Promise((resolve=>{setTimeout((()=>resolve(v)),t)}))}__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=class MockPort{constructor(storage){this.storage=storage,this.onListeners={},this.requestListeners={},this.emitListener={},this.onConnectErrorHandler={}}async emit(name,eventObject){let result;return console.debug(`PORT EMIT: ${name}`),console.debug("Arguments",eventObject),this.emitListener[name]?(result=await this.emitListener[name](eventObject),console.debug("response: ",result)):console.debug(`The emit ${name} has not been mocked`),delay(0,result)}on(name,callback){console.debug(`PORT ON: ${name}`),console.debug("PORT ON PARAMETERS:",callback),this.addOnListener(name,callback)}async request(name){let result;if(console.debug(`PORT REQUEST: ${name}`),console.debug("PORT REQUEST PARAMETERS:",Array.prototype.slice.call(arguments)),this.requestListeners[name]){const listenerArguments=Array.prototype.slice.call(arguments,1,arguments.length);console.debug("listenerArguments",listenerArguments),listenerArguments.push(this.storage),console.debug("listenerArguments",listenerArguments),result=await this.requestListeners[name](...listenerArguments),console.debug("response: ",result)}else console.debug(`The request ${name} has not been mocked`);return delay(0,result)}addEmitListener(name){console.debug(`PORT EMIT: ${name}`),console.debug("PORT EMIT PARAMETERS:",Array.prototype.slice.call(arguments))}addOnListener(name,callback){this.emitListener[name]=callback}addRequestListener(name,callback){this.requestListeners[name]=callback}onConnectError(callback){this.onConnectErrorHandler.callback=callback}}},"./src/shared/models/entity/role/role.test.data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dm:()=>userRoleDto,ES:()=>TEST_ROLE_ADMIN_ID,bd:()=>adminRoleDto,ol:()=>TEST_ROLE_USER_ID});var uuid__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");const TEST_ROLE_USER_ID=(0,uuid__WEBPACK_IMPORTED_MODULE_0__.A)(),TEST_ROLE_ADMIN_ID=(0,uuid__WEBPACK_IMPORTED_MODULE_0__.A)(),userRoleDto=data=>({id:TEST_ROLE_USER_ID,name:"user",...data}),adminRoleDto=data=>({id:TEST_ROLE_ADMIN_ID,name:"admin",...data})}}]);