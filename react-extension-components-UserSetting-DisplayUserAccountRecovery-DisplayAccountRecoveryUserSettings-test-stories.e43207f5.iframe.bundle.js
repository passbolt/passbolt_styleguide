/*! For license information please see react-extension-components-UserSetting-DisplayUserAccountRecovery-DisplayAccountRecoveryUserSettings-test-stories.e43207f5.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[2749],{"./src/react-extension/components/UserSetting/DisplayUserAccountRecovery/DisplayAccountRecoveryUserSettings.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Disabled:()=>Disabled,Enabled:()=>Enabled,Pending:()=>Pending,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DisplayAccountRecoveryUserSettings_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),UserAvatar=__webpack_require__("./src/react-extension/components/Common/Avatar/UserAvatar.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AccountRecoveryUserContext=__webpack_require__("./src/react-extension/contexts/AccountRecoveryUserContext.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ManageAccountRecoveryUserSettings=__webpack_require__("./src/react-extension/components/AccountRecovery/ManageAccountRecoveryUserSettings/ManageAccountRecoveryUserSettings.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js");class HandleAccountRecoveryUserSettingsRoute extends react.Component{async componentDidMount(){await this.handleRoute()}async handleRoute(){if(this.props.accountRecoveryContext.getPolicy()===AccountRecoveryUserContext.On.POLICY_DISABLED)return void this.redirectToSettingsPage();if(this.props.accountRecoveryContext.getUserAccountRecoverySubscriptionStatus()===AccountRecoveryUserContext.On.STATUS_APPROVED)return this.showAlreadyEnrolledFeedback(),void this.redirectToSettingsPage();this.props.dialogContext.open(ManageAccountRecoveryUserSettings.A,{organizationPolicy:this.props.accountRecoveryContext.getOrganizationPolicy()})}async showAlreadyEnrolledFeedback(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("You already enrolled to the account recovery program"))}redirectToSettingsPage(){this.props.history.push("/app/settings/account-recovery")}render(){return null}}HandleAccountRecoveryUserSettingsRoute.propTypes={dialogContext:prop_types_default().object,accountRecoveryContext:prop_types_default().object,history:prop_types_default().object,actionFeedbackContext:prop_types_default().any,t:prop_types_default().func};const HandleAccountRecoveryUserSettingsRoute_HandleAccountRecoveryUserSettingsRoute=(0,react_router.y)((0,DialogContext.z9)((0,AccountRecoveryUserContext.Le)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(HandleAccountRecoveryUserSettingsRoute)))));HandleAccountRecoveryUserSettingsRoute.__docgenInfo={description:"",methods:[{name:"handleRoute",docblock:"Handle the review account recovery request route.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the review account recovery request route."},{name:"showAlreadyEnrolledFeedback",docblock:"Notify the user that the enrollment has been done already.",modifiers:["async"],params:[],returns:null,description:"Notify the user that the enrollment has been done already."},{name:"redirectToSettingsPage",docblock:"Redirect to the account recovery user settings page.",modifiers:[],params:[],returns:null,description:"Redirect to the account recovery user settings page."}],displayName:"HandleAccountRecoveryUserSettingsRoute",props:{dialogContext:{description:"",type:{name:"object"},required:!1},accountRecoveryContext:{description:"",type:{name:"object"},required:!1},history:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var Tooltip=__webpack_require__("./src/react-extension/components/Common/Tooltip/Tooltip.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js"),userUtils=__webpack_require__("./src/shared/utils/userUtils.js");class DisplayAccountRecoveryUserSettings extends react.Component{constructor(props){super(props),this.bindCallbacks()}async componentDidMount(){await this.props.accountRecoveryContext.loadAccountRecoveryPolicy()}bindCallbacks(){this.handleReviewClick=this.handleReviewClick.bind(this)}hasNotApprovedStatus(){return"approved"!==this.props.accountRecoveryContext.status}formatFingerprint(fingerprint){return fingerprint?fingerprint.toUpperCase().replace(/.{4}(?=.)/g,"$& "):""}isStatusApproved(){return"approved"===this.props.accountRecoveryContext.status}handleReviewClick(){this.props.dialogContext.open(ManageAccountRecoveryUserSettings.A,{organizationPolicy:this.props.accountRecoveryContext.getOrganizationPolicy()})}get requestor(){return this.props.accountRecoveryContext.getRequestor()}get requestorRole(){return this.props.context.roles.find((role=>role.id===this.requestor.role_id)).name}get requestorName(){return react.createElement(react.Fragment,null,this.requestor.profile.first_name," ",this.requestor.profile.last_name," (",this.requestor.username,")")}get requestorFingerprint(){const requestor=this.requestor;return requestor&&requestor.gpgkey.fingerprint}get requestedDate(){return this.props.accountRecoveryContext.getRequestedDate()}get isAccountRecoveryFeatureEnabled(){return"disabled"!==this.policy}get policy(){return this.props.accountRecoveryContext.getPolicy()}get isReady(){return this.props.accountRecoveryContext.isReady()}get translate(){return this.props.t}render(){const requestorStatus=(0,userUtils.CD)(this.requestor);return react.createElement(react.Fragment,null,this.props.context.loggedInUser&&this.props.accountRecoveryContext.getOrganizationPolicy()&&react.createElement(react_router.qh,{exact:!0,path:"/app/settings/account-recovery/edit",component:HandleAccountRecoveryUserSettingsRoute_HandleAccountRecoveryUserSettingsRoute}),react.createElement("div",{className:"grid grid-responsive-12"},react.createElement("div",{className:"row"},react.createElement("div",{className:"col8 account-recovery-profile main-column"},this.isReady&&this.isAccountRecoveryFeatureEnabled&&react.createElement(react.Fragment,null,react.createElement("h3",null,react.createElement(es.x6,null,"Account Recovery")),react.createElement("p",null,react.createElement(es.x6,null,"It is possible to share securely your recovery kit with the administrator.")," ",react.createElement(es.x6,null,"They will be able to help you in case you lose it.")," ",react.createElement(es.x6,null,"Otherwise, you may lose access to your data.")),react.createElement("div",{className:"account-recovery-status"},react.createElement("div",{className:"account-recovery-review"},react.createElement("p",{className:"status-wrapper"},react.createElement(es.x6,null,"Status"),":",react.createElement("span",{className:`account-recovery-hints ${this.props.accountRecoveryContext.status}`}),react.createElement("span",{className:"status"},this.props.accountRecoveryContext.status)),this.hasNotApprovedStatus()&&!this.isStatusApproved()&&react.createElement("button",{type:"button",className:"button primary",onClick:this.handleReviewClick},react.createElement(es.x6,null,"Review"))),this.hasNotApprovedStatus()&&react.createElement("ul",null,react.createElement("li",{className:"usercard-detailed-col-2"},react.createElement("div",{className:"content-wrapper"},react.createElement("div",{className:"content"},react.createElement("div",null,react.createElement(Tooltip.A,{message:this.formatFingerprint(this.requestorFingerprint),direction:"bottom"},react.createElement("span",{className:"name-with-tooltip"},this.requestorName))," ",react.createElement("span",{className:"name"},react.createElement(es.x6,null,"requested this operation"))),react.createElement("div",{className:"subinfo light"},react.createElement("span",{className:"dateTimeAgo"},(0,dateUtils.kD)(this.requestedDate,this.props.t,this.props.context.locale)),react.createElement("span",{className:"chips-group"},react.createElement("span",{className:`chips user-status ${requestorStatus}`},this.props.t(requestorStatus)),react.createElement("span",{className:`chips user-role ${this.requestorRole}`},this.requestorRole))))),react.createElement(UserAvatar.A,{user:this.requestor,baseUrl:this.props.context.userSettings.getTrustedDomain()}))))),this.isReady&&!this.isAccountRecoveryFeatureEnabled&&react.createElement(react.Fragment,null,react.createElement("h3",null,react.createElement(es.x6,null,"Account Recovery")),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Sorry the account recovery feature is not enabled for this organization.")),react.createElement("p",null,react.createElement(es.x6,null,"Please contact your administrator to enable the account recovery feature.")))),react.createElement("div",{className:"col4 last"},react.createElement("div",{className:"sidebar-help"},react.createElement("h3",null,react.createElement(es.x6,null,"Need some help?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about account recovery, checkout the dedicated page on the help website.")),react.createElement("a",{className:"button",href:"https://help.passbolt.com/faq/start/account-recovery/subscribe",target:"_blank",rel:"noopener noreferrer"},react.createElement(Icon.A,{name:"life-ring"}),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation"))))))))}}DisplayAccountRecoveryUserSettings.propTypes={context:prop_types_default().any,accountRecoveryContext:prop_types_default().any,date:prop_types_default().string,t:prop_types_default().func,dialogContext:prop_types_default().object};const DisplayUserAccountRecovery_DisplayAccountRecoveryUserSettings=(0,AppContext.L)((0,AccountRecoveryUserContext.Le)((0,DialogContext.z9)((0,es.CI)("common")(DisplayAccountRecoveryUserSettings))));DisplayAccountRecoveryUserSettings.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"hasNotApprovedStatus",docblock:"Is the account recovery approved?\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is the account recovery approved?"},{name:"formatFingerprint",docblock:"get fingerprint\n@param fingerprint\n@returns string",modifiers:[],params:[{name:"fingerprint",optional:!1}],returns:{description:"string"},description:"get fingerprint"},{name:"isStatusApproved",docblock:"Returns true if user has rejected the account recovery policy\n@return {bool}",modifiers:[],params:[],returns:{type:{name:"bool"}},description:"Returns true if user has rejected the account recovery policy"},{name:"handleReviewClick",docblock:"Handle user clicking on review click.",modifiers:[],params:[],returns:null,description:"Handle user clicking on review click."},{name:"requestor",docblock:"Get the user requesting the current user to subscribe to the account recovery program.\n@returns {object|void}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"object"},{name:"void"}]}},description:"Get the user requesting the current user to subscribe to the account recovery program."},{name:"requestorRole",docblock:"Get the user role who initiated the account recovery request.\n@returns {object}",modifiers:["get"],params:[],returns:{type:{name:"object"}},description:"Get the user role who initiated the account recovery request."},{name:"requestorName",docblock:"Get the user name requesting the current user to subscribe to the account recovery program.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the user name requesting the current user to subscribe to the account recovery program."},{name:"requestorFingerprint",docblock:"Get the user requesting the current user to subscribe to the account recovery program.\n@returns {string|void}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"string"},{name:"void"}]}},description:"Get the user requesting the current user to subscribe to the account recovery program."},{name:"requestedDate",docblock:"Get the time at when the setup of the account recovery user setting policy has been requested.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the time at when the setup of the account recovery user setting policy has been requested."},{name:"isAccountRecoveryFeatureEnabled",docblock:"Returns true if the account recovery feature is not disabled\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the account recovery feature is not disabled"},{name:"policy",docblock:"Return the organization policy type.\n@returns {string|void}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"string"},{name:"void"}]}},description:"Return the organization policy type."},{name:"isReady",docblock:"Returns true when the data is fully loaded.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is fully loaded."},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DisplayAccountRecoveryUserSettings",props:{context:{description:"",type:{name:"any"},required:!1},accountRecoveryContext:{description:"",type:{name:"any"},required:!1},date:{description:"",type:{name:"string"},required:!1},t:{description:"",type:{name:"func"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1}}};var MockTranslationProvider=__webpack_require__("./src/react-extension/test/mock/components/Internationalisation/MockTranslationProvider.js"),userEntity_test_data=__webpack_require__("./src/shared/models/entity/user/userEntity.test.data.js"),ExtAppContext_test_data=__webpack_require__("./src/react-extension/contexts/ExtAppContext.test.data.js");const DisplayAccountRecoveryUserSettings_test_stories={title:"Components/UserSetting/DisplayAccountRecoveryUserSettings",component:DisplayUserAccountRecovery_DisplayAccountRecoveryUserSettings},Template=args=>react.createElement(MockTranslationProvider.A,null,react.createElement(react_router.fS,{initialEntries:["/"]},react.createElement(react_router.qh,{component:routerProps=>react.createElement(DisplayUserAccountRecovery_DisplayAccountRecoveryUserSettings,{...args,...routerProps})}))),getTemplateArgs=()=>({context:(0,ExtAppContext_test_data.st)(),accountRecoveryContext:{status:"approved",isReady:()=>!0,loadAccountRecoveryPolicy:()=>{},getPolicy:()=>({policy:"opt-out"}),getRequestor:()=>({...userEntity_test_data.VV.ada,gpgkey:{fingerprint:"848E95CC7493129AD862583129B81CA8936023DD"}}),getRequestedDate:()=>"2021-05-25T09:08:34.123",getOrganizationPolicy:()=>{return{policy:{policy:"opt-out"},creator:{...userEntity_test_data.VV.ada,gpgkey:{fingerprint:"848E95CC7493129AD862583129B81CA8936023DD"}},modified:"2022-01-13T15:27:26.301Z",...data};var data}}}),Enabled=Template.bind({});Enabled.args=getTemplateArgs();const Pending=Template.bind({});Pending.args=getTemplateArgs(),Pending.args.accountRecoveryContext.status="pending";const Disabled=Template.bind({});Disabled.args=getTemplateArgs(),Disabled.args.accountRecoveryContext.status="rejected";const __namedExportsOrder=["Enabled","Pending","Disabled"];Enabled.parameters={...Enabled.parameters,docs:{...Enabled.parameters?.docs,source:{originalSource:"args => <MockTranslationProvider>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <DisplayAccountRecoveryUserSettings {...args} {...routerProps} />}></Route>\n    </MemoryRouter>\n  </MockTranslationProvider>",...Enabled.parameters?.docs?.source}}},Pending.parameters={...Pending.parameters,docs:{...Pending.parameters?.docs,source:{originalSource:"args => <MockTranslationProvider>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <DisplayAccountRecoveryUserSettings {...args} {...routerProps} />}></Route>\n    </MemoryRouter>\n  </MockTranslationProvider>",...Pending.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => <MockTranslationProvider>\n    <MemoryRouter initialEntries={['/']}>\n      <Route component={routerProps => <DisplayAccountRecoveryUserSettings {...args} {...routerProps} />}></Route>\n    </MemoryRouter>\n  </MockTranslationProvider>",...Disabled.parameters?.docs?.source}}}}}]);