/*! For license information please see react-extension-components-Authentication-DownloadRecoveryKit-DownloadRecoveryKit-test-stories.e9555ace.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1411],{"./src/react-extension/components/Authentication/DownloadRecoveryKit/DownloadRecoveryKit.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DownloadRecoveryKit_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);class DownloadRecoveryKit extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindEventHandlers()}bindEventHandlers(){this.handleInputChange=this.handleInputChange.bind(this),this.handleNext=this.handleNext.bind(this),this.handleDownload=this.handleDownload.bind(this)}get defaultState(){return{isStoredRecoveryKitSafe:!1}}componentDidMount(){this.props.onDownload()}handleInputChange(event){const target=event.target,value=target.checked,name=target.name;this.setState({[name]:value})}hasValidationError(){return null!==this.state.usernameError||this.state.agreedTermsError}handleNext(){this.props.onComplete()}handleDownload(){this.props.onDownload()}hasAllInputDisabled(){return!this.state.isStoredRecoveryKitSafe}render(){return react.createElement("div",{className:"generate-key-feedback"},react.createElement("h1",null,react.createElement(es.x6,null,"Store your recovery kit in a safe place.")),react.createElement("p",null,react.createElement("strong",null,react.createElement(es.x6,null,"You will need this recovery kit later to access your account (for example on a new device)."))),react.createElement("p",null,react.createElement(es.x6,null,"A download of your recovery kit, containing your secret key, has automatically started.")),react.createElement("div",{className:"input checkbox"},react.createElement("input",{type:"checkbox",name:"isStoredRecoveryKitSafe",checked:this.state.isStoredRecoveryKitSafe,onChange:this.handleInputChange,id:"checkbox-recovery-kit"}),react.createElement("label",{htmlFor:"checkbox-recovery-kit"},react.createElement(es.x6,null,"I safely stored my recovery kit."))),react.createElement("div",{className:"form-actions"},react.createElement("button",{type:"submit",className:"button primary big full-width",disabled:this.hasAllInputDisabled(),onClick:this.handleNext},react.createElement(es.x6,null,"Next")),react.createElement("button",{className:"link",type:"button",id:"download-kit",onClick:this.handleDownload},react.createElement(es.x6,null,"Download the kit again!"))))}}DownloadRecoveryKit.propTypes={onDownload:prop_types_default().func.isRequired,onComplete:prop_types_default().func.isRequired};const DownloadRecoveryKit_DownloadRecoveryKit=(0,es.CI)("common")(DownloadRecoveryKit);DownloadRecoveryKit.__docgenInfo={description:"",methods:[{name:"bindEventHandlers",docblock:"Bind event handlers\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind event handlers"},{name:"defaultState",docblock:"Get default state\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle form input changes."},{name:"hasValidationError",docblock:"Return true if the form has some validation error\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the form has some validation error"},{name:"handleNext",docblock:"Whenever the user completed the step.",modifiers:[],params:[],returns:null,description:"Whenever the user completed the step."},{name:"handleDownload",docblock:"Whenever the user wants to download the recovery kit again.",modifiers:[],params:[],returns:null,description:"Whenever the user wants to download the recovery kit again."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"}],displayName:"DownloadRecoveryKit",props:{onDownload:{description:"",type:{name:"func"},required:!0},onComplete:{description:"",type:{name:"func"},required:!0}}};const DownloadRecoveryKit_test_stories={title:"Components/Authentication/DownloadRecoveryKit",component:DownloadRecoveryKit_DownloadRecoveryKit},Initial=(args=>react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.fS,{initialEntries:["/"]},react.createElement(react_router.qh,{component:routerProps=>react.createElement(DownloadRecoveryKit_DownloadRecoveryKit,{...args,...routerProps})})))))).bind({});Initial.args=function defaultProps(props){const defaultProps={onComplete:jest.fn((()=>Promise.resolve())),onDownload:jest.fn((()=>Promise.resolve()))};return Object.assign(defaultProps,props||{})}(),Initial.parameters={css:"ext_authentication"};const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <DownloadRecoveryKit {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...Initial.parameters?.docs?.source}}}}}]);