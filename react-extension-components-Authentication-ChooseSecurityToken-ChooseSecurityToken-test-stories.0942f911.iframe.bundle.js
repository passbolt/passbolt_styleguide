/*! For license information please see react-extension-components-Authentication-ChooseSecurityToken-ChooseSecurityToken-test-stories.0942f911.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[7283],{"./src/react-extension/components/Authentication/ChooseSecurityToken/ChooseSecurityToken.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ChooseSecurityToken_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),react_color_es=__webpack_require__("./node_modules/react-color/es/index.js"),SecretComplexity=__webpack_require__("./src/shared/lib/Secret/SecretComplexity.js"),Tooltip=__webpack_require__("./src/react-extension/components/Common/Tooltip/Tooltip.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),assertions=__webpack_require__("./src/shared/utils/assertions.js");class ChooseSecurityToken extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindEventHandlers(),this.createReferences()}componentDidMount(){this.handleRandomize()}get defaultState(){return{background:"",code:"",actions:{processing:!1},hasBeenValidated:!1,errors:{emptyCode:!1,lengthCode:!1,invalidRegex:!1}}}get defaultColors(){return["#f44336","#9c27b0","#3f51b5","#03a9f4","#009688","#8bc34a","#ffeb3b","#ff9800","#795548","#607d8b","#000000","#f6f6f6"]}get textColor(){const c=this.state.background.substr(1).match(/(\S{2})/g);return(299*parseInt(c[0],16)+587*parseInt(c[1],16)+114*parseInt(c[2],16))/1e3>125?"#000000":"#ffffff"}get securityTokenStyle(){return this.state.background?{backgroundColor:this.state.background,color:this.textColor}:void 0}get areActionsAllowed(){return!this.state.actions.processing}get isValid(){return Object.values(this.state.errors).every((value=>!value))}get isProcessing(){return this.state.actions.processing}bindEventHandlers(){this.handleSubmit=this.handleSubmit.bind(this),this.handleSelectColor=this.handleSelectColor.bind(this),this.handleRandomize=this.handleRandomize.bind(this),this.handleChangeCode=this.handleChangeCode.bind(this)}createReferences(){this.tokenCodeInputRef=react.createRef()}async handleSubmit(event){event.preventDefault(),await this.validate(),this.isValid&&(await this.toggleProcessing(),await this.save())}async handleSelectColor(color){this.areActionsAllowed&&(await this.selectColor(color),this.state.hasBeenValidated&&await this.validate())}handleRandomize(){this.randomizeCode(),this.randomizeColor()}async handleChangeCode(event){const code=event.target.value;await this.selectCode(code),this.state.hasBeenValidated&&await this.validate()}async save(){const securityTokenDto={color:this.state.background,textcolor:this.textColor,code:this.state.code};await this.props.onComplete(securityTokenDto)}async selectColor(color){color.hex!==this.state.background&&await this.setState({background:color.hex})}async selectCode(code){await this.setState({code})}async randomizeCode(){const code=SecretComplexity.A.generate(3,["uppercase"]);await this.selectCode(code),this.state.hasBeenValidated&&await this.validate()}async randomizeColor(){let color;do{const number=parseInt(SecretComplexity.A.generate(3,["digit"]))%this.defaultColors.length;color={hex:this.defaultColors[number]}}while(color.hex===this.state.background);await this.selectColor(color)}async validate(){const{code}=this.state,emptyCode=""===code.trim();if(emptyCode)return void await this.setState({hasBeenValidated:!0,errors:{emptyCode}});const lengthCode=3!==code.trim().length;if(lengthCode)return void await this.setState({hasBeenValidated:!0,errors:{lengthCode}});const invalidRegex=!(0,assertions.sF)(code.trim());invalidRegex?await this.setState({hasBeenValidated:!0,errors:{invalidRegex}}):await this.setState({hasBeenValidated:!0,errors:{}})}async toggleProcessing(){await this.setState({actions:{processing:!this.state.actions.processing}})}get hasErrors(){return this.state.errors&&(this.state.errors.emptyCode||this.state.errors.lengthCode||this.state.errors.invalidRegex)}render(){const processingClassName=this.isProcessing?"processing":"";return react.createElement("div",{className:"choose-security-token"},react.createElement("h1",null,react.createElement(es.x6,null,"Pick a color and enter three characters.")),react.createElement("form",{onSubmit:this.handleSubmit},react.createElement("div",{className:"input-security-token input required "+(this.hasErrors?"error":"")},react.createElement("div",{className:"label-required-inline"},react.createElement("label",{htmlFor:"security-token-text"},react.createElement(es.x6,null,"Security token")),react.createElement(Tooltip.A,{message:this.props.t("Only alphanumeric, dash and underscore characters are accepted.")},react.createElement(Icon.A,{name:"info-circle"}))),react.createElement("input",{id:"security-token-text",ref:this.tokenCodeInputRef,type:"text",className:"input text required","aria-required":!0,name:"text",maxLength:"3",style:this.securityTokenStyle,value:this.state.code,onChange:this.handleChangeCode,disabled:!this.areActionsAllowed}),react.createElement("input",{type:"hidden",id:"security-token-background-color",name:"security-token-background-color"}),react.createElement("input",{type:"hidden",id:"security-token-text-color",name:"security-token-text-color"}),react.createElement(react_color_es.z0,{color:this.state.background,onChange:this.handleSelectColor,width:240,circleSize:24,circleSpacing:16,colors:this.defaultColors}),react.createElement("div",{className:"randomize-button-wrapper"},react.createElement("button",{type:"button",className:"randomize-button link",onClick:this.handleRandomize},react.createElement(es.x6,null,"Randomize")))),this.state.hasBeenValidated&&react.createElement("div",{className:"input text"},this.state.errors.emptyCode&&react.createElement("div",{className:"empty-code error-message"},react.createElement(es.x6,null,"The security token code should not be empty.")),this.state.errors.lengthCode&&react.createElement("div",{className:"not-good-length-code error-message"},react.createElement(es.x6,null,"The security token code should be 3 characters long.")),this.state.errors.invalidRegex&&react.createElement("div",{className:"not-good-regex-code error-message"},react.createElement(es.x6,null,"The security token code should contains only alphanumeric, dash and underscore characters."))),react.createElement("p",null,react.createElement(es.x6,null,"This security token will be displayed when your passphrase is requested, so you can quickly verify the form is coming from passbolt."),"Â ",react.createElement(es.x6,null,"This will help protect you from ",react.createElement("a",{href:"https://en.wikipedia.org/wiki/Phishing",target:"_blank",rel:"noopener noreferrer"},"phishing attacks"),".")),react.createElement("div",{className:"form-actions"},react.createElement("button",{type:"submit",className:`button primary big full-width ${processingClassName}`,disabled:this.isProcessing},react.createElement(es.x6,null,"Next")))))}}ChooseSecurityToken.propTypes={onComplete:prop_types_default().func.isRequired,t:prop_types_default().func};const ChooseSecurityToken_ChooseSecurityToken=(0,es.CI)("common")(ChooseSecurityToken);ChooseSecurityToken.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Returns the default state",modifiers:["get"],params:[],returns:null,description:"Returns the default state"},{name:"defaultColors",docblock:"Returns the default set of colors",modifiers:["get"],params:[],returns:null,description:"Returns the default set of colors"},{name:"textColor",docblock:"Returns the default set of colors text",modifiers:["get"],params:[],returns:null,description:"Returns the default set of colors text"},{name:"securityTokenStyle",docblock:"Returns the security token CSS style\n@returns {undefined|{backgroundColor: *, color: (string)}}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Returns the security token CSS style"},{name:"areActionsAllowed",docblock:"Returns true if the user can perform actions on the component",modifiers:["get"],params:[],returns:null,description:"Returns true if the user can perform actions on the component"},{name:"isValid",docblock:"Returns true if the passphrase is valid",modifiers:["get"],params:[],returns:null,description:"Returns true if the passphrase is valid"},{name:"isProcessing",docblock:"Returns true if the component must be in a processing mode",modifiers:["get"],params:[],returns:null,description:"Returns true if the component must be in a processing mode"},{name:"bindEventHandlers",docblock:"Handle component event handlers",modifiers:[],params:[],returns:null,description:"Handle component event handlers"},{name:"createReferences",docblock:"Creates the references",modifiers:[],params:[],returns:null,description:"Creates the references"},{name:"handleSubmit",docblock:"Whenever the users submits his security token choice\n@param event Dom event",modifiers:["async"],params:[{name:"event",description:"Dom event",optional:!1}],returns:null,description:"Whenever the users submits his security token choice"},{name:"handleSelectColor",docblock:"Whenever a new color has been selected",modifiers:["async"],params:[{name:"color",optional:!1}],returns:null,description:"Whenever a new color has been selected"},{name:"handleRandomize",docblock:"Whenever the user wants to randomize the token code and color",modifiers:[],params:[],returns:null,description:"Whenever the user wants to randomize the token code and color"},{name:"handleChangeCode",docblock:"Whenever the user changes the token code\n@param event An input event",modifiers:["async"],params:[{name:"event",description:"An input event",optional:!1}],returns:null,description:"Whenever the user changes the token code"},{name:"save",docblock:"Saves the security token",modifiers:["async"],params:[],returns:null,description:"Saves the security token"},{name:"selectColor",docblock:"Select a token color\n@param color A color",modifiers:["async"],params:[{name:"color",description:"A color",optional:!1}],returns:null,description:"Select a token color"},{name:"selectCode",docblock:"Select a token code\n@param code A code",modifiers:["async"],params:[{name:"code",description:"A code",optional:!1}],returns:null,description:"Select a token code"},{name:"randomizeCode",docblock:"Randomize a token code",modifiers:["async"],params:[],returns:null,description:"Randomize a token code"},{name:"randomizeColor",docblock:"Randomize a color",modifiers:["async"],params:[],returns:null,description:"Randomize a color"},{name:"validate",docblock:"Validate the security token data",modifiers:["async"],params:[],returns:null,description:"Validate the security token data"},{name:"toggleProcessing",docblock:"Toggle the processing mode",modifiers:["async"],params:[],returns:null,description:"Toggle the processing mode"},{name:"hasErrors",docblock:"Check if there are errors\n@return {bool}",modifiers:["get"],params:[],returns:{type:{name:"bool"}},description:"Check if there are errors"}],displayName:"ChooseSecurityToken",props:{onComplete:{description:"",type:{name:"func"},required:!0},t:{description:"",type:{name:"func"},required:!1}}};const ChooseSecurityToken_test_stories={title:"Components/Authentication/ChooseSecurityToken",component:ChooseSecurityToken_ChooseSecurityToken},Initial=(args=>react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.MemoryRouter,{initialEntries:["/"]},react.createElement(react_router.Route,{component:routerProps=>react.createElement(ChooseSecurityToken_ChooseSecurityToken,{...args,...routerProps})})))))).bind({});Initial.parameters={css:"ext_authentication"};const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <ChooseSecurityToken {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...Initial.parameters?.docs?.source}}}},"./src/react-extension/components/Common/Tooltip/Tooltip.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class Tooltip extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"tooltip",tabIndex:"0"},this.props.children,react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:`tooltip-text ${this.props.direction}`},this.props.message))}}Tooltip.defaultProps={direction:"right"},Tooltip.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any,message:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any.isRequired,direction:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string};const __WEBPACK_DEFAULT_EXPORT__=Tooltip;Tooltip.__docgenInfo={description:"",methods:[],displayName:"Tooltip",props:{direction:{defaultValue:{value:"'right'",computed:!1},description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"any"},required:!1},message:{description:"",type:{name:"any"},required:!0}}}},"./src/shared/lib/Error/ExternalServiceError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class ExternalServiceError extends Error{constructor(message){super(message=message||"An error occurred when requesting the external service."),this.name="ExternalServiceError"}}const __WEBPACK_DEFAULT_EXPORT__=ExternalServiceError},"./src/shared/lib/Error/ExternalServiceUnavailableError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class ExternalServiceUnavailableError extends Error{constructor(message){super(message=message||"The external service is unavailable"),this.name="ExternalServiceUnavailableError"}}const __WEBPACK_DEFAULT_EXPORT__=ExternalServiceUnavailableError},"./src/shared/lib/Secret/SecretComplexity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>SecretComplexity});var SecretGeneratorComplexity=__webpack_require__("./src/shared/lib/SecretGenerator/SecretGeneratorComplexity.js"),sha=__webpack_require__("./node_modules/jssha/dist/sha.mjs"),ExternalServiceUnavailableError=__webpack_require__("./src/shared/lib/Error/ExternalServiceUnavailableError.js"),ExternalServiceError=__webpack_require__("./src/shared/lib/Error/ExternalServiceError.js");class PwnedPasswords{static async pwnedPasswords(password){if("string"!=typeof password){const err=new Error("Input password must be a string.");return Promise.reject(err)}const shaObj=new sha.A("SHA-1","TEXT");shaObj.update(password);const hashedPassword=shaObj.getHash("HEX"),hashedPasswordPrefix=hashedPassword.substr(0,5),hashedPasswordSuffix=hashedPassword.substr(5),url="https://api.pwnedpasswords.com/range/"+hashedPasswordPrefix;let response;try{response=await fetch(url)}catch(e){throw new ExternalServiceUnavailableError.A("pwnedpasswords API service is not available")}if(200!==response.status)throw new ExternalServiceError.A(`Failed to request pwnedpasswords API: ${response.status}`);return(await response.text()).split("\n").map((line=>line.split(":"))).filter((filtered=>filtered[0].toLowerCase()===hashedPasswordSuffix)).map((mapped=>Number(mapped[1]))).shift()||0}}const STRENGTH=[{id:"not_available",label:"n/a",strength:0},{id:"very-weak",label:"very weak",strength:1},{id:"weak",label:"weak",strength:60},{id:"fair",label:"fair",strength:80},{id:"strong",label:"strong",strength:112},{id:"very-strong",label:"very strong",strength:128}],MASKS={alpha:{size:26,data:"abcdefghijklmnopqrstuvwxyz",pattern:/[a-z]/},uppercase:{size:26,data:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",pattern:/[A-Z]/},digit:{size:10,data:"0123456789",pattern:/[0-9]/},special:{size:32,data:"!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~",pattern:/[!"#$%&\'\(\)*+,\-./:;<=>?@\[\\\]^_`{|}~]/}};class SecretComplexity{static randomRange(min,max){const arr=new Uint32Array(1);window.crypto.getRandomValues(arr);const random=arr[0]/4294967296;return Math.floor(random*(max-min+1))+min}static getStrength(txt){txt=txt||"";const entropy=SecretGeneratorComplexity.CH.entropyPassword(txt);return STRENGTH.reduce(((accumulator,item)=>accumulator?item.strength>accumulator.strength&&entropy>=item.strength?item:accumulator:item))}static generate(length,masks){let secret="",mask=[];length=length||18,masks=masks||["alpha","uppercase","digit","special"];for(const i in masks)mask=[...mask,...MASKS[masks[i]].data];let j=0;const expectedEntropy=SecretGeneratorComplexity.CH.calculEntropy(length,mask.length);do{secret="";for(let i=0;i<length;i++)secret+=mask[this.randomRange(0,mask.length-1)]}while(SecretGeneratorComplexity.CH.entropyPassword(secret)<expectedEntropy&&j++<10);return secret}static async ispwned(password){return await PwnedPasswords.pwnedPasswords(password)>0}}},"./src/shared/utils/assertions.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B9:()=>isValidEmail,Ew:()=>isValidUuid,sF:()=>isValidSecurityToken});var xregexp__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/xregexp/lib/index.js"),xregexp__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(xregexp__WEBPACK_IMPORTED_MODULE_0__);const UUID_REGEXP=/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[0-5][a-fA-F0-9]{3}-[089aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$/,SECURITY_TOKEN__REGEXP=/^[a-zA-Z0-9-_]{3}$/,isValidEmail=data=>new(xregexp__WEBPACK_IMPORTED_MODULE_0___default())("^[\\p{L}0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\p{L}0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[_\\p{L}0-9][-_\\p{L}0-9]*\\.)*(?:[\\p{L}0-9][-\\p{L}0-9]{0,62})\\.(?:(?:[a-z]{2}\\.)?[a-z]{2,})$").test(data),isValidUuid=data=>new(xregexp__WEBPACK_IMPORTED_MODULE_0___default())(UUID_REGEXP).test(data),isValidSecurityToken=data=>new(xregexp__WEBPACK_IMPORTED_MODULE_0___default())(SECURITY_TOKEN__REGEXP).test(data)}}]);