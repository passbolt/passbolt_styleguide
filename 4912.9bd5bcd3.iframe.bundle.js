/*! For license information please see 4912.9bd5bcd3.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[4912],{"./src/img/svg/key.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgKey(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:17,height:16,fill:"none",viewBox:"0 0 17 16"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"var(--icon-stroke-width, 1.5)",d:"M4.682 14.87a3.412 3.412 0 1 0 0-6.823 3.412 3.412 0 0 0 0 6.824M14.77 1.37 7.093 9.047M13.496 5.761l1.969-1.958"})))}},"./src/img/svg/totp.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgTotp(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:20,fill:"none",viewBox:"0 0 16 20"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"var(--icon-stroke-width, 1.5)",d:"M8 19A6.291 6.291 0 1 0 8 6.418 6.291 6.291 0 0 0 8 19"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"var(--icon-stroke-width, 1.5)",d:"M8 8.93v3.78l2.524 1.255M4.005 7.781V5.007a4.007 4.007 0 0 1 8.014 0V7.78"})))}},"./src/react-extension/components/Administration/DisplayContentTypesAllowedContentTypesAdministration/DisplayContentTypesAllowedContentTypesAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayContentTypesAllowedContentTypesAdministration_DisplayContentTypesAllowedContentTypesAdministration});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),metadataSettingsServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),entityV2=__webpack_require__("./src/shared/models/entity/abstract/entityV2.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),metadata_metadataKeysCollection=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysCollection.js"),metadataTypesSettingsEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataTypesSettingsEntity.js"),resourceTypeSchemasDefinition=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypeSchemasDefinition.js"),resourceTypesCollection=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypesCollection.js");const partialCheckboxesMapping={passwordV4:[resourceTypeSchemasDefinition._w,resourceTypeSchemasDefinition.Bo],totpV4:[resourceTypeSchemasDefinition.KY],passwordV5:[resourceTypeSchemasDefinition.gG,resourceTypeSchemasDefinition.Eh],totpV5:[resourceTypeSchemasDefinition.uQ]},fullResourceTypesMapping={passwordV4:[resourceTypeSchemasDefinition._w,resourceTypeSchemasDefinition.Bo,resourceTypeSchemasDefinition.fl],totpV4:[resourceTypeSchemasDefinition.KY,resourceTypeSchemasDefinition.fl],passwordV5:[resourceTypeSchemasDefinition.gG,resourceTypeSchemasDefinition.Eh,resourceTypeSchemasDefinition.a5],totpV5:[resourceTypeSchemasDefinition.uQ,resourceTypeSchemasDefinition.a5]};class ResourceTypesFormEntity extends entityV2.A{constructor(resourceTypeFormDto,options){super(resourceTypeFormDto,options),this._props.resource_types&&(this._resource_types=new resourceTypesCollection.A(this._props.resource_types))}static getSchema(){return{type:"object",required:["password_v4","password_v5","totp_v4","totp_v5","password_v4_count","password_v5_count","totp_v4_count","totp_v5_count","resource_types","has_v4_resource_types","has_v5_resource_types"],properties:{password_v4:{type:"boolean"},password_v5:{type:"boolean"},totp_v4:{type:"boolean"},totp_v5:{type:"boolean"},password_v4_count:{type:"integer"},password_v5_count:{type:"integer"},totp_v4_count:{type:"integer"},totp_v5_count:{type:"integer"},has_v4_resource_types:{type:"boolean"},has_v5_resource_types:{type:"boolean"},resource_types:resourceTypesCollection.A.getSchema()}}}static createFormResourcesTypesCollection(resource_types){if(!(resource_types instanceof resourceTypesCollection.A))throw new TypeError("The parameter 'resource_types' is not a valid 'ResourceTypesCollection' type.");const availableResourceTypesDto=resource_types.items.filter((rt=>!rt.isDeleted())),availableResourceTypes=new resourceTypesCollection.A(availableResourceTypesDto),password_v4=this._areAllResourceTypesAvailable(partialCheckboxesMapping.passwordV4,availableResourceTypes),password_v5=this._areAllResourceTypesAvailable(partialCheckboxesMapping.passwordV5,availableResourceTypes),totp_v4=this._areAllResourceTypesAvailable(partialCheckboxesMapping.totpV4,availableResourceTypes),totp_v5=this._areAllResourceTypesAvailable(partialCheckboxesMapping.totpV5,availableResourceTypes),password_v4_count=this._getResourcesCountForResourceTypeFamily(fullResourceTypesMapping.passwordV4,resource_types),password_v5_count=this._getResourcesCountForResourceTypeFamily(fullResourceTypesMapping.passwordV5,resource_types),totp_v4_count=this._getResourcesCountForResourceTypeFamily(fullResourceTypesMapping.totpV4,resource_types),totp_v5_count=this._getResourcesCountForResourceTypeFamily(fullResourceTypesMapping.totpV5,resource_types),has_v4_resource_types=resource_types.hasSomeOfVersion("v4"),has_v5_resource_types=resource_types.hasSomeOfVersion("v5");return new ResourceTypesFormEntity({password_v4,password_v5,totp_v4,totp_v5,password_v4_count,password_v5_count,totp_v4_count,totp_v5_count,has_v4_resource_types,has_v5_resource_types,resource_types})}static _getResourcesCountForResourceTypeFamily(requiredResourceSlugs,resourceTypesCollection){let count=0;for(let i=0;i<requiredResourceSlugs.length;i++)count+=resourceTypesCollection.getFirstBySlug(requiredResourceSlugs[i])?.resourcesCount||0;return count}static _areAllResourceTypesAvailable(requiredResourceTypes,availableResourceTypesCollection){return requiredResourceTypes.every((slug=>availableResourceTypesCollection.hasOneWithSlug(slug)))}validateBuildRules(){let error=null;if(!this._props.password_v4&&this._props.password_v4_count>0&&(error=error||new entityValidationError.A,error.addError("password_v4","has_content","One (or more) resource type v4 having a password is deleted but its resources_count is not 0.")),!this._props.totp_v4&&this._props.totp_v4_count>0&&(error=error||new entityValidationError.A,error.addError("totp_v4","has_content","One (or more) resource type v4 having a totp is deleted but its resources_count is not 0.")),!this._props.password_v5&&this._props.password_v5_count>0&&(error=error||new entityValidationError.A,error.addError("password_v5","has_content","One (or more) resource type v5 having a password is deleted but its resources_count is not 0.")),!this._props.totp_v5&&this._props.totp_v5_count>0&&(error=error||new entityValidationError.A,error.addError("totp_v5","has_content","One (or more) resource type v5 having a totp is deleted but its resources_count is not 0.")),!(this._props.password_v4||this._props.totp_v4||this._props.password_v5||this._props.totp_v5)){const message="At least one content type should be allowed",rule="minimum_requirement";error=error||new entityValidationError.A,error.addError("password_v4",rule,message),error.addError("totp_v4",rule,message),error.addError("password_v5",rule,message),error.addError("totp_v5",rule,message)}if(error)throw error}verifyHealth(metadataTypesSettings,metadataKeysCollection){if(void 0===metadataTypesSettings)return null;if(void 0===metadataKeysCollection)return null;if(!(metadataTypesSettings instanceof metadataTypesSettingsEntity.Ay))throw new TypeError("The parameter 'metadataTypesSettings' is not a valid 'MetadataTypesSettingsEntity' type.");if(!(metadataKeysCollection instanceof metadata_metadataKeysCollection.A))throw new TypeError("The parameter 'metadataKeysCollection' is not a valid 'MetadataKeysCollection' type.");let result=null;!metadataTypesSettings.allowCreationOfV4Resources||this._props.password_v4||this._props.totp_v4||(result=new entityValidationError.A,result.addError("password_v4","is_creation_alowed","Creation of resource type v4 is allowed but all resource types having passwords are deleted."),result.addError("totp_v4","is_creation_alowed","Creation of resource type v4 is allowed but all resource types having totps are deleted.")),!metadataTypesSettings.allowCreationOfV4Resources&&this._props.password_v4&&(result=result||new entityValidationError.A,result.addError("password_v4","is_creation_not_alowed","Creation of resource type v4 is not allowed.")),!metadataTypesSettings.allowCreationOfV4Resources&&this._props.totp_v4&&(result=result||new entityValidationError.A,result.addError("totp_v4","is_creation_not_alowed","Creation of resource type v4 is not allowed.")),!metadataTypesSettings.allowCreationOfV5Resources||this._props.password_v5||this._props.totp_v5||(result=result||new entityValidationError.A,result.addError("password_v5","is_creation_alowed","Creation of resource type v5 is allowed but all resource types having passwords are deleted."),result.addError("totp_v5","is_creation_alowed","Creation of resource type v5 is allowed but all resource types having totps are deleted.")),!metadataTypesSettings.allowCreationOfV5Resources&&this._props.password_v5&&(result=result||new entityValidationError.A,result.addError("password_v5","is_creation_not_alowed","Creation of resource type v5 is not allowed.")),!metadataTypesSettings.allowCreationOfV5Resources&&this._props.totp_v5&&(result=result||new entityValidationError.A,result.addError("totp_v5","is_creation_not_alowed","Creation of resource type v5 is not allowed."));const activeMetadataKeysCollection=metadataKeysCollection.items.filter((metadataKey=>!metadataKey.expired));return 0===activeMetadataKeysCollection.length&&this._props.password_v5&&(result=result||new entityValidationError.A,result.addError("password_v5","active_metadata_key","No active metadata key defined.")),0===activeMetadataKeysCollection.length&&this._props.totp_v5&&(result=result||new entityValidationError.A,result.addError("totp_v5","active_metadata_key","No active metadata key defined.")),result}toFormDto(){return{password_v4:this._props.password_v4,password_v5:this._props.password_v5,totp_v4:this._props.totp_v4,totp_v5:this._props.totp_v5,password_v4_count:this._props.password_v4_count,password_v5_count:this._props.password_v5_count,totp_v4_count:this._props.totp_v4_count,totp_v5_count:this._props.totp_v5_count,has_v4_resource_types:this._props.has_v4_resource_types,has_v5_resource_types:this._props.has_v5_resource_types,resource_types:this._resource_types}}toResourceTypesCollection(){const availableResourceTypes=this._resource_types.items.filter((rt=>this._props.password_v4&&rt.isV4()&&rt.hasPassword()&&!rt.hasTotp()||this._props.totp_v4&&rt.isV4()&&!rt.hasPassword()&&rt.hasTotp()||this._props.totp_v4&&this._props.password_v4&&rt.isV4()&&rt.hasPassword()&&rt.hasTotp()||this._props.password_v5&&rt.isV5()&&rt.hasPassword()&&!rt.hasTotp()||this._props.totp_v5&&rt.isV5()&&!rt.hasPassword()&&rt.hasTotp()||this._props.totp_v5&&this._props.password_v5&&rt.isV5()&&rt.hasPassword()&&rt.hasTotp())),deletedResourceTypes=this._resource_types.items.filter((rt=>!availableResourceTypes.some((art=>rt.id===art.id)))),resourceTypesToEnable=availableResourceTypes.filter((art=>art.isDeleted())),resourceTypesToDelete=deletedResourceTypes.filter((drt=>!drt.isDeleted())),now=luxon.c9.now().toISO();for(let i=0;i<resourceTypesToDelete.length;i++)resourceTypesToDelete[i].deleted=now;for(let i=0;i<resourceTypesToEnable.length;i++)resourceTypesToEnable[i].deleted=null;return new resourceTypesCollection.A([...resourceTypesToEnable,...resourceTypesToDelete])}}const resourceTypesFormEntity=ResourceTypesFormEntity;const resourceTypesServiceWorkerService=class ResourceTypesServiceWorkerService{constructor(port){this.port=port}async findAllByDeletedAndNonDeleted(){const resourceTypes=await this.port.request("passbolt.resource-type.find-all-by-deleted-and-non-deleted");return new resourceTypesCollection.A(resourceTypes)}async updateAllDeletedStatus(resourceTypesCollection){await this.port.request("passbolt.resource-types.update-all-deleted-status",resourceTypesCollection)}};var metadataKeysServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataKeysServiceWorkerService.js"),Tooltip=__webpack_require__("./src/react-extension/components/Common/Tooltip/Tooltip.js"),portals=__webpack_require__("./src/shared/utils/portals.js"),info=__webpack_require__("./src/img/svg/info.svg"),key=__webpack_require__("./src/img/svg/key.svg"),totp=__webpack_require__("./src/img/svg/totp.svg");class DisplayContentTypesAllowedContentTypesAdministration extends react.Component{originalSettings=null;formSettings=null;metadataTypesSettings=void 0;metadataKeys=void 0;constructor(props){super(props),this.resourceTypesServiceWorkerService=props.resourceTypesServiceWorkerService??new resourceTypesServiceWorkerService(props.context.port),this.metadataSettingsServiceWorkerService=props.metadataSettingsServiceWorkerService??new metadataSettingsServiceWorkerService.Ay(props.context.port),this.metadataKeysServiceWorkerService=props.metadataKeysServiceWorkerService??new metadataKeysServiceWorkerService.Ay(props.context.port),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isProcessing:!0,hasAlreadyBeenValidated:!1,settings:{password_v4:!1,password_v5:!1,totp_v4:!1,totp_v5:!1,password_v4_count:0,password_v5_count:0,totp_v4_count:0,totp_v5_count:0,has_password_v4:!1,has_totp_v4:!1,has_password_v5:!1,has_totp_v5:!1,has_v4_resource_types:!1,has_v5_resource_types:!1}}}bindCallbacks(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.save=this.save.bind(this)}async componentDidMount(){const resourceTypes=await this.resourceTypesServiceWorkerService.findAllByDeletedAndNonDeleted();this.metadataTypesSettings=await this.metadataSettingsServiceWorkerService.findTypesSettings(),this.metadataKeys=await this.metadataKeysServiceWorkerService.findAll(),this.originalSettings=resourceTypesFormEntity.createFormResourcesTypesCollection(resourceTypes),this.formSettings=new resourceTypesFormEntity(this.originalSettings.toFormDto(),{validate:!1}),this.setState({settings:this.formSettings.toFormDto(),isProcessing:!1})}validateForm=(0,memoize_one_esm.A)((formSettingsDto=>this.formSettings?.validate()));verifyDataHealth=(0,memoize_one_esm.A)(((formSettingsDto,metadataTypeSettings,metadataKeys)=>this.formSettings?.verifyHealth(metadataTypeSettings,metadataKeys)));hasSettingsChanges=(0,memoize_one_esm.A)(((originalSettings,formSettings,formSettingsDto)=>this.originalSettings?.hasDiffProps(this.formSettings)));handleInputChange(event){if(this.hasAllInputDisabled())return;const{type,checked,value,name}=event.target,parsedValue="checkbox"===type?checked:value;this.setFormPropertyValue(name,parsedValue)}setFormPropertyValue(name,parsedValue){this.formSettings.set(name,parsedValue,{validate:!1}),this.setState({settings:this.formSettings.toFormDto()})}hasAllInputDisabled(){return this.state.isProcessing}handleFormSubmit(event){event.preventDefault(),this.save()}isInputDisabled(resourceCount,isCheckboxChecked){return this.hasAllInputDisabled()||resourceCount>0&&isCheckboxChecked}async save(){if(this.state.isProcessing)return;const validationError=this.validateForm(this.state.settings);if(validationError?.hasErrors())this.setState({hasAlreadyBeenValidated:!0});else{this.setState({isProcessing:!0});try{const resourceTypesToUpdate=this.formSettings.toResourceTypesCollection();await this.resourceTypesServiceWorkerService.updateAllDeletedStatus(resourceTypesToUpdate);const resourceTypes=await this.resourceTypesServiceWorkerService.findAllByDeletedAndNonDeleted();this.originalSettings=resourceTypesFormEntity.createFormResourcesTypesCollection(resourceTypes),this.formSettings=new resourceTypesFormEntity(this.originalSettings.toFormDto()),await this.props.actionFeedbackContext.displaySuccess(this.props.t("The allowed content types were updated."))}catch(error){console.error(error),this.props.dialogContext.open(NotifyError.A,{error})}this.setState({hasAlreadyBeenValidated:!0,isProcessing:!1,settings:this.formSettings.toFormDto()})}}addTooltipOnDisabledElement(content,isDisabled){return isDisabled?react.createElement(Tooltip.A,{message:"You cannot disable a content type that is in use.",direction:"right"},content):react.createElement(react.Fragment,null,content)}render(){const errors=this.state.hasAlreadyBeenValidated?this.validateForm(this.state.settings):null,warnings=this.verifyDataHealth(this.state.settings,this.metadataTypesSettings,this.metadataKeys),hasSettingsChanges=this.hasSettingsChanges(this.originalSettings,this.formSettings,this.state.settings);return react.createElement("div",{className:"row"},react.createElement("div",{id:"allow-content-types",className:"main-column"},react.createElement("div",{className:"main-content"},react.createElement("form",{onSubmit:this.handleFormSubmit,"data-testid":"submit-form"},react.createElement("h3",{className:"title"},react.createElement("label",null,react.createElement(es.x6,null,"Allow content types"))),this.state.settings.has_v5_resource_types&&react.createElement(react.Fragment,null,react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Encrypted metadata")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"Select which content type with encrypted metadata is available for your whole organisation.")),react.createElement("div",{className:"checkboxlist"},react.createElement("span",{className:`input checkbox form-element ${errors?.hasError("password_v5")&&"error"} ${!errors?.hasError("password_v5")&&warnings?.hasError("password_v5")&&"warning"}`},react.createElement("input",{type:"checkbox",id:"passwordV5Input",className:"checkbox",name:"password_v5",onChange:this.handleInputChange,checked:this.state.settings.password_v5,disabled:this.isInputDisabled(this.state.settings.password_v5_count,this.state.settings.password_v5)}),react.createElement("label",{htmlFor:"passwordV5Input"},this.addTooltipOnDisabledElement(react.createElement("div",{className:"allow-content-type-item"},react.createElement(key.A,null),react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Password")),react.createElement("span",{className:"info"},this.props.t("({{count}} resources)",{count:this.state.settings.password_v5_count}))),this.isInputDisabled(this.state.settings.password_v5_count,this.state.settings.password_v5)),errors?.hasError("password_v5","has_content")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"One (or more) content type v5 having a password is deleted but its resources count is not 0.")),errors?.hasError("password_v5","minimum_requirement")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"At least one content type should be allowed")),!errors?.hasError("password_v5")&&react.createElement(react.Fragment,null,warnings?.hasError("password_v5","is_creation_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v5 is allowed but all content types having passwords are deleted.")),warnings?.hasError("password_v5","active_metadata_key")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"No active metadata key defined.")),warnings?.hasError("password_v5","is_creation_not_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v5 is not allowed."))))),react.createElement("span",{className:`input checkbox form-element ${errors?.hasError("totp_v5")&&"error"} ${!errors?.hasError("totp_v5")&&warnings?.hasError("totp_v5")&&"warning"}`},react.createElement("input",{type:"checkbox",id:"totpV5Input",className:"checkbox",name:"totp_v5",onChange:this.handleInputChange,checked:this.state.settings.totp_v5,disabled:this.isInputDisabled(this.state.settings.totp_v5_count,this.state.settings.totp_v5)}),react.createElement("label",{htmlFor:"totpV5Input"},this.addTooltipOnDisabledElement(react.createElement("div",{className:"allow-content-type-item"},react.createElement(totp.A,null),react.createElement("span",{className:"name"},react.createElement(es.x6,null,"TOTP")),react.createElement("span",{className:"info"},this.props.t("({{count}} resources)",{count:this.state.settings.totp_v5_count}))),this.isInputDisabled(this.state.settings.totp_v5_count,this.state.settings.totp_v5)),errors?.hasError("totp_v5","has_content")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"One (or more) content type v5 having a totp is deleted but its resources count is not 0.")),errors?.hasError("totp_v5","minimum_requirement")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"At least one content type should be allowed")),!errors?.hasError("totp_v5")&&react.createElement(react.Fragment,null,warnings?.hasError("totp_v5","is_creation_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v5 is allowed but all content types having totp are deleted.")),warnings?.hasError("totp_v5","active_metadata_key")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"No active metadata key defined.")),warnings?.hasError("totp_v5","is_creation_not_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v5 is not allowed."))))))),this.state.settings.has_v4_resource_types&&react.createElement(react.Fragment,null,react.createElement("h4",{className:`${!this.state.settings.has_password_v5&&"no-border"}`},react.createElement(es.x6,null,"Legacy cleartext metadata")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"Select which content type with cleartext metadata is available for your whole organisation.")),react.createElement("div",{className:"checkboxlist"},react.createElement("span",{className:`input checkbox form-element ${errors?.hasError("password_v4")&&"error"} ${!errors?.hasError("password_v4")&&warnings?.hasError("password_v4")&&"warning"}`},react.createElement("input",{type:"checkbox",id:"passwordV4Input",className:"checkbox",name:"password_v4",onChange:this.handleInputChange,checked:this.state.settings.password_v4,disabled:this.isInputDisabled(this.state.settings.password_v4_count,this.state.settings.password_v4)}),react.createElement("label",{htmlFor:"passwordV4Input"},this.addTooltipOnDisabledElement(react.createElement("div",{className:"allow-content-type-item"},react.createElement(key.A,null),react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Password")),react.createElement("span",{className:"info"},this.props.t("({{count}} resources)",{count:this.state.settings.password_v4_count}))),this.isInputDisabled(this.state.settings.password_v4_count,this.state.settings.password_v4)),errors?.hasError("password_v4","has_content")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"One (or more) content type v4 having a password is deleted but its resources count is not 0.")),errors?.hasError("password_v4","minimum_requirement")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"At least one content type should be allowed")),!errors?.hasError("password_v4")&&react.createElement(react.Fragment,null,warnings?.hasError("password_v4","is_creation_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v4 is allowed but all content types having passwords are deleted.")),warnings?.hasError("password_v4","is_creation_not_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v4 is not allowed."))))),react.createElement("span",{className:`input checkbox form-element ${errors?.hasError("totp_v4")&&"error"} ${!errors?.hasError("totp_v4")&&warnings?.hasError("totp_v4")&&"warning"}`},react.createElement("input",{type:"checkbox",id:"totpV4Input",className:"checkbox",name:"totp_v4",onChange:this.handleInputChange,checked:this.state.settings.totp_v4,disabled:this.isInputDisabled(this.state.settings.totp_v4_count,this.state.settings.totp_v4)}),react.createElement("label",{htmlFor:"totpV4Input"},this.addTooltipOnDisabledElement(react.createElement("div",{className:"allow-content-type-item"},react.createElement(totp.A,null),react.createElement("span",{className:"name"},react.createElement(es.x6,null,"TOTP")),react.createElement("span",{className:"info"},this.props.t("({{count}} resources)",{count:this.state.settings.totp_v4_count}))),this.isInputDisabled(this.state.settings.totp_v4_count,this.state.settings.totp_v4)),errors?.hasError("totp_v4","has_content")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"One (or more) content type v4 having a totp is deleted but its resources count is not 0.")),errors?.hasError("totp_v4","minimum_requirement")&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,"At least one content type should be allowed")),!errors?.hasError("totp_v4")&&react.createElement(react.Fragment,null,warnings?.hasError("totp_v4","is_creation_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v4 is allowed but all content types having totp are deleted.")),warnings?.hasError("totp_v4","is_creation_not_alowed")&&react.createElement("div",{className:"warning-message"},react.createElement(es.x6,null,"Creation of content type v4 is not allowed."))))))))),hasSettingsChanges&&react.createElement("div",{className:"warning message"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,react.createElement("b",null,"Warning:")," Don't forget to save your settings to apply your modification."))))),react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{type:"button",className:"button primary",disabled:this.state.isProcessing,onClick:this.handleFormSubmit},react.createElement("span",null,react.createElement(es.x6,null,"Save")))),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need help?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about the content type support and migration, checkout the dedicated page on the official website.")),react.createElement("a",{className:"button",target:"_blank",rel:"noopener noreferrer",href:"https://passbolt.com/docs"},react.createElement(info.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayContentTypesAllowedContentTypesAdministration.propTypes={context:prop_types_default().object,dialogContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,createPortal:prop_types_default().func,resourceTypesServiceWorkerService:prop_types_default().object,metadataKeysServiceWorkerService:prop_types_default().object,metadataSettingsServiceWorkerService:prop_types_default().object,t:prop_types_default().func};const DisplayContentTypesAllowedContentTypesAdministration_DisplayContentTypesAllowedContentTypesAdministration=(0,AppContext.L)((0,ActionFeedbackContext.ot)((0,DialogContext.z9)((0,es.CI)("common")(DisplayContentTypesAllowedContentTypesAdministration))));DisplayContentTypesAllowedContentTypesAdministration.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"setFormPropertyValue",docblock:"Set a form property value. Trigger the validation if the form has already been submitted once.\n@param name\n@param parsedValue",modifiers:[],params:[{name:"name",optional:!1},{name:"parsedValue",optional:!1}],returns:null,description:"Set a form property value. Trigger the validation if the form has already been submitted once."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleFormSubmit",docblock:"Handle form submission that can be trigger when hitting `enter`\n@param {Event} event The html event triggering the form submit.",modifiers:[],params:[{name:"event",description:"The html event triggering the form submit.",type:{name:"Event"},optional:!1}],returns:null,description:"Handle form submission that can be trigger when hitting `enter`"},{name:"isInputDisabled",docblock:"Returns true if the checkbox is disabled.\nIt is disabled if:\n - the form is processing\n - or there are resources and the box is unchecked (to allow admins to check it back)\n@param {integer} resourceCount\n@param {boolean} checkboxState\n@returns {boolean}",modifiers:[],params:[{name:"resourceCount",type:{name:"integer"},optional:!1},{name:"isCheckboxChecked",optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the checkbox is disabled.\nIt is disabled if:\n - the form is processing\n - or there are resources and the box is unchecked (to allow admins to check it back)"},{name:"save",docblock:"Save the settings\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the settings"},{name:"addTooltipOnDisabledElement",docblock:"Display the content surrounded or not with a toolti.\n@param {ReactDOM} content content to display\n@param {boolean} isDisabled if disabled the tooltip is added\n@returns {ReactDOM}",modifiers:[],params:[{name:"content",description:"content to display",type:{name:"ReactDOM"},optional:!1},{name:"isDisabled",description:"if disabled the tooltip is added",type:{name:"boolean"},optional:!1}],returns:{type:{name:"ReactDOM"}},description:"Display the content surrounded or not with a toolti."}],displayName:"DisplayContentTypesAllowedContentTypesAdministration",props:{context:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},createPortal:{description:"",type:{name:"func"},required:!1},resourceTypesServiceWorkerService:{description:"",type:{name:"object"},required:!1},metadataKeysServiceWorkerService:{description:"",type:{name:"object"},required:!1},metadataSettingsServiceWorkerService:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);