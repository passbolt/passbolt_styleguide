/*! For license information please see react-extension-components-Administration-DisplayInternationalizationAdministration-DisplayInternationalizationAdministration-test-stories.74313898.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[9253],{"./src/react-extension/components/Administration/DisplayInternationalizationAdministration/DisplayInternationalizationAdministration.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DisplayInternationalizationAdministration_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),AdministrationInternationalizationContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationInternationalizationContext/AdministrationInternationalizationContext.js");class DisplayAdministrationInternationalisationActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}async handleSaveClick(){try{await this.props.adminInternationalizationContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}finally{this.props.adminInternationalizationContext.setProcessing(!1)}}isSaveEnabled(){return!this.props.adminInternationalizationContext.isProcessing()&&this.props.adminInternationalizationContext.hasLocaleChanges()}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this)}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The internationalization settings were updated."))}async handleSaveError(error){"UserAbortsOperationError"!==error.name&&(console.error(error),await this.handleError(error))}async handleError(error){await this.props.actionFeedbackContext.displayError(error.message)}render(){return react.createElement("div",{className:"col2_3 actions-wrapper"},react.createElement("div",{className:"actions"},react.createElement("ul",null,react.createElement("li",null,react.createElement("button",{type:"button",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement(Icon.A,{name:"save"}),react.createElement("span",null,react.createElement(es.x6,null,"Save settings")))))))}}DisplayAdministrationInternationalisationActions.propTypes={context:prop_types_default().object,adminInternationalizationContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationInternationalisationActions_DisplayAdministrationInternationalisationActions=(0,AdministrationInternationalizationContext.A3)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationInternationalisationActions)));DisplayAdministrationInternationalisationActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."},{name:"handleError",docblock:"handle error to display the error dialog\n@param error",modifiers:["async"],params:[{name:"error",optional:!1}],returns:null,description:"handle error to display the error dialog"}],displayName:"DisplayAdministrationInternationalisationActions",props:{context:{description:"",type:{name:"object"},required:!1},adminInternationalizationContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class DisplayInternationalizationAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}async componentDidMount(){this.props.administrationWorkspaceContext.setDisplayAdministrationWorkspaceAction(DisplayAdministrationInternationalisationActions_DisplayAdministrationInternationalisationActions),this.props.adminInternationalizationContext.findLocale()}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminInternationalizationContext.clearContext()}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this)}handleInputChange(event){this.props.adminInternationalizationContext.setLocale(event.target.value)}get supportedLocales(){return this.props.context.siteSettings.supportedLocales?this.props.context.siteSettings.supportedLocales.map((supportedLocale=>({value:supportedLocale.locale,label:supportedLocale.label}))):[]}render(){const lang=this.props.adminInternationalizationContext.getLocale();return react.createElement("div",{className:"row"},react.createElement("div",{className:"internationalisation-settings col7 main-column"},react.createElement("h3",null,react.createElement(es.x6,null,"Internationalisation")),react.createElement("form",{className:"form"},react.createElement("div",{className:"select-wrapper input"},react.createElement("label",{htmlFor:"app-locale-input"},react.createElement(es.x6,null,"Language")),react.createElement(Select.A,{className:"medium",id:"locale-input",name:"locale",items:this.supportedLocales,value:lang,onChange:this.handleInputChange}),react.createElement("p",null,react.createElement(es.x6,null,"The default language of the organisation."))))),react.createElement("div",{className:"col4 last"},react.createElement("div",{className:"sidebar-help"},react.createElement("h3",null,react.createElement(es.x6,null,"Want to contribute?")),react.createElement("p",null,react.createElement(es.x6,null,"Your language is missing or you discovered an error in the translation, help us to improve passbolt.")),react.createElement("a",{className:"button",href:"https://help.passbolt.com/contribute/translation",target:"_blank",rel:"noopener noreferrer"},react.createElement(Icon.A,{name:"heart-o"}),react.createElement("span",null,react.createElement(es.x6,null,"Contribute"))))))}}DisplayInternationalizationAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminInternationalizationContext:prop_types_default().object,t:prop_types_default().func};const DisplayInternationalizationAdministration_DisplayInternationalizationAdministration=(0,AppContext.L)((0,AdministrationInternationalizationContext.A3)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayInternationalizationAdministration))));DisplayInternationalizationAdministration.__docgenInfo={description:"This component allows to display the internationalisation for the administration",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"supportedLocales",docblock:"Get the supported locales\n@returns {array}",modifiers:["get"],params:[],returns:{type:{name:"array"}},description:"Get the supported locales"}],displayName:"DisplayInternationalizationAdministration",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminInternationalizationContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var ApiAppContext_test_data=__webpack_require__("./src/react-extension/contexts/ApiAppContext.test.data.js");const DisplayInternationalizationAdministration_test_stories={title:"Components/Administration/DisplayInternationalizationAdministration",component:DisplayInternationalizationAdministration_DisplayInternationalizationAdministration},Template=args=>react.createElement(AdministrationInternationalizationContext.m$,args,react.createElement("div",{className:"panel middle"},react.createElement("div",{className:"grid grid-responsive-12"},react.createElement(DisplayInternationalizationAdministration_DisplayInternationalizationAdministration,args))));Template.propTypes={context:prop_types_default().object};const Initial=Template.bind({});Initial.args=function defaultProps(){return{context:(0,ApiAppContext_test_data.s)(),administrationWorkspaceContext:{setDisplayAdministrationWorkspaceAction:jest.fn(),resetDisplayAdministrationWorkspaceAction:jest.fn()},actionFeedbackContext:{displaySuccess:()=>jest.fn(),displayError:jest.fn()}}}();const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:'args => <AdminInternationalizationContextProvider {...args}>\n    <div className="panel middle">\n      <div className="grid grid-responsive-12">\n        <DisplayInternationalizationAdministration {...args} />\n      </div>\n    </div>\n  </AdminInternationalizationContextProvider>',...Initial.parameters?.docs?.source}}}}}]);