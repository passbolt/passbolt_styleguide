/*! For license information please see react-extension-components-Authentication-DisplayAlreadyLoggedInError-DisplayAlreadyLoggedInError-test-stories.7847d0bc.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[7135],{"./src/react-extension/components/Authentication/DisplayAlreadyLoggedInError/DisplayAlreadyLoggedInError.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AccountRecovery:()=>AccountRecovery,Recover:()=>Recover,Setup:()=>Setup,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DisplayAlreadyLoggedInError_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");const DisplayAlreadyLoggedInErrorVariations_SETUP="setup",DisplayAlreadyLoggedInErrorVariations_RECOVER="recover",DisplayAlreadyLoggedInErrorVariations_ACCOUNT_RECOVERY="account-recovery";class DisplayAlreadyLoggedInError extends react.Component{render(){return react.createElement("div",{className:"setup-error"},react.createElement("h1",null,react.createElement(es.x6,null,"Cannot perform the action while being logged in")),react.createElement("p",null,{[DisplayAlreadyLoggedInErrorVariations_SETUP]:react.createElement(es.x6,null,"It is not possible to perform a setup of a new account as you are still logged in. You need to log out first before continuing."),[DisplayAlreadyLoggedInErrorVariations_RECOVER]:react.createElement(es.x6,null,"It is not possible to perform the recovery of your account as you are still logged in. You need to log out first before continuing."),[DisplayAlreadyLoggedInErrorVariations_ACCOUNT_RECOVERY]:react.createElement(es.x6,null,"It is not possible to recover your private key of your account as you are still logged in. You need to log out first before continuing.")}[this.props.displayAs]),react.createElement("div",{className:"form-actions"},react.createElement("button",{onClick:this.props.onLogoutButtonClick.bind(this),className:"button primary big full-width",role:"button"},react.createElement(es.x6,null,"Sign out"))))}}DisplayAlreadyLoggedInError.propTypes={displayAs:prop_types_default().oneOf([DisplayAlreadyLoggedInErrorVariations_SETUP,DisplayAlreadyLoggedInErrorVariations_RECOVER,DisplayAlreadyLoggedInErrorVariations_ACCOUNT_RECOVERY]).isRequired,onLogoutButtonClick:prop_types_default().func.isRequired};const DisplayAlreadyLoggedInError_DisplayAlreadyLoggedInError=(0,es.CI)("common")(DisplayAlreadyLoggedInError);DisplayAlreadyLoggedInError.__docgenInfo={description:"",methods:[],displayName:"DisplayAlreadyLoggedInError",props:{displayAs:{description:"",type:{name:"enum",value:[{value:"'setup'",computed:!1},{value:"'recover'",computed:!1},{value:"'account-recovery'",computed:!1}]},required:!0},onLogoutButtonClick:{description:"",type:{name:"func"},required:!0}}};const DisplayAlreadyLoggedInError_test_stories={title:"Components/Authentication/DisplayAlreadyLoggedInError",component:DisplayAlreadyLoggedInError_DisplayAlreadyLoggedInError},Template=args=>react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.MemoryRouter,{initialEntries:["/"]},react.createElement(react_router.Route,{component:routerProps=>react.createElement(DisplayAlreadyLoggedInError_DisplayAlreadyLoggedInError,{...args,...routerProps})}))))),defaultParameters={css:"ext_authentication"},logoutCallback=()=>{console.log("Trigger log out")},Setup=Template.bind({});Setup.args={onLogoutButtonClick:logoutCallback,displayAs:DisplayAlreadyLoggedInErrorVariations_SETUP},Setup.parameters=defaultParameters;const Recover=Template.bind({});Recover.args={onLogoutButtonClick:logoutCallback,displayAs:DisplayAlreadyLoggedInErrorVariations_RECOVER},Recover.parameters=defaultParameters;const AccountRecovery=Template.bind({});AccountRecovery.args={onLogoutButtonClick:logoutCallback,displayAs:DisplayAlreadyLoggedInErrorVariations_ACCOUNT_RECOVERY},AccountRecovery.parameters=defaultParameters;const __namedExportsOrder=["Setup","Recover","AccountRecovery"];Setup.parameters={...Setup.parameters,docs:{...Setup.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <DisplayAlreadyLoggedInError {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...Setup.parameters?.docs?.source}}},Recover.parameters={...Recover.parameters,docs:{...Recover.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <DisplayAlreadyLoggedInError {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...Recover.parameters?.docs?.source}}},AccountRecovery.parameters={...AccountRecovery.parameters,docs:{...AccountRecovery.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <DisplayAlreadyLoggedInError {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...AccountRecovery.parameters?.docs?.source}}}}}]);