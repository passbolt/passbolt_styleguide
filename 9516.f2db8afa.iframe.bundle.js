/*! For license information please see 9516.f2db8afa.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[9516],{"./src/img/svg/account_recovery.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgAccountRecovery(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4 4 12.954 4 24s8.954 20 20 20M9.86 9.86l8.48 8.48M29.66 18.34l8.48-8.48M29.66 29.66l8.48 8.48M18.34 29.66l-8.48 8.48"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M24 32a8 8 0 1 0 0-16 8 8 0 0 0 0 16"})))}},"./src/img/svg/arrow_big_up_dash.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgArrowBigUpDash(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M6.75 14.25h4.5M6.75 11.25V9h-3L9 3.75 14.25 9h-3v2.25z"})))}},"./src/img/svg/arrow_left.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgArrowLeft(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M9 14.25 3.75 9 9 3.75M14.25 9H3.75"})))}},"./src/img/svg/email.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgEmail(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M15 3H3a1.5 1.5 0 0 0-1.5 1.5v9A1.5 1.5 0 0 0 3 15h12a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 15 3"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M16.5 5.25 9.773 9.525a1.46 1.46 0 0 1-1.546 0L1.5 5.25"})))}},"./src/img/svg/email_notifications.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgEmailNotifications(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M44 21v-9a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v24c0 2.2 1.8 4 4 4h25"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M44 14 26.06 25.4a3.88 3.88 0 0 1-4.12 0L4 14M40 28v8M40 44v.02"})))}},"./src/img/svg/email_server.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgEmailServer(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M44 34a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4V19c0-5 4-9 9-9h23c4.4 0 8 3.6 8 8z"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M30 18h6v4M13 10c5 0 9 4 9 9v15a4 4 0 0 1-4 4M12 20h2"})))}},"./src/img/svg/expiry.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgExpiry(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M20 4h8M24 28v-8M8 26a16 16 0 0 1 16-14 16.001 16.001 0 0 1 3.834 31.53A16 16 0 0 1 13.4 40L8 35.2"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M18 34H8v10"})))}},"./src/img/svg/file_key_2.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgFileKey2(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M8 44h28a4 4 0 0 0 4-4V14L30 4H12a4 4 0 0 0-4 4v12"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M28 4v8a4 4 0 0 0 4 4h8M8 36a4 4 0 1 0 0-8 4 4 0 0 0 0 8M20 20l-9 9M18 22l2 2"})))}},"./src/img/svg/international.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgInternational(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"m10 16 12 12M8 28l12-12 4-6M4 10h24M14 4h2M44 44 34 24 24 44M28 36h12"})))}},"./src/img/svg/ldap.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,_path3,_path4,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgLdap(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M18 40H8a4 4 0 0 1-4-4V10a4 4 0 0 1 4-4h7.8a4 4 0 0 1 3.38 1.8l1.62 2.4a4 4 0 0 0 3.34 1.8H40a4 4 0 0 1 4 4v2"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M24 20v8h8"})),_path3||(_path3=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"m24 28 3-3c1.8-1.8 4.4-3 7-3s5.2 1.2 7 3c.8.8 1.6 2 2 3M44 44v-8h-8"})),_path4||(_path4=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"m44 36-3 3c-1.8 1.8-4.2 3-7 3s-5.2-1.2-7-3c-.8-.8-1.6-2-2-3"})))}},"./src/img/svg/link.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgLink(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:19,height:18,fill:"none",viewBox:"0 0 19 18"},props),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,clipPath:"url(#link_svg__clip0_99_1008536)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M8.33 9.75a3.75 3.75 0 0 0 5.655.405l2.25-2.25a3.75 3.75 0 0 0-5.302-5.303l-1.29 1.283"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M11.33 8.25a3.75 3.75 0 0 0-5.655-.405l-2.25 2.25a3.75 3.75 0 0 0 5.303 5.302l1.282-1.282"}))))}},"./src/img/svg/mfa_policy.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgMfaPolicy(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M36 45a6 6 0 1 0 0-12 6 6 0 0 0 0 12M43.4 41.8l-1.8-.6M30.4 36.8l-1.8-.6M33.2 46.4l.6-1.8M38.2 33.4l.6-1.8M39.2 46.4l-.8-2M33.6 33.6l-.8-2M28.6 42.2l2-.8M41.4 36.6l2-.8M4 24C4 13 13 4 24 4a20 20 0 0 1 16 8"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M10 39c1-3 2-9 2-15 0-1.4.24-2.74.68-4M24 20a4 4 0 0 0-4 4c0 2.04-.2 5.02-.52 8M17.3 44c.42-1.32.9-2.64 1.14-4M28 26.24c0 .877 0 1.864-.012 2.922M4 32h.02M43.6 20c.141.697.246 2.967.25 5.539M18 13.6A12 12 0 0 1 36 24"})))}},"./src/img/svg/passphrase_policy.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgPassphrasePolicy(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M8.32 7.075h1.44a4.32 4.32 0 0 1 4.32 4.32 4.32 4.32 0 0 1 4.32-4.32h1.44M19.84 30.115H18.4a4.32 4.32 0 0 1-4.32-4.32 4.32 4.32 0 0 1-4.32 4.32H8.32M8.32 24.355H6.88A2.88 2.88 0 0 1 4 21.475v-5.76a2.88 2.88 0 0 1 2.88-2.88h1.44M19.84 12.835h23.107a2.88 2.88 0 0 1 2.88 2.88v5.76a2.88 2.88 0 0 1-2.88 2.88H19.84M14.08 11.395v14.4M36 44.878a6 6 0 1 0 0-12 6 6 0 0 0 0 12M43.4 41.677l-1.8-.6M30.4 36.677l-1.8-.6M33.2 46.278l.6-1.8M38.2 33.278l.6-1.8M39.2 46.277l-.8-2M33.6 33.478l-.8-2M28.6 42.077l2-.8M41.4 36.478l2-.8"})))}},"./src/img/svg/password_policy.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgPasswordPolicy(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M2.983 31.17v5.273c0 1.054.703 1.757 1.758 1.757h7.03v-5.272h5.272v-5.273h3.515l2.46-2.46a11.423 11.423 0 1 0-7.03-7.03z"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M28.466 13.595a.879.879 0 1 0 0-1.757.879.879 0 0 0 0 1.757M36 45a6 6 0 1 0 0-12 6 6 0 0 0 0 12M43.4 41.8l-1.8-.6M30.4 36.8l-1.8-.6M33.2 46.4l.6-1.8M38.2 33.4l.6-1.8M39.2 46.4l-.8-2M33.6 33.6l-.8-2M28.6 42.2l2-.8M41.4 36.6l2-.8"})))}},"./src/img/svg/rbac.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgRbac(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M19.76 19.76a6 6 0 1 0 8.48 8.48M21.46 10.16q1.265-.157 2.54-.16c14 0 20 14 20 14a26.3 26.3 0 0 1-3.34 5.36"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M13.22 13.22A27.05 27.05 0 0 0 4 24s6 14 20 14a19.5 19.5 0 0 0 10.78-3.22M4 4l40 40"})))}},"./src/img/svg/self_register.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgSelfRegister(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M26 8h6a4 4 0 0 1 4 4v28M4 40h6M26 40h18M20 24v.02M26 9.124v32.314a2 2 0 0 1-2.484 1.94L10 40V11.124a4 4 0 0 1 3.03-3.88l8-2A4 4 0 0 1 26 9.124"})))}},"./src/img/svg/sso.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgSso(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M30 6h8a4 4 0 0 1 4 4v28a4 4 0 0 1-4 4h-8M20 34l10-10-10-10M30 24H6"})))}},"./src/img/svg/subscription.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgSubscription(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none",viewBox:"0 0 48 48"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M42 28V12a4 4 0 0 0-4-4H10a4 4 0 0 0-4 4v28a4 4 0 0 0 4 4h16M32 4v8M16 4v8M6 20h36M32 40l4 4 8-8"})))}},"./node_modules/debounce-promise/dist/index.js":module=>{module.exports=function debounce(fn){var wait=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},lastCallAt=void 0,deferred=void 0,timer=void 0,pendingArgs=[];return function debounced(){var currentWait=function getWait(wait){return"function"==typeof wait?wait():wait}(wait),currentTime=(new Date).getTime(),isCold=!lastCallAt||currentTime-lastCallAt>currentWait;lastCallAt=currentTime;for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];if(isCold&&options.leading)return options.accumulate?Promise.resolve(fn.call(this,[args])).then((function(result){return result[0]})):Promise.resolve(fn.call.apply(fn,[this].concat(args)));if(deferred?clearTimeout(timer):deferred=function defer(){var deferred={};return deferred.promise=new Promise((function(resolve,reject){deferred.resolve=resolve,deferred.reject=reject})),deferred}(),pendingArgs.push(args),timer=setTimeout(flush.bind(this),currentWait),options.accumulate){var argsIndex=pendingArgs.length-1;return deferred.promise.then((function(results){return results[argsIndex]}))}return deferred.promise};function flush(){var thisDeferred=deferred;clearTimeout(timer),Promise.resolve(options.accumulate?fn.call(this,pendingArgs):fn.apply(this,pendingArgs[pendingArgs.length-1])).then(thisDeferred.resolve,thisDeferred.reject),pendingArgs=[],deferred=null}}},"./src/react-extension/components/Administration/AdministrationWorkspace.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Administration_AdministrationWorkspace});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),DisplayUserBadgeMenu=__webpack_require__("./src/react-extension/components/User/DisplayUserBadgeMenu/DisplayUserBadgeMenu.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),NavigationContext=__webpack_require__("./src/react-extension/contexts/NavigationContext.js"),caret_down=__webpack_require__("./src/img/svg/caret_down.svg"),caret_right=__webpack_require__("./src/img/svg/caret_right.svg");class DisplayAdministrationMenu extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isContentTypesOpened:!0,isPasswordConfigurationOpened:!0,isAuthenticationOpened:!0,isUserProvisionningOpened:!0,isEmailsOpened:!0}}canIUse(featureFlag){return Boolean(this.props.context.siteSettings?.canIUse(featureFlag))}get isMfaEnabled(){return this.canIUse("multiFactorAuthentication")}get isUserDirectoryEnabled(){return this.canIUse("directorySync")}get canIUseEE(){return this.canIUse("ee")}get canIUseLocale(){return this.canIUse("locale")}get canIUseAccountRecovery(){return this.canIUse("accountRecovery")}get canIUseSmtpSettings(){return this.canIUse("smtpSettings")}get canIUseSelfRegistrationSettings(){return this.canIUse("selfRegistration")}get canIUseSso(){return this.canIUse("sso")}get canIUseMfaPolicy(){return this.canIUse("mfaPolicies")}get canIUsePasswordPolicies(){return this.canIUse("passwordPoliciesUpdate")}get canIUseRbacs(){return this.canIUse("rbacs")}get canIUseUserPassphrasePolicies(){return this.canIUse("userPassphrasePolicies")}get canIUsePasswordExpiry(){return this.canIUse("passwordExpiry")}get canIUseHealthcheck(){return this.canIUse("healthcheckUi")}get canIUseMetadata(){return this.canIUse("metadata")}bindCallbacks(){this.handleHomeClick=this.handleHomeClick.bind(this),this.handleMfaClick=this.handleMfaClick.bind(this),this.handleUserDirectoryClick=this.handleUserDirectoryClick.bind(this),this.handleEmailNotificationsClick=this.handleEmailNotificationsClick.bind(this),this.handleSubscriptionClick=this.handleSubscriptionClick.bind(this),this.handleInternationalizationClick=this.handleInternationalizationClick.bind(this),this.handleAccountRecoveryClick=this.handleAccountRecoveryClick.bind(this),this.handleSmtpSettingsClick=this.handleSmtpSettingsClick.bind(this),this.handleSelfRegistrationClick=this.handleSelfRegistrationClick.bind(this),this.handleSsoClick=this.handleSsoClick.bind(this),this.handleMfaPolicyClick=this.handleMfaPolicyClick.bind(this),this.handleRbacsClick=this.handleRbacsClick.bind(this),this.handlePasswordPoliciesClick=this.handlePasswordPoliciesClick.bind(this),this.handleUserPassphrasePoliciesClick=this.handleUserPassphrasePoliciesClick.bind(this),this.handlePasswordExpirySettingsClick=this.handlePasswordExpirySettingsClick.bind(this),this.handleHealthcheckClick=this.handleHealthcheckClick.bind(this),this.handleContentTypesEncryptedMetadataClick=this.handleContentTypesEncryptedMetadataClick.bind(this),this.handleContentTypesMetadataKeyClick=this.handleContentTypesMetadataKeyClick.bind(this),this.handleMigrateMetadataClick=this.handleMigrateMetadataClick.bind(this),this.handleAllowedContentTypesClick=this.handleAllowedContentTypesClick.bind(this),this.handleSubmenuClick=this.handleSubmenuClick.bind(this)}handleSubmenuClick(subMenuItem){const newState={[subMenuItem]:!this.state[subMenuItem]};this.setState(newState)}handleHomeClick(){this.props.navigationContext.onGoToAdministrationRequested()}handleMfaClick(){this.props.navigationContext.onGoToAdministrationMfaRequested()}handleUserDirectoryClick(){this.props.navigationContext.onGoToAdministrationUsersDirectoryRequested()}handleEmailNotificationsClick(){this.props.navigationContext.onGoToAdministrationEmailNotificationsRequested()}handleSubscriptionClick(){this.props.navigationContext.onGoToAdministrationSubscriptionRequested()}handleInternationalizationClick(){this.props.navigationContext.onGoToAdministrationInternationalizationRequested()}handleAccountRecoveryClick(){this.props.navigationContext.onGoToAdministrationAccountRecoveryRequested()}handleSmtpSettingsClick(){this.props.navigationContext.onGoToAdministrationSmtpSettingsRequested()}handleSelfRegistrationClick(){this.props.navigationContext.onGoToAdministrationSelfRegistrationRequested()}handleSsoClick(){this.props.navigationContext.onGoToAdministrationSsoRequested()}handleRbacsClick(){this.props.navigationContext.onGoToAdministrationRbacsRequested()}handleMfaPolicyClick(){this.props.navigationContext.onGoToAdministrationMfaPolicyRequested()}handlePasswordPoliciesClick(){this.props.navigationContext.onGoToAdministrationPasswordPoliciesRequested()}handleUserPassphrasePoliciesClick(){this.props.navigationContext.onGoToAdministrationUserPassphrasePoliciesRequested()}handlePasswordExpirySettingsClick(){this.props.navigationContext.onGoToAdministrationPasswordExpirySettingsRequested()}handleHealthcheckClick(){this.props.navigationContext.onGoToAdministrationHealthcheckRequested()}handleContentTypesEncryptedMetadataClick(){this.props.navigationContext.onGoToAdministrationContentTypesEncryptedMetadataRequested()}handleContentTypesMetadataKeyClick(){this.props.navigationContext.onGoToAdministrationContentTypesMetadataKeyRequested()}handleMigrateMetadataClick(){this.props.navigationContext.onGoToAdministrationMigrateMetadataRequested()}handleAllowedContentTypesClick(){this.props.navigationContext.onGoToAdministrationAllowContentTypesRequested()}isHomeSelected(){return AdministrationWorkspaceContext.UZ.NONE===this.props.administrationWorkspaceContext.selectedAdministration||AdministrationWorkspaceContext.UZ.HOME===this.props.administrationWorkspaceContext.selectedAdministration}isMfaSelected(){return AdministrationWorkspaceContext.UZ.MFA===this.props.administrationWorkspaceContext.selectedAdministration}isMfaPolicySelected(){return AdministrationWorkspaceContext.UZ.MFA_POLICY===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordPoliciesSelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isUserDirectorySelected(){return AdministrationWorkspaceContext.UZ.USER_DIRECTORY===this.props.administrationWorkspaceContext.selectedAdministration}isEmailNotificationsSelected(){return AdministrationWorkspaceContext.UZ.EMAIL_NOTIFICATION===this.props.administrationWorkspaceContext.selectedAdministration}isSubscriptionSelected(){return AdministrationWorkspaceContext.UZ.SUBSCRIPTION===this.props.administrationWorkspaceContext.selectedAdministration}isInternationalizationSelected(){return AdministrationWorkspaceContext.UZ.INTERNATIONALIZATION===this.props.administrationWorkspaceContext.selectedAdministration}isAccountRecoverySelected(){return AdministrationWorkspaceContext.UZ.ACCOUNT_RECOVERY===this.props.administrationWorkspaceContext.selectedAdministration}isSsoSelected(){return AdministrationWorkspaceContext.UZ.SSO===this.props.administrationWorkspaceContext.selectedAdministration}isRbacSelected(){return AdministrationWorkspaceContext.UZ.RBAC===this.props.administrationWorkspaceContext.selectedAdministration}isSmtpSettingsSelected(){return AdministrationWorkspaceContext.UZ.SMTP_SETTINGS===this.props.administrationWorkspaceContext.selectedAdministration}isSelfRegistrationSettingsSelected(){return AdministrationWorkspaceContext.UZ.SELF_REGISTRATION===this.props.administrationWorkspaceContext.selectedAdministration}isUserPassphrasePoliciesSelected(){return AdministrationWorkspaceContext.UZ.USER_PASSPHRASE_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordExpirySettingsSelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_EXPIRY===this.props.administrationWorkspaceContext.selectedAdministration}isHealthcheckSelected(){return AdministrationWorkspaceContext.UZ.HEALTHCHECK===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesEncryptedMetadataSelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_ENCRYPTED_METADATA===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesMetadataKeySelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_METADATA_KEY===this.props.administrationWorkspaceContext.selectedAdministration}isMigrateMetadataSelected(){return AdministrationWorkspaceContext.UZ.MIGRATE_METADATA===this.props.administrationWorkspaceContext.selectedAdministration}isAllowedContentTypesSelected(){return AdministrationWorkspaceContext.UZ.ALLOW_CONTENT_TYPES===this.props.administrationWorkspaceContext.selectedAdministration}canSeePasswordConfiguration(){return this.canIUsePasswordExpiry||this.canIUsePasswordPolicies}canSeeAuthentication(){return this.canIUseUserPassphrasePolicies||this.canIUseAccountRecovery||this.canIUseSso||this.canIUseMfaPolicy||this.isMfaEnabled}canSeeUserProvisionning(){return this.isUserDirectoryEnabled||this.canIUseSelfRegistrationSettings}render(){return react.createElement("div",{className:"navigation-secondary navigation-administration"},react.createElement("ul",{id:"administration_menu",className:"clearfix menu ready"},react.createElement("li",{id:"home"},react.createElement("div",{className:"row "+(this.isHomeSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleHomeClick},react.createElement("span",null,react.createElement(es.x6,null,"Home"))))))),this.canIUseEE&&react.createElement("li",{id:"subscription_menu"},react.createElement("div",{className:"row "+(this.isSubscriptionSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSubscriptionClick},react.createElement("span",null,react.createElement(es.x6,null,"Subscription"))))))),this.canIUseMetadata&&react.createElement("li",{id:"content-types",className:"accordion-header"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:()=>this.handleSubmenuClick("isContentTypesOpened")},this.state.isContentTypesOpened?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Content types")))))),this.state.isContentTypesOpened&&react.createElement("ul",{id:"administration-sub-menu-content-type",className:"menu ready"},react.createElement("li",{id:"encrypted_metadata_menu"},react.createElement("div",{className:"row  "+(this.isContentTypesEncryptedMetadataSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleContentTypesEncryptedMetadataClick},react.createElement("span",null,react.createElement(es.x6,null,"Encrypted metadata")),react.createElement("span",{className:"chips beta"},"beta")))))),react.createElement("li",{id:"metadata_key_menu"},react.createElement("div",{className:"row  "+(this.isContentTypesMetadataKeySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleContentTypesMetadataKeyClick},react.createElement("span",null,react.createElement(es.x6,null,"Metadata key")),react.createElement("span",{className:"chips beta"},"beta")))))),react.createElement("li",{id:"migrate_metadata_menu"},react.createElement("div",{className:"row  "+(this.isMigrateMetadataSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleMigrateMetadataClick},react.createElement("span",null,react.createElement(es.x6,null,"Migrate metadata")),react.createElement("span",{className:"chips beta"},"beta")))))),react.createElement("li",{id:"allowed_content_type_menu"},react.createElement("div",{className:"row  "+(this.isAllowedContentTypesSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleAllowedContentTypesClick},react.createElement("span",null,react.createElement(es.x6,null,"Allow content types")),react.createElement("span",{className:"chips beta"},"beta")))))))),this.canSeePasswordConfiguration()&&react.createElement("li",{id:"password-configuration",className:"accordion-header"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:()=>this.handleSubmenuClick("isPasswordConfigurationOpened")},this.state.isPasswordConfigurationOpened?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Password configuration")))))),this.state.isPasswordConfigurationOpened&&react.createElement("ul",null,this.canIUsePasswordExpiry&&react.createElement("li",{id:"password_expiry_menu"},react.createElement("div",{className:"row "+(this.isPasswordExpirySettingsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handlePasswordExpirySettingsClick},react.createElement("span",null,react.createElement(es.x6,null,"Password Expiry"))))))),this.canIUsePasswordPolicies&&react.createElement("li",{id:"password_policy_menu"},react.createElement("div",{className:"row "+(this.isPasswordPoliciesSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handlePasswordPoliciesClick},react.createElement("span",null,react.createElement(es.x6,null,"Password Policy"))))))))),this.canSeeAuthentication()&&react.createElement("li",{id:"authentication",className:"accordion-header"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:()=>this.handleSubmenuClick("isAuthenticationOpened")},this.state.isAuthenticationOpened?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Authentication")))))),this.state.isAuthenticationOpened&&react.createElement("ul",null,this.canIUseUserPassphrasePolicies&&react.createElement("li",{id:"user_passphrase_policies_menu"},react.createElement("div",{className:"row "+(this.isUserPassphrasePoliciesSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleUserPassphrasePoliciesClick},react.createElement("span",null,react.createElement(es.x6,null,"User Passphrase Policies"))))))),this.canIUseAccountRecovery&&react.createElement("li",{id:"account_recovery_menu"},react.createElement("div",{className:"row "+(this.isAccountRecoverySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleAccountRecoveryClick},react.createElement("span",null,react.createElement(es.x6,null,"Account Recovery"))))))),this.canIUseSso&&react.createElement("li",{id:"sso_menu"},react.createElement("div",{className:"row "+(this.isSsoSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSsoClick},react.createElement("span",null,react.createElement(es.x6,null,"Single Sign-On"))))))),this.canIUseMfaPolicy&&react.createElement("li",{id:"mfa_policy_menu"},react.createElement("div",{className:"row "+(this.isMfaPolicySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleMfaPolicyClick},react.createElement("span",null,react.createElement(es.x6,null,"MFA Policy"))))))),this.isMfaEnabled&&react.createElement("li",{id:"mfa_menu"},react.createElement("div",{className:"row "+(this.isMfaSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleMfaClick},react.createElement("span",null,react.createElement(es.x6,null,"Multi Factor Authentication"))))))))),this.canSeeUserProvisionning()&&react.createElement("li",{id:"user-provisionning",className:"accordion-header"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:()=>this.handleSubmenuClick("isUserProvisionningOpened")},this.state.isUserProvisionningOpened?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement("span",null,react.createElement(es.x6,null,"User provisionning")))))),this.state.isUserProvisionningOpened&&react.createElement("ul",null,this.isUserDirectoryEnabled&&react.createElement("li",{id:"user_directory_menu"},react.createElement("div",{className:"row "+(this.isUserDirectorySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleUserDirectoryClick},react.createElement("span",null,react.createElement(es.x6,null,"Users Directory"))))))),this.canIUseSelfRegistrationSettings&&react.createElement("li",{id:"self_registration_menu"},react.createElement("div",{className:"row "+(this.isSelfRegistrationSettingsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSelfRegistrationClick},react.createElement("span",null,react.createElement(es.x6,null,"Self Registration"))))))))),react.createElement("li",{id:"emails",className:"accordion-header"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:()=>this.handleSubmenuClick("isEmailsOpened")},this.state.isEmailsOpened?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Emails")))))),this.state.isEmailsOpened&&react.createElement("ul",null,this.canIUseSmtpSettings&&react.createElement("li",{id:"smtp_settings_menu"},react.createElement("div",{className:"row "+(this.isSmtpSettingsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSmtpSettingsClick},react.createElement("span",null,react.createElement(es.x6,null,"Email server"))))))),react.createElement("li",{id:"email_notification_menu"},react.createElement("div",{className:"row "+(this.isEmailNotificationsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleEmailNotificationsClick},react.createElement("span",null,react.createElement(es.x6,null,"Email Notifications"))))))))),this.canIUseRbacs&&react.createElement("li",{id:"rbacs_menu"},react.createElement("div",{className:"row "+(this.isRbacSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleRbacsClick},react.createElement("span",null,react.createElement(es.x6,null,"Role-Based Access Control"))))))),this.canIUseLocale&&react.createElement("li",{id:"internationalization_menu"},react.createElement("div",{className:"row "+(this.isInternationalizationSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleInternationalizationClick},react.createElement("span",null,react.createElement(es.x6,null,"Internationalisation"))))))),this.canIUseHealthcheck&&react.createElement("li",{id:"healthcheck_menu"},react.createElement("div",{className:"row "+(this.isHealthcheckSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleHealthcheckClick},react.createElement("span",null,react.createElement(es.x6,null,"Passbolt API Status")))))))))}}DisplayAdministrationMenu.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,history:prop_types_default().object,navigationContext:prop_types_default().any};const DisplayAdministrationMenu_DisplayAdministrationMenu=(0,react_router.withRouter)((0,AppContext.L)((0,NavigationContext.qN)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayAdministrationMenu)))));DisplayAdministrationMenu.__docgenInfo={description:"This component allows to display the menu of the administration",methods:[{name:"defaultState",docblock:null,modifiers:["get"],params:[],returns:null},{name:"canIUse",docblock:"Returns true if the given feature flag exists and is enabled\n@param {string} featureFlag\n@returns {boolean}",modifiers:[],params:[{name:"featureFlag",type:{name:"string"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the given feature flag exists and is enabled"},{name:"isMfaEnabled",docblock:"Returns true if the user has the MFA capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the user has the MFA capability"},{name:"isUserDirectoryEnabled",docblock:"Returns true if the user has the user directory capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the user has the user directory capability"},{name:"canIUseEE",docblock:"Can I use the EE plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the EE plugin"},{name:"canIUseLocale",docblock:"Can I use the locale plugin.\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Can I use the locale plugin."},{name:"canIUseAccountRecovery",docblock:"Can I use the account recovery plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the account recovery plugin"},{name:"canIUseSmtpSettings",docblock:"Can I use the SMTP settings plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the SMTP settings plugin"},{name:"canIUseSelfRegistrationSettings",docblock:"Can I use the self registration settings plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the self registration settings plugin"},{name:"canIUseSso",docblock:"Can I use the sso plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the sso plugin"},{name:"canIUseMfaPolicy",docblock:"Can I use the mfa policy plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the mfa policy plugin"},{name:"canIUsePasswordPolicies",docblock:"Can I use the password policy plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the password policy plugin"},{name:"canIUseRbacs",docblock:"Can I use the RBACS plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the RBACS plugin"},{name:"canIUseUserPassphrasePolicies",docblock:"Can I use the User Passphrase Policies plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the User Passphrase Policies plugin"},{name:"canIUsePasswordExpiry",docblock:"Can I use the User Passphrase Policies plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the User Passphrase Policies plugin"},{name:"canIUseHealthcheck",docblock:"Can I use the healthcheck plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the healthcheck plugin"},{name:"canIUseMetadata",docblock:"Can I use the metadata plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the metadata plugin"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSubmenuClick",docblock:"Handles the click on accordion header\n@param {string} subMenuItem",modifiers:[],params:[{name:"subMenuItem",type:{name:"string"},optional:!1}],returns:null,description:"Handles the click on accordion header"},{name:"handleHomeClick",docblock:"Handle when the user click on the mfa menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the mfa menu"},{name:"handleMfaClick",docblock:"Handle when the user click on the mfa menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the mfa menu"},{name:"handleUserDirectoryClick",docblock:"Handle when the user click on the user directory menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the user directory menu"},{name:"handleEmailNotificationsClick",docblock:"Handle when the user click on the email notifications menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the email notifications menu"},{name:"handleSubscriptionClick",docblock:"Handle when the user click on the subscription menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the subscription menu"},{name:"handleInternationalizationClick",docblock:"Handle when the user click on the internationalization menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the internationalization menu"},{name:"handleAccountRecoveryClick",docblock:"Handle when the user click on the account recovery menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the account recovery menu"},{name:"handleSmtpSettingsClick",docblock:"Handle when the user click on the smtp settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the smtp settings menu"},{name:"handleSelfRegistrationClick",docblock:"Handle when the user click on the self registration settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the self registration settings menu"},{name:"handleSsoClick",docblock:"Handle when the user click on the sso menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the sso menu"},{name:"handleRbacsClick",docblock:"Handle when the user click on the rbac menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the rbac menu"},{name:"handleMfaPolicyClick",docblock:"Handle when the user click on the Mfa policy settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Mfa policy settings menu"},{name:"handlePasswordPoliciesClick",docblock:"Handle when the user click on the Password policies settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Password policies settings menu"},{name:"handleUserPassphrasePoliciesClick",docblock:"Handle when the user click on the User Passphrase Policies menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the User Passphrase Policies menu"},{name:"handlePasswordExpirySettingsClick",docblock:"Handle when the user click on the User Passphrase Policies menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the User Passphrase Policies menu"},{name:"handleHealthcheckClick",docblock:"Handle when the user click on the Mfa policy settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Mfa policy settings menu"},{name:"handleContentTypesEncryptedMetadataClick",docblock:"Handle when the user click on the content types encrypted metadata settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the content types encrypted metadata settings menu"},{name:"handleContentTypesMetadataKeyClick",docblock:"Handle when the user click on the content types metadata key settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the content types metadata key settings menu"},{name:"handleMigrateMetadataClick",docblock:"Handle when the user click on the migrate metadata key settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the migrate metadata key settings menu"},{name:"handleAllowedContentTypesClick",docblock:"Handle when the user click on the Allow content type menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Allow content type menu"},{name:"isHomeSelected",docblock:"If Home menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Home menu is selected"},{name:"isMfaSelected",docblock:"If MFA menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA menu is selected"},{name:"isMfaPolicySelected",docblock:"If MFA policiy menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA policiy menu is selected"},{name:"isPasswordPoliciesSelected",docblock:"If Password policiy menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password policiy menu is selected"},{name:"isUserDirectorySelected",docblock:"If User Directory menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User Directory menu is selected"},{name:"isEmailNotificationsSelected",docblock:"If Email Notifications menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Email Notifications menu is selected"},{name:"isSubscriptionSelected",docblock:"If Subscription menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Subscription menu is selected"},{name:"isInternationalizationSelected",docblock:"If Internationalization menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Internationalization menu is selected"},{name:"isAccountRecoverySelected",docblock:"If Account Recovery menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Account Recovery menu is selected"},{name:"isSsoSelected",docblock:"If SSO menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SSO menu is selected"},{name:"isRbacSelected",docblock:"If RBAC menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If RBAC menu is selected"},{name:"isSmtpSettingsSelected",docblock:"If SMTP settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SMTP settings menu is selected"},{name:"isSelfRegistrationSettingsSelected",docblock:"If Self registration settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Self registration settings menu is selected"},{name:"isUserPassphrasePoliciesSelected",docblock:"If User Passphrase Policies menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User Passphrase Policies menu is selected"},{name:"isPasswordExpirySettingsSelected",docblock:"If Password Expiry menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password Expiry menu is selected"},{name:"isHealthcheckSelected",docblock:"If Healthcheck menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Healthcheck menu is selected"},{name:"isContentTypesEncryptedMetadataSelected",docblock:"If content types encrypted metadata menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types encrypted metadata menu is selected"},{name:"isContentTypesMetadataKeySelected",docblock:"If content types metadata key menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types metadata key menu is selected"},{name:"isMigrateMetadataSelected",docblock:"If content types metadata key menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types metadata key menu is selected"},{name:"isAllowedContentTypesSelected",docblock:"If Allow content types menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Allow content types menu is selected"},{name:"canSeePasswordConfiguration",docblock:"Should display password configuration section.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should display password configuration section."},{name:"canSeeAuthentication",docblock:"Should display autentication section.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should display autentication section."},{name:"canSeeUserProvisionning",docblock:"Should display user provisioning section.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should display user provisioning section."}],displayName:"DisplayAdministrationMenu",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},history:{description:"",type:{name:"object"},required:!1},navigationContext:{description:"",type:{name:"any"},required:!1}}};var DisplayMfaAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayMfaAdministration/DisplayMfaAdministration.js"),DisplayAdministrationWorkspaceBreadcrumb=__webpack_require__("./src/react-extension/components/Administration/DisplayAdministrationWorkspaceBreadcrumb/DisplayAdministrationWorkspaceBreadcrumb.js"),DisplayUserDirectoryAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayUserDirectoryAdministration/DisplayUserDirectoryAdministration.js"),DisplayEmailNotificationsAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayEmailNotificationsAdministration/DisplayEmailNotificationsAdministration.js"),DisplaySubscriptionKey=__webpack_require__("./src/react-extension/components/Administration/DisplaySubscriptionKey/DisplaySubscriptionKey.js"),DisplayInternationalizationAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayInternationalizationAdministration/DisplayInternationalizationAdministration.js"),ManageAccountRecoveryAdministrationSettings=__webpack_require__("./src/react-extension/components/Administration/ManageAccountRecoveryAdministrationSettings/ManageAccountRecoveryAdministrationSettings.js"),ManageSmtpAdministrationSettings=__webpack_require__("./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/ManageSmtpAdministrationSettings.js"),DisplaySelfRegistrationAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplaySelfRegistrationAdministration/DisplaySelfRegistrationAdministration.js"),ManageSsoSettings=__webpack_require__("./src/react-extension/components/Administration/ManageSsoSettings/ManageSsoSettings.js"),DisplayMfaPolicyAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayMfaPolicyAdministration/DisplayMfaPolicyAdministration.js"),DisplayRbacAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayRbacAdministration/DisplayRbacAdministration.js"),DisplayPasswordPoliciesAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayPasswordPoliciesAdministration/DisplayPasswordPoliciesAdministration.js"),AdministrationUserPassphrasePoliciesContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationUserPassphrasePoliciesContext/AdministrationUserPassphrasePoliciesContext.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js");class DisplayAdministrationUserPassphrasePoliciesActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSave=this.handleSave.bind(this)}get isActionEnabled(){return!this.props.adminUserPassphrasePoliciesContext.isProcessing()}async handleSave(){if(this.isActionEnabled&&this.props.adminUserPassphrasePoliciesContext.validateData())try{await this.props.adminUserPassphrasePoliciesContext.save(),await this.handleSaveSuccess()}catch(error){await this.handleSaveError(error)}}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The user passphrase policies were updated."))}async handleSaveError(error){console.error(error),await this.props.actionFeedbackContext.displayError(error.message),this.props.dialogContext.open(NotifyError.A,{error})}render(){const isDisabled=!this.isActionEnabled;return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{type:"button",className:"button primary form",disabled:isDisabled,id:"save-settings",onClick:this.handleSave},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationUserPassphrasePoliciesActions.propTypes={adminUserPassphrasePoliciesContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,dialogContext:prop_types_default().any,t:prop_types_default().func};const DisplayAdministrationUserPassphrasePoliciesActions_DisplayAdministrationUserPassphrasePoliciesActions=(0,AdministrationUserPassphrasePoliciesContext.pE)((0,ActionFeedbackContext.ot)((0,DialogContext.z9)((0,es.CI)("common")(DisplayAdministrationUserPassphrasePoliciesActions))));DisplayAdministrationUserPassphrasePoliciesActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"isActionEnabled",docblock:"Is save button enabled\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is save button enabled"},{name:"handleSave",docblock:"Handles the save action.\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handles the save action."},{name:"handleSaveSuccess",docblock:"Handle save operation success.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle save operation error."}],displayName:"DisplayAdministrationUserPassphrasePoliciesActions",props:{adminUserPassphrasePoliciesContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var Range=__webpack_require__("./src/react-extension/components/Common/Range/Range.js"),portals=__webpack_require__("./src/shared/utils/portals.js"),buoy=__webpack_require__("./src/img/svg/buoy.svg");class DisplayAdministrationUserPassphrasePolicies extends react.PureComponent{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isReady:!1}}async componentDidMount(){await this.props.adminUserPassphrasePoliciesContext.findSettings(),this.setState({isReady:!0})}bindCallbacks(){this.handleMinimumEntropyChange=this.handleMinimumEntropyChange.bind(this),this.handleCheckboxInputChange=this.handleCheckboxInputChange.bind(this)}hasAllInputDisabled(){return this.props.adminUserPassphrasePoliciesContext.isProcessing()}handleMinimumEntropyChange(name,val){const value=parseInt(val,10)||0;this.props.adminUserPassphrasePoliciesContext.setSettings(name,value)}handleCheckboxInputChange(e){const target=e.target,name=target.name,value=Boolean(target.checked);this.props.adminUserPassphrasePoliciesContext.setSettings(name,value)}isWeakSettings(settings){return settings.entropy_minimum<80}get hasWarnings(){const adminContext=this.props.adminUserPassphrasePoliciesContext,settings=adminContext.getSettings();return adminContext.hasSettingsChanges()||this.isWeakSettings(settings)}render(){if(!this.state.isReady)return null;const allInputDisabled=this.hasAllInputDisabled(),adminContext=this.props.adminUserPassphrasePoliciesContext,settings=adminContext.getSettings();return react.createElement("div",{className:"row"},react.createElement("div",{className:"password-policies-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{id:"user-passphrase-policies-title",className:"title"},react.createElement(es.x6,null,"User Passphrase Policies")),react.createElement("form",null,react.createElement("h4",{id:"user-passphrase-policies-entropy-minimum"},react.createElement(es.x6,null,"User passphrase minimal entropy")),react.createElement("div",{className:"input range"},react.createElement(Range.A,{id:"entropy_minimum",onChange:this.handleMinimumEntropyChange,value:settings.entropy_minimum,disabled:allInputDisabled})),react.createElement("div",null,react.createElement(es.x6,null,"You can set the minimal entropy for the users' private key passphrase.")," ",react.createElement(es.x6,null,"This is the passphrase that is asked during sign in or recover.")),react.createElement("h4",{id:"user-passphrase-policies-external-services-subtitle"},react.createElement("span",{className:"input toggle-switch form-element ready"},react.createElement("input",{id:"user-passphrase-policies-external-services-toggle-button",type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"external_dictionary_check",onChange:this.handleCheckboxInputChange,checked:settings?.external_dictionary_check,disabled:allInputDisabled}),react.createElement("label",{htmlFor:"user-passphrase-policies-external-services-toggle-button"},react.createElement(es.x6,null,"External password dictionary check")))),react.createElement("span",{className:"input toggle-switch form-element"},react.createElement(es.x6,null,"Allow passbolt to access external services to check if the user passphrase has been compromised when the user creates it.")))),this.hasWarnings&&react.createElement("div",{className:"warning message"},adminContext.hasSettingsChanges()&&react.createElement("div",{id:"user-passphrase-policies-save-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))),this.isWeakSettings(settings)&&react.createElement("div",{id:"user-passphrase-policies-weak-settings-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Passbolt recommends passphrase strength to be at minimum of ",{MINIMAL_ADVISED_ENTROPY:80}," bits to be safe."))))),react.createElement(DisplayAdministrationUserPassphrasePoliciesActions_DisplayAdministrationUserPassphrasePoliciesActions,null),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"What is user passphrase policies?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about the user passphrase policies, checkout the dedicated page on the help website.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/authentication/user-passphrase-policies/",target:"_blank",rel:"noopener noreferrer"},react.createElement(buoy.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayAdministrationUserPassphrasePolicies.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminUserPassphrasePoliciesContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationUserPassphrasePolicies_DisplayAdministrationUserPassphrasePolicies=(0,AppContext.L)((0,AdministrationWorkspaceContext.Kk)((0,AdministrationUserPassphrasePoliciesContext.pE)((0,es.CI)("common")(DisplayAdministrationUserPassphrasePolicies))));DisplayAdministrationUserPassphrasePolicies.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleMinimumEntropyChange",docblock:"Handles the minium entropy value change\n@param {string} name the settings name to change the value\n@param {number} val the valud to apply to the settings",modifiers:[],params:[{name:"name",description:"the settings name to change the value",type:{name:"string"},optional:!1},{name:"val",description:"the valud to apply to the settings",type:{name:"number"},optional:!1}],returns:null,description:"Handles the minium entropy value change"},{name:"handleCheckboxInputChange",docblock:"Handles checkbox check's state change",modifiers:[],params:[{name:"e",optional:!1}],returns:null,description:"Handles checkbox check's state change"},{name:"isWeakSettings",docblock:"Returns true if the settings are considered too weak to be safe\n@returns {boolean}",modifiers:[],params:[{name:"settings",optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the settings are considered too weak to be safe"},{name:"hasWarnings",docblock:"Returns true if a warning should be displayed\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if a warning should be displayed"}],displayName:"DisplayAdministrationUserPassphrasePolicies",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminUserPassphrasePoliciesContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var DisplayAdministrationPasswordExpiry=__webpack_require__("./src/react-extension/components/Administration/DisplayAdministrationPasswordExpiry/DisplayAdministrationPasswordExpiry.js"),DisplayHttpError=__webpack_require__("./src/react-extension/components/Common/Error/DisplayHttpError/DisplayHttpError.js"),DisplayHealthcheckAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayHealthcheckAdministration/DisplayHealthcheckAdministration.js"),DisplayContentTypesEncryptedMetadataAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayContentTypesEncryptedMetadataAdministration/DisplayContentTypesEncryptedMetadataAdministration.js"),arrow_left=__webpack_require__("./src/img/svg/arrow_left.svg"),Footer=__webpack_require__("./src/react-extension/components/Common/Footer/Footer.js"),DisplayContentTypesMetadataKeyAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayContentTypesMetadataKeyAdministration/DisplayContentTypesMetadataKeyAdministration.js"),DisplayMigrateMetadataAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayMigrateMetadataAdministration/DisplayMigrateMetadataAdministration.js"),DisplayContentTypesAllowedContentTypesAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayContentTypesAllowedContentTypesAdministration/DisplayContentTypesAllowedContentTypesAdministration.js"),AdministrationHomePage=__webpack_require__("./src/react-extension/components/Administration/HomePage/AdministrationHomePage.js"),WorkspaceSwitcher=__webpack_require__("./src/react-extension/components/Common/Navigation/WorkspaceSwitcher/WorkspaceSwitcher.js");class AdministrationWorkspace extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleGoBack=this.handleGoBack.bind(this)}isHomePageSelected(){return AdministrationWorkspaceContext.UZ.HOME===this.props.administrationWorkspaceContext.selectedAdministration||AdministrationWorkspaceContext.UZ.NONE===this.props.administrationWorkspaceContext.selectedAdministration}isMfaSelected(){return AdministrationWorkspaceContext.UZ.MFA===this.props.administrationWorkspaceContext.selectedAdministration}isMfaPolicySelected(){return AdministrationWorkspaceContext.UZ.MFA_POLICY===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordPoliciesSelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isUserDirectorySelected(){return AdministrationWorkspaceContext.UZ.USER_DIRECTORY===this.props.administrationWorkspaceContext.selectedAdministration}isEmailNotificationsSelected(){return AdministrationWorkspaceContext.UZ.EMAIL_NOTIFICATION===this.props.administrationWorkspaceContext.selectedAdministration}isSubscriptionSelected(){return AdministrationWorkspaceContext.UZ.SUBSCRIPTION===this.props.administrationWorkspaceContext.selectedAdministration}isInternationalizationSelected(){return AdministrationWorkspaceContext.UZ.INTERNATIONALIZATION===this.props.administrationWorkspaceContext.selectedAdministration}isAccountRecoverySelected(){return AdministrationWorkspaceContext.UZ.ACCOUNT_RECOVERY===this.props.administrationWorkspaceContext.selectedAdministration}isSmtpSettingsSelected(){return AdministrationWorkspaceContext.UZ.SMTP_SETTINGS===this.props.administrationWorkspaceContext.selectedAdministration}isSelfRegistrationSelected(){return AdministrationWorkspaceContext.UZ.SELF_REGISTRATION===this.props.administrationWorkspaceContext.selectedAdministration}isSsoSelected(){return AdministrationWorkspaceContext.UZ.SSO===this.props.administrationWorkspaceContext.selectedAdministration}isRbacSelected(){return AdministrationWorkspaceContext.UZ.RBAC===this.props.administrationWorkspaceContext.selectedAdministration}isUserPassphrasePoliciesSelected(){return AdministrationWorkspaceContext.UZ.USER_PASSPHRASE_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordExpirySelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_EXPIRY===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesEncryptedMetadataSelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_ENCRYPTED_METADATA===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesMetadataKeySelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_METADATA_KEY===this.props.administrationWorkspaceContext.selectedAdministration}isMigrateMetadataSelected(){return AdministrationWorkspaceContext.UZ.MIGRATE_METADATA===this.props.administrationWorkspaceContext.selectedAdministration}isAllowContentTypesSelected(){return AdministrationWorkspaceContext.UZ.ALLOW_CONTENT_TYPES===this.props.administrationWorkspaceContext.selectedAdministration}handleGoBack(){this.props.navigationContext.onGoToPasswordsRequested()}get isHttpError403(){return AdministrationWorkspaceContext.UZ.HTTP_403_ACCESS_DENIED===this.props.administrationWorkspaceContext.selectedAdministration}get isHttpError404(){return AdministrationWorkspaceContext.UZ.HTTP_404_NOT_FOUND===this.props.administrationWorkspaceContext.selectedAdministration}isHealthcheckSelected(){return AdministrationWorkspaceContext.UZ.HEALTHCHECK===this.props.administrationWorkspaceContext.selectedAdministration}render(){return react.createElement("div",{id:"container",className:"page administration"},react.createElement("div",{id:"app",className:"app",tabIndex:"1000"},react.createElement("div",{className:"panel main"},react.createElement("div",{className:"panel left"},!this.isHttpError403&&react.createElement("div",{className:"sidebar-content"},react.createElement("div",{className:"top-bar-left-navigation"},react.createElement("div",{className:"navigation"},react.createElement("button",{type:"button",className:"button-transparent back",onClick:this.handleGoBack},react.createElement(arrow_left.A,null)),react.createElement("span",{className:"title administration"},react.createElement(es.x6,null,"Organisation settings")))),react.createElement("div",{className:"sidebar-content-left"},react.createElement(DisplayAdministrationMenu_DisplayAdministrationMenu,null)))),react.createElement("div",{className:"panel middle"},react.createElement("div",{className:"header"},!this.isHttpError403&&react.createElement(react.Fragment,null,react.createElement("div",{className:"header-left"}),react.createElement("div",{className:"header-right"},react.createElement(WorkspaceSwitcher.A,{isUserAdmin:!0,isUserWorkspaceVisible:!0,currentWorkspace:WorkspaceSwitcher.K.ORGANISATION_SETTINGS}),react.createElement(DisplayUserBadgeMenu.A,{baseUrl:this.props.context.trustedDomain||this.props.context.userSettings.getTrustedDomain(),user:this.props.context.loggedInUser})))),react.createElement("div",{className:"middle-right"},react.createElement("div",{className:"breadcrumbs-and-grid"},react.createElement("div",{className:"top-bar"},react.createElement(DisplayAdministrationWorkspaceBreadcrumb.A,null)),react.createElement("div",{className:"main-page"},this.isHttpError403&&react.createElement(DisplayHttpError.A,{errorCode:403}),this.isHttpError404&&react.createElement(DisplayHttpError.A,{errorCode:404}),this.isHomePageSelected()&&react.createElement(AdministrationHomePage.A,null),this.isMfaSelected()&&react.createElement(DisplayMfaAdministration.A,null),this.isMfaPolicySelected()&&react.createElement(DisplayMfaPolicyAdministration.A,null),this.isPasswordPoliciesSelected()&&react.createElement(DisplayPasswordPoliciesAdministration.A,null),this.isUserDirectorySelected()&&react.createElement(DisplayUserDirectoryAdministration.A,null),this.isEmailNotificationsSelected()&&react.createElement(DisplayEmailNotificationsAdministration.A,null),this.isSubscriptionSelected()&&react.createElement(DisplaySubscriptionKey.A,null),this.isInternationalizationSelected()&&react.createElement(DisplayInternationalizationAdministration.A,null),this.isAccountRecoverySelected()&&react.createElement(ManageAccountRecoveryAdministrationSettings.A,null),this.isSmtpSettingsSelected()&&react.createElement(ManageSmtpAdministrationSettings.A,null),this.isSelfRegistrationSelected()&&react.createElement(DisplaySelfRegistrationAdministration.A,null),this.isSsoSelected()&&react.createElement(ManageSsoSettings.A,null),this.isRbacSelected()&&react.createElement(DisplayRbacAdministration.A,null),this.isUserPassphrasePoliciesSelected()&&react.createElement(DisplayAdministrationUserPassphrasePolicies_DisplayAdministrationUserPassphrasePolicies,null),this.isPasswordExpirySelected()&&react.createElement(DisplayAdministrationPasswordExpiry.A,null),this.isHealthcheckSelected()&&react.createElement(DisplayHealthcheckAdministration.A,null),this.isContentTypesEncryptedMetadataSelected()&&react.createElement(DisplayContentTypesEncryptedMetadataAdministration.A,null),this.isContentTypesMetadataKeySelected()&&react.createElement(DisplayContentTypesMetadataKeyAdministration.A,null),this.isMigrateMetadataSelected()&&react.createElement(DisplayMigrateMetadataAdministration.A,null),this.isAllowContentTypesSelected()&&react.createElement(DisplayContentTypesAllowedContentTypesAdministration.A,null))),react.createElement(react_router.Switch,null,react.createElement(react_router.Route,{exact:!0,path:["/app/administration"]}),react.createElement(react_router.Route,null,react.createElement("div",{className:"help-panel"},react.createElement("div",{className:"sidebar-help",id:"administration-help-panel"}),react.createElement(Footer.A,null)))))))))}}AdministrationWorkspace.propTypes={context:prop_types_default().any,administrationWorkspaceContext:prop_types_default().object,navigationContext:prop_types_default().any};const Administration_AdministrationWorkspace=(0,AppContext.L)((0,NavigationContext.qN)((0,AdministrationWorkspaceContext.Kk)(AdministrationWorkspace)));AdministrationWorkspace.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"isHomePageSelected",docblock:"If the administration Home page selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If the administration Home page selected"},{name:"isMfaSelected",docblock:"If MFA menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA menu is selected"},{name:"isMfaPolicySelected",docblock:"If MFA policy menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA policy menu is selected"},{name:"isPasswordPoliciesSelected",docblock:"If Password policies menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password policies menu is selected"},{name:"isUserDirectorySelected",docblock:"If User directory menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User directory menu is selected"},{name:"isEmailNotificationsSelected",docblock:"If Email notifications menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Email notifications menu is selected"},{name:"isSubscriptionSelected",docblock:"If Subscription menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Subscription menu is selected"},{name:"isInternationalizationSelected",docblock:"If Internationalization menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Internationalization menu is selected"},{name:"isAccountRecoverySelected",docblock:"If Account Recovery menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Account Recovery menu is selected"},{name:"isSmtpSettingsSelected",docblock:"If SMTP settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SMTP settings menu is selected"},{name:"isSelfRegistrationSelected",docblock:"If Self registration settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Self registration settings menu is selected"},{name:"isSsoSelected",docblock:"If SSO menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SSO menu is selected"},{name:"isRbacSelected",docblock:"If RBAC menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If RBAC menu is selected"},{name:"isUserPassphrasePoliciesSelected",docblock:"If User Passphrase Policies menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User Passphrase Policies menu is selected"},{name:"isPasswordExpirySelected",docblock:"If Password Expiry menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password Expiry menu is selected"},{name:"isContentTypesEncryptedMetadataSelected",docblock:"If content types encrypted metadata is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types encrypted metadata is selected"},{name:"isContentTypesMetadataKeySelected",docblock:"If content types metadata key is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types metadata key is selected"},{name:"isMigrateMetadataSelected",docblock:"If content types metadata key is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types metadata key is selected"},{name:"isAllowContentTypesSelected",docblock:"If allow content types is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If allow content types is selected"},{name:"handleGoBack",docblock:"Handle go back to resource workspace",modifiers:[],params:[],returns:null,description:"Handle go back to resource workspace"},{name:"isHttpError403",docblock:"If the page access is denied\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"If the page access is denied"},{name:"isHttpError404",docblock:"If the page accessed does not exist or if the corresponding feature flag is disabled\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"If the page accessed does not exist or if the corresponding feature flag is disabled"},{name:"isHealthcheckSelected",docblock:null,modifiers:[],params:[],returns:null}],displayName:"AdministrationWorkspace",props:{context:{description:"",type:{name:"any"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},navigationContext:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/components/Administration/DisplayContentTypesEncryptedMetadataAdministration/DisplayContentTypesEncryptedMetadataAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministration});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),metadataTypesSettingsEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataTypesSettingsEntity.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),resourceTypesCollection=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypesCollection.js"),metadata_metadataKeysCollection=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysCollection.js");const formProperties=["default_resource_types","allow_creation_of_v5_resources","allow_creation_of_v4_resources","allow_v4_v5_upgrade","allow_v5_v4_downgrade"];class MetadataTypesSettingsFormEntity extends metadataTypesSettingsEntity.Ay{toFormDto(){return formProperties.reduce(((result,prop)=>(void 0!==this._props[prop]&&(result[prop]=this._props[prop]),result)),{})}verifyHealth(resourceTypes,metadataKeysCollection){let result=null;if(void 0===resourceTypes)return result;if(void 0===metadataKeysCollection)return result;if(!(resourceTypes instanceof resourceTypesCollection.A))throw new TypeError("The parameter 'resourceTypes' is not a valid 'ResourceTypesCollection' type.");if(!(metadataKeysCollection instanceof metadata_metadataKeysCollection.A))throw new TypeError("The parameter 'metadataKeysCollection' is not a valid 'MetadataKeysCollection' type.");const hasV4ResourceTypes=resourceTypes.hasSomeOfVersion(metadataTypesSettingsEntity.Sr),hasV5ResourceTypes=resourceTypes.hasSomeOfVersion(metadataTypesSettingsEntity.LP);this.allowCreationOfV4Resources&&!hasV4ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_creation_of_v4_resources","resource_types_deleted","Resource types v4 are deleted.")),this.isDefaultResourceTypeV4&&!hasV4ResourceTypes&&(result=result||new entityValidationError.A,result.addError("default_resource_types","resource_types_v4_deleted","Resource types v4 are deleted.")),this.allowCreationOfV5Resources&&!hasV5ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_creation_of_v5_resources","resource_types_deleted","Resource types v5 are deleted.")),this.isDefaultResourceTypeV5&&!hasV5ResourceTypes&&(result=result||new entityValidationError.A,result.addError("default_resource_types","resource_types_v5_deleted","Resource types v5 are deleted.")),this.allowV5V4Downgrade&&!hasV4ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_v5_v4_downgrade","resource_types_deleted","Resource types v4 are deleted.")),this.allowV5V4Downgrade&&!this.allowCreationOfV4Resources&&(result=result||new entityValidationError.A,result.addError("allow_v5_v4_downgrade","allow_creation","Resource types v4 creation is not allowed.")),this.allowV4V5Upgrade&&!hasV5ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_v4_v5_upgrade","resource_types_deleted","Resource types v5 are deleted.")),this.allowV4V5Upgrade&&!this.allowCreationOfV5Resources&&(result=result||new entityValidationError.A,result.addError("allow_v4_v5_upgrade","allow_creation","Resource types v5 creation is not allowed."));return 0===metadataKeysCollection.items.filter((metadataKey=>!metadataKey.expired)).length&&this.allowCreationOfV5Resources&&(result=result||new entityValidationError.A,result.addError("allow_creation_of_v5_resources","active_metadata_key","No active metadata key defined.")),result}}const metadataTypesSettingsFormEntity=MetadataTypesSettingsFormEntity;var metadataSettingsServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js");class DisplayContentTypesEncryptedMetadataAdministrationActions extends react.Component{render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{type:"button",className:"button primary form",disabled:this.props.isProcessing,onClick:this.props.onSaveRequested},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayContentTypesEncryptedMetadataAdministrationActions.propTypes={isProcessing:prop_types_default().bool,onSaveRequested:prop_types_default().func,t:prop_types_default().func};const DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministrationActions=(0,es.CI)("common")(DisplayContentTypesEncryptedMetadataAdministrationActions);DisplayContentTypesEncryptedMetadataAdministrationActions.__docgenInfo={description:"",methods:[],displayName:"DisplayContentTypesEncryptedMetadataAdministrationActions",props:{isProcessing:{description:"",type:{name:"bool"},required:!1},onSaveRequested:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),ResourceTypesLocalStorageContext=__webpack_require__("./src/shared/context/ResourceTypesLocalStorageContext/ResourceTypesLocalStorageContext.js"),portals=__webpack_require__("./src/shared/utils/portals.js"),file_text=__webpack_require__("./src/img/svg/file_text.svg"),metadataKeysServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataKeysServiceWorkerService.js");class DisplayContentTypesEncryptedMetadataAdministration extends react.Component{originalSettings=null;formSettings=null;metadataKeys=void 0;constructor(props){super(props),this.metadataSettingsServiceWorkerService=props.metadataSettingsServiceWorkerService??new metadataSettingsServiceWorkerService.Ay(props.context.port),this.metadataKeysServiceWorkerService=props.metadataKeysServiceWorkerService??new metadataKeysServiceWorkerService.Ay(props.context.port),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isProcessing:!0,hasAlreadyBeenValidated:!1,settings:{default_resource_types:"v4",allow_creation_of_v5_resources:!1,allow_creation_of_v4_resources:!1,allow_v4_v5_upgrade:!1,allow_v5_v4_downgrade:!1}}}bindCallbacks(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.save=this.save.bind(this)}async componentDidMount(){this.originalSettings=await this.metadataSettingsServiceWorkerService.findTypesSettings(),this.formSettings=new metadataTypesSettingsFormEntity(this.originalSettings.toDto(),{validate:!1}),this.metadataKeys=await this.metadataKeysServiceWorkerService.findAll();this.setState({settings:this.formSettings.toFormDto(),isProcessing:!1})}validateForm=(0,memoize_one_esm.A)((formSettingsDto=>this.formSettings?.validate()));verifyDataHealth=(0,memoize_one_esm.A)(((formSettingsDto,resourceTypes,metadataKeysCollection)=>this.formSettings?.verifyHealth(resourceTypes,metadataKeysCollection)));hasSettingsChanges=(0,memoize_one_esm.A)(((originalSettings,formSettings,formSettingsDto)=>this.originalSettings?.hasDiffProps(this.formSettings)));handleInputChange(event){if(this.hasAllInputDisabled())return;const{type,checked,value,name}=event.target,parsedValue="checkbox"===type?checked:value;this.setFormPropertyValue(name,parsedValue)}setFormPropertyValue(name,parsedValue){this.formSettings.set(name,parsedValue,{validate:!1}),this.setState({settings:this.formSettings.toFormDto()})}hasAllInputDisabled(){return this.state.isProcessing}handleFormSubmit(event){event.preventDefault(),this.save()}async save(){if(this.state.isProcessing)return;const validationError=this.validateForm(this.state.settings);if(validationError?.hasErrors()){const hasAlreadyBeenValidated=!0;this.setState({hasAlreadyBeenValidated})}else{this.setState({isProcessing:!0});try{this.originalSettings=await this.metadataSettingsServiceWorkerService.saveTypesSettings(this.formSettings),this.formSettings=new metadataTypesSettingsFormEntity(this.originalSettings.toDto()),await this.props.actionFeedbackContext.displaySuccess(this.props.t("The encrypted metadata settings were updated."))}catch(error){this.props.dialogContext.open(NotifyError.A,{error})}this.setState({hasAlreadyBeenValidated:!0,isProcessing:!1,settings:this.formSettings.toDto()})}}render(){const errors=this.state.hasAlreadyBeenValidated?this.validateForm(this.state.settings):null,warnings=this.verifyDataHealth(this.state.settings,this.props.resourceTypes,this.metadataKeys),hasSettingsChanges=this.hasSettingsChanges(this.originalSettings,this.formSettings,this.state.settings);return react.createElement("div",{className:"row"},react.createElement("div",{id:"content-types-encrypted-metadata-settings",className:"main-column"},react.createElement("div",{className:"main-content"},react.createElement("form",{onSubmit:this.handleFormSubmit,"data-testid":"submit-form"},react.createElement("h3",{className:"title"},react.createElement("label",null,react.createElement(es.x6,null,"Encrypted metadata"))),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"Encrypted metadata for resources is available.")," ",react.createElement(es.x6,null,"Define the strategy to manage and migrate the legacy items.")),react.createElement("h4",null,react.createElement(es.x6,null,"Supported metadata types")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"Define which metadata types are enabled for this instance.")),react.createElement("div",{className:`input toggle-switch form-element\n              ${errors?.hasError("allow_creation_of_v5_resources")?"error":""}\n              ${warnings?.hasError("allow_creation_of_v5_resources")?"warning":""}`},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_creation_of_v5_resources",id:"allowCreationOfV5ResourcesInput",onChange:this.handleInputChange,checked:this.state.settings.allow_creation_of_v5_resources,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowCreationOfV5ResourcesInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Enable encrypted metadata (recommended)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Enable encrypted metadata for resources.")),errors?.hasError("allow_creation_of_v5_resources","is_default")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Encrypted metadata must be enabled to set it as the default type.")),!errors?.hasError("allow_creation_of_v5_resources")&&react.createElement(react.Fragment,null,warnings?.hasError("allow_creation_of_v5_resources","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All encrypted metadata resource types were previously disabled. Re-enable them if you want users to create resources of this type.")),warnings?.hasError("allow_creation_of_v5_resources","active_metadata_key")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"A metadata key should be enabled to allow users to create resources of this type."))))),react.createElement("div",{className:`input toggle-switch form-element\n              ${errors?.hasError("allow_creation_of_v4_resources")?"error":""}\n              ${warnings?.hasError("allow_creation_of_v4_resources")?"warning":""}`},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_creation_of_v4_resources",id:"allowCreationOfV4ResourcesInput",onChange:this.handleInputChange,checked:this.state.settings.allow_creation_of_v4_resources,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowCreationOfV4ResourcesInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Enable legacy cleartext metadata")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Enable legacy cleartext metadata for resources.")),errors?.hasError("allow_creation_of_v4_resources","is_default")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Legacy cleartext metadata must be enabled to set it as the default type.")),!errors?.hasError("allow_creation_of_v4_resources")&&warnings?.hasError("allow_creation_of_v4_resources","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All legacy cleartext resource types were previously disabled. Re-enable them if you want users to create resources of this type.")))),react.createElement("h4",null,react.createElement(es.x6,null,"Default metadata type")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"Define which metadata type is used by default.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:`input radio\n                  ${"v5"===this.state.settings.default_resource_types?"checked":""}\n                  ${errors?.hasError("default_resource_types","allow_create_v5")?"error":""}\n                  ${!errors?.hasError("default_resource_types","allow_create_v5")&&warnings?.hasError("default_resource_types","resource_types_v5_deleted")?"warning":""}`},react.createElement("input",{type:"radio",value:"v5",onChange:this.handleInputChange,name:"default_resource_types",checked:"v5"===this.state.settings.default_resource_types,id:"defaultResourceTypesV5Input",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"defaultResourceTypesV5Input"},react.createElement("span",{className:"name bold"},react.createElement(es.x6,null,"Encrypted metadata (recommended)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users can create resources with encrypted metadata by default."),react.createElement("br",null)),errors?.hasError("default_resource_types","allow_create_v5")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Encrypted metadata must be enabled to set it as the default type.")),!errors?.hasError("default_resource_types","allow_create_v5")&&warnings?.hasError("default_resource_types","resource_types_v5_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All encrypted metadata resource types were previously disabled. Re-enable them if you want users to create resources of this type.")))),react.createElement("div",{className:`input radio ${"v4"===this.state.settings.default_resource_types?"checked":""}\n                  ${errors?.hasError("default_resource_types","allow_create_v4")?"error":""}\n                  ${!errors?.hasError("default_resource_types","allow_create_v4")&&warnings?.hasError("default_resource_types","resource_types_v4_deleted")?"warning":""}`},react.createElement("input",{type:"radio",value:"v4",onChange:this.handleInputChange,name:"default_resource_types",checked:"v4"===this.state.settings.default_resource_types,id:"defaultResourceTypesV4Input",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"defaultResourceTypesV4Input"},react.createElement("span",{className:"name bold"},react.createElement(es.x6,null,"Legacy cleartext metadata")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users can create legacy resources with cleartext metadata by default.")),errors?.hasError("default_resource_types","allow_create_v4")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Legacy cleartext metadata must be enabled to set it as the default type.")),!errors?.hasError("default_resource_types","allow_create_v4")&&warnings?.hasError("default_resource_types","resource_types_v4_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All legacy cleartext resource types were previously disabled. Re-enable them if you want users to create resources of this type."))))),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Self served migration")),react.createElement("div",{className:"input toggle-switch form-element"},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_v4_v5_upgrade",id:"allowV4V5UpgradeInput",onChange:this.handleInputChange,checked:this.state.settings.allow_v4_v5_upgrade,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowV4V5UpgradeInput",className:"text"},react.createElement(es.x6,null,"Allow users to upgrade their content from cleartext to encrypted metadata type."),warnings?.hasError("allow_v4_v5_upgrade","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All encrypted metadata resource types were previously disabled. Re-enable them if you want users to upgrade their resources.")),warnings?.hasError("allow_v4_v5_upgrade","allow_creation")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"Encrypted metadata should be enabled to allow users to upgrade their resources.")))),react.createElement("div",{className:"input toggle-switch form-element"},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_v5_v4_downgrade",id:"allowV5V4DowngradeInput",onChange:this.handleInputChange,checked:this.state.settings.allow_v5_v4_downgrade,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowV5V4DowngradeInput",className:"text"},react.createElement(es.x6,null,"Allow users to downgrade their content from encrypted to cleartext metadata type."),warnings?.hasError("allow_v5_v4_downgrade","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All legacy cleartext resource types were previously disabled. Re-enable them if you want users to downgrade their resources.")),warnings?.hasError("allow_v5_v4_downgrade","allow_creation")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"Legacy cleartext metadata should be enabled to allow users to downgrade their resources.")))))),hasSettingsChanges&&react.createElement("div",{className:"warning message form-banner"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministrationActions,{onSaveRequested:this.save,isProcessing:this.state.isProcessing}),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need help?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about the content type support and migration, checkout the dedicated page on the official website.")),react.createElement("a",{className:"button",target:"_blank",rel:"noopener noreferrer",href:"https://passbolt.com/docs"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayContentTypesEncryptedMetadataAdministration.propTypes={context:prop_types_default().object,actionFeedbackContext:prop_types_default().object,dialogContext:prop_types_default().object,createPortal:prop_types_default().func,metadataSettingsServiceWorkerService:prop_types_default().object,metadataKeysServiceWorkerService:prop_types_default().object,resourceTypes:prop_types_default().instanceOf(resourceTypesCollection.A),t:prop_types_default().func};const DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministration=(0,AppContext.L)((0,ActionFeedbackContext.ot)((0,DialogContext.z9)((0,ResourceTypesLocalStorageContext.KH)((0,es.CI)("common")(DisplayContentTypesEncryptedMetadataAdministration)))));DisplayContentTypesEncryptedMetadataAdministration.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"setFormPropertyValue",docblock:"Set a form property value. Trigger the validation if the form has already been submitted once.\n@param name\n@param parsedValue",modifiers:[],params:[{name:"name",optional:!1},{name:"parsedValue",optional:!1}],returns:null,description:"Set a form property value. Trigger the validation if the form has already been submitted once."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleFormSubmit",docblock:"Handle form submission that can be trigger when hitting `enter`\n@param {Event} event The html event triggering the form submit.",modifiers:[],params:[{name:"event",description:"The html event triggering the form submit.",type:{name:"Event"},optional:!1}],returns:null,description:"Handle form submission that can be trigger when hitting `enter`"},{name:"save",docblock:"Save the settings\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the settings"}],displayName:"DisplayContentTypesEncryptedMetadataAdministration",props:{context:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},createPortal:{description:"",type:{name:"func"},required:!1},metadataSettingsServiceWorkerService:{description:"",type:{name:"object"},required:!1},metadataKeysServiceWorkerService:{description:"",type:{name:"object"},required:!1},resourceTypes:{description:"",type:{name:"instanceOf",value:"ResourceTypesCollection"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplayContentTypesMetadataKeyAdministration/DisplayContentTypesMetadataKeyAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Administration_DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),metadataSettingsServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js"),metadataKeysServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataKeysServiceWorkerService.js"),Fingerprint=__webpack_require__("./src/react-extension/components/Common/Fingerprint/Fingerprint.js"),externalGpgKeyEntity=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js"),externalGpgKeyCollection=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyCollection.js");const gpgServiceWorkerService=class GpgServiceWorkerService{constructor(port){this.port=port}async keyInfo(armoredKey){const keyInfoDto=await this.port.request("passbolt.keyring.get-key-info",armoredKey);return new externalGpgKeyEntity.A(keyInfoDto)}async keysInfo(armoredKeys=[]){const keysInfoDto=[];for(const armoredKey of armoredKeys){const keyInfo=await this.keyInfo(armoredKey);keysInfoDto.push(keyInfo)}return new externalGpgKeyCollection.A(keysInfoDto)}};var metadataKeysCollection=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysCollection.js"),metadataKeysSettingsEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysSettingsEntity.js"),externalGpgKeyPairEntity=__webpack_require__("./src/shared/models/entity/gpgkey/external/externalGpgKeyPairEntity.js");class MetadataKeysSettingsFormEntity extends metadataKeysSettingsEntity.A{constructor(dto,options={}){super(dto,options),this._props.generated_metadata_key&&(this._generated_metadata_key=new externalGpgKeyPairEntity.A(this._props.generated_metadata_key,{...options,clone:!1}),delete this._props.generated_metadata_key)}static getSchema(){return{type:"object",required:["allow_usage_of_personal_keys","zero_knowledge_key_share"],properties:{...metadataKeysSettingsEntity.A.getSchema().properties,generated_metadata_key:externalGpgKeyPairEntity.A.getSchema()}}}toDto(){return{...this._props,generated_metadata_key:this.generatedMetadataKey?.toDto({public_key:!0,private_key:!0})||null}}get generatedMetadataKey(){return this._generated_metadata_key||null}set generatedMetadataKey(generatedMetadataKey){if(null!==generatedMetadataKey&&!(generatedMetadataKey instanceof externalGpgKeyPairEntity.A))throw new TypeError("The parameter `generatedMetadataKey` should be of type ExternalGpgKeyPairEntity.");this._generated_metadata_key=generatedMetadataKey}}const metadataKeysSettingsFormEntity=MetadataKeysSettingsFormEntity;var metadataKeyEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataKeyEntity.js");class DisplayContentTypesMetadataKeyAdministration extends react.Component{render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{type:"button",className:"button primary",disabled:this.props.isProcessing,onClick:this.props.onSaveRequested},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayContentTypesMetadataKeyAdministration.propTypes={isProcessing:prop_types_default().bool,onSaveRequested:prop_types_default().func,t:prop_types_default().func};const DisplayContentTypesMetadataKeyAdministrationActions=(0,es.CI)("common")(DisplayContentTypesMetadataKeyAdministration);DisplayContentTypesMetadataKeyAdministration.__docgenInfo={description:"",methods:[],displayName:"DisplayContentTypesMetadataKeyAdministration",props:{isProcessing:{description:"",type:{name:"bool"},required:!1},onSaveRequested:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),portals=__webpack_require__("./src/shared/utils/portals.js"),file_text=__webpack_require__("./src/img/svg/file_text.svg");class DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration extends react.Component{originalSettings=null;formSettings=null;constructor(props){super(props),this.metadataSettingsServiceWorkerService=props.metadataSettingsServiceWorkerService??new metadataSettingsServiceWorkerService.Ay(props.context.port),this.metadataKeysServiceWorkerService=props.metadataKeysServiceWorkerService??new metadataKeysServiceWorkerService.Ay(props.context.port),this.gpgServiceWorkerService=props.gpgServiceWorkerService??new gpgServiceWorkerService(props.context.port),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isProcessing:!0,hasAlreadyBeenValidated:!1,settings:{allow_usage_of_personal_keys:!0,zero_knowledge_key_share:!1,generated_metadata_key:null},activeMetadataKeys:null,expiredMetadataKeys:null}}bindCallbacks(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.generateMetadataKey=this.generateMetadataKey.bind(this),this.save=this.save.bind(this)}async componentDidMount(){await this.loadKeysSettings(),await this.loadKeys(),this.setState({isProcessing:!1})}async loadKeysSettings(){try{const settings=await this.metadataSettingsServiceWorkerService.findKeysSettings();this.originalSettings=new metadataKeysSettingsFormEntity(settings.toDto(),{validate:!1}),this.formSettings=new metadataKeysSettingsFormEntity(settings.toDto(),{validate:!1}),this.setState({settings:this.formSettings.toDto()})}catch(error){await this.handleUnexpectedError(error)}}handleUnexpectedError(error){if(console.error(error),"UserAbortsOperationError"!==error.name)return this.props.dialogContext.open(NotifyError.A,{error})}async loadKeys(){try{const metadataKeys=await this.metadataKeysServiceWorkerService.findAll(),activeMetadataKeys=new metadataKeysCollection.A(metadataKeys);activeMetadataKeys.filterByCallback((metadataKey=>!metadataKey.expired));const expiredMetadataKeys=new metadataKeysCollection.A(metadataKeys);expiredMetadataKeys.filterByCallback((metadataKey=>metadataKey.expired));const armoredKeys=metadataKeys.items.map((metadataKey=>metadataKey.armoredKey)),metadataKeysInfo=await this.gpgServiceWorkerService.keysInfo(armoredKeys);this.setState({activeMetadataKeys,expiredMetadataKeys,metadataKeysInfo})}catch(error){await this.handleUnexpectedError(error)}}hasSettingsChanges=(0,memoize_one_esm.A)(((originalSettings,formSettings,formSettingsDto)=>originalSettings?.hasDiffProps(formSettings)||originalSettings?.generatedMetadataKey!==formSettings?.generatedMetadataKey));handleInputChange(event){if(this.hasAllInputDisabled())return;const{type,checked,value,name}=event.target;let parsedValue=value;"checkbox"===type&&(parsedValue=checked),"allow_usage_of_personal_keys"!==name&&"zero_knowledge_key_share"!==name||(parsedValue="true"===value),this.setFormPropertyValue(name,parsedValue)}setFormPropertyValue(name,parsedValue){this.formSettings.set(name,parsedValue,{validate:!1}),this.setState({settings:this.formSettings.toDto()})}hasAllInputDisabled(){return this.state.isProcessing}async generateMetadataKey(){const metadataKeysInfo=this.state.metadataKeysInfo,activeMetadataKeys=this.state.activeMetadataKeys;this.setState({isProcessing:!0});try{const metadataKeyPair=await this.metadataKeysServiceWorkerService.generateKeyPair(),metadataKeyInfo=await this.gpgServiceWorkerService.keyInfo(metadataKeyPair.publicKey.armoredKey);metadataKeysInfo.push(metadataKeyInfo);const metadataKey=new metadataKeyEntity.A({armored_key:metadataKeyPair.publicKey.armoredKey,fingerprint:metadataKeyInfo.fingerprint});activeMetadataKeys.push(metadataKey),this.formSettings.generatedMetadataKey=metadataKeyPair,this.setState({activeMetadataKeys,metadataKeysInfo,settings:this.formSettings.toDto()})}catch(error){await this.handleUnexpectedError(error)}this.setState({isProcessing:!1})}handleFormSubmit(event){event.preventDefault(),this.save()}async save(){if(this.state.isProcessing)return;this.setState({isProcessing:!0});const validationError=this.validateForm(this.state.settings);if(validationError?.hasErrors())this.setState({isProcessing:!1,hasAlreadyBeenValidated:!0});else{try{await this.saveMetadataKeysSettings(),await this.createMetadataKey(),await this.props.actionFeedbackContext.displaySuccess(this.props.t("The metadata key settings were updated."))}catch(error){await this.handleUnexpectedError(error)}this.setState({isProcessing:!1,settings:this.formSettings.toDto()})}}validateForm=(0,memoize_one_esm.A)((formSettingsDto=>{if(!this.formSettings)return null;let validationErrors=this.formSettings.validate();return this.state.activeMetadataKeys.length||(validationErrors=validationErrors||new entityValidationError.A,validationErrors.addError("generated_metadata_key","required",this.props.t("A shared metadata key is required."))),validationErrors}));async saveMetadataKeysSettings(){const metadataKeysSettings=new metadataKeysSettingsEntity.A(this.formSettings.toDto()),savedMetadataKeysSettings=await this.metadataSettingsServiceWorkerService.saveKeysSettings(metadataKeysSettings);this.originalSettings=new metadataKeysSettingsFormEntity({...this.originalSettings.toDto(),...savedMetadataKeysSettings.toDto()}),this.formSettings=new metadataKeysSettingsFormEntity({...this.formSettings.toDto(),...savedMetadataKeysSettings.toDto()})}async createMetadataKey(){if(!this.formSettings.generatedMetadataKey)return;const metadataKey=await this.metadataKeysServiceWorkerService.createKey(this.formSettings.generatedMetadataKey);this.state.activeMetadataKeys.pushOrReplace(metadataKey,{},{replacePropertyName:"fingerprint"}),this.formSettings.generatedMetadataKey=null}render(){const errors=this.state.hasAlreadyBeenValidated?this.validateForm(this.state.settings):null,hasSettingsChanges=this.hasSettingsChanges(this.originalSettings,this.formSettings,this.state.settings);return react.createElement("div",{className:"row"},react.createElement("div",{id:"content-types-metadata-key-settings",className:"main-column"},react.createElement("div",{className:"main-content"},react.createElement("form",{onSubmit:this.handleFormSubmit,"data-testid":"submit-form"},react.createElement("h3",{className:"title"},react.createElement("label",null,react.createElement(es.x6,null,"Metadata key"))),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"This section controls the layer of encryption that is used to protect metadata such as the name of a resource, URIs, etc.")),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Metadata key policy")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"It is possible for users to use their personal keys to encrypt resources metadata for more security. However you can elect to enforce the use of the shared metadata keys for all resources metadata for auditing purposes. Secrets such as passwords will always be encrypted using the user personal keys.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+(!0===this.state.settings.allow_usage_of_personal_keys?"checked":"")},react.createElement("input",{type:"radio",value:"true",onChange:this.handleInputChange,name:"allow_usage_of_personal_keys",checked:!0===this.state.settings.allow_usage_of_personal_keys,id:"allowUsageOfPersonalKeysInput",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowUsageOfPersonalKeysInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Allow the use of personal keys. (Recommended)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users can use shared and personal keys. By default personal resources that are not shared will be encrypted with the users personal keys."),react.createElement("br",null)))),react.createElement("div",{className:"input radio "+(!1===this.state.settings.allow_usage_of_personal_keys?"checked":"")},react.createElement("input",{type:"radio",value:"false",onChange:this.handleInputChange,name:"allow_usage_of_personal_keys",checked:!1===this.state.settings.allow_usage_of_personal_keys,id:"disallowUsageOfPersonalKeysInput",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"disallowUsageOfPersonalKeysInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Enforce the use of shared metadata keys.")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"By default, metadata wil be encrypted with the shared keys. It is not possible to use personal keys to encrypt metadata."),react.createElement("br",null))))),react.createElement("h4",null,react.createElement(es.x6,null,"Zero knowledge (Coming soon)")),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"This section defines how the shared metadata key is shared with users.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio no-hover "+(!1===this.state.settings.zero_knowledge_key_share?"checked":"")},react.createElement("input",{type:"radio",value:"true",name:"zero_knowledge_key_share",checked:!1===this.state.settings.zero_knowledge_key_share,id:"disableZeroKnowledgeKeyShareInput",disabled:!0}),react.createElement("label",{htmlFor:"disableZeroKnowledgeKeyShareInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"User-friendly mode (Better on-boarding)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"The shared metadata key is accessible to the server and can be shared by the server when a user completes the setup. In practice, an attacker with full server access can see the shared metadata."),react.createElement("br",null)))),react.createElement("div",{className:"input radio no-hover "+(!0===this.state.settings.zero_knowledge_key_share?"checked":"")},react.createElement("input",{type:"radio",value:"true",name:"zero_knowledge_key_share",checked:!0===this.state.settings.zero_knowledge_key_share,id:"enableZeroKnowledgeKeyShareInput",disabled:!0}),react.createElement("label",{htmlFor:"enableZeroKnowledgeKeyShareInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Zero-knowledge mode (More secure)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"The shared metadata key is not available to the server and must be shared with users by the admins. New users are not allowed to create or access shared content until they are provided the metadata key. It is recommended to rotate the key if you switch to that mode."),react.createElement("br",null))))),react.createElement("h4",null,react.createElement(es.x6,null,"Shared metadata keys")),react.createElement("div",{className:`metadata-key-info ${errors?.hasError("generated_metadata_key","required")&&"error"}`},this.state.activeMetadataKeys?.length>0&&react.createElement("div",{id:"metadata-active-keys"},this.state.activeMetadataKeys?.items.map((metadataKey=>{const metadataKeyInfo=this.state.metadataKeysInfo?.getFirst("fingerprint",metadataKey.fingerprint);return react.createElement("table",{key:metadataKey.fingerprint,className:"table-info"},react.createElement("tbody",null,react.createElement("tr",{className:"fingerprint"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Fingerprint")),react.createElement("td",{className:"value"},react.createElement(Fingerprint.A,{fingerprint:metadataKey.fingerprint}))),react.createElement("tr",{className:"algorithm"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Algorithm")),react.createElement("td",{className:"value"},metadataKeyInfo?.algorithm," ",metadataKeyInfo?.curve)),react.createElement("tr",{className:"key-length"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Key length")),react.createElement("td",{className:"value"},metadataKeyInfo?.length)),react.createElement("tr",{className:"created"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Created")),metadataKey.created&&react.createElement("td",{className:"value"},react.createElement("span",{title:metadataKey.created},(0,dateUtils.kD)(metadataKey.created,this.props.t,this.props.context.locale))),!metadataKey.created&&react.createElement("td",{className:"empty-value"},react.createElement(es.x6,null,"Pending")))))}))),!this.state.activeMetadataKeys?.length&&react.createElement("div",{id:"no-metadata-active-keys"},react.createElement("table",{className:"table-info"},react.createElement("tbody",null,react.createElement("tr",null,react.createElement("td",{className:"empty-value"},react.createElement(es.x6,null,"You need to generate a new shared key to enable encrypted metadata.")),react.createElement("td",{className:"table-button"},react.createElement("button",{className:"button primary medium",type:"button",disabled:this.hasAllInputDisabled(),onClick:this.generateMetadataKey,"data-testid":"generate-key-buton"},react.createElement(es.x6,null,"Generate key")))),errors?.hasError("generated_metadata_key","required")&&react.createElement("tr",{className:"error-message"},react.createElement(es.x6,null,"A shared metadata key is required."))))),this.state.expiredMetadataKeys?.length>0&&react.createElement(react.Fragment,null,react.createElement("h4",null,react.createElement(es.x6,null,"Previous keys")),react.createElement("div",{id:"metadata-expired-keys"},this.state.expiredMetadataKeys?.items.map((metadataKey=>{const metadataKeyInfo=this.state.metadataKeysInfo.getFirst("fingerprint",metadataKey.fingerprint);return react.createElement("table",{key:metadataKey.fingerprint,className:"table-info"},react.createElement("tbody",null,react.createElement("tr",{className:"fingerprint"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Fingerprint")),react.createElement("td",{className:"value"},react.createElement(Fingerprint.A,{fingerprint:metadataKey.fingerprint}))),react.createElement("tr",{className:"algorithm"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Algorithm")),react.createElement("td",{className:"value"},metadataKeyInfo?.algorithm," ",metadataKeyInfo?.curve)),react.createElement("tr",{className:"key-length"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Key length")),react.createElement("td",{className:"value"},metadataKeyInfo?.length)),react.createElement("tr",{className:"created"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Created")),react.createElement("td",{className:"value"},react.createElement("span",{title:metadataKey.created},(0,dateUtils.kD)(metadataKey.created,this.props.t,this.props.context.locale)))),react.createElement("tr",{className:"expired"},react.createElement("td",{className:"label"},react.createElement(es.x6,null,"Expired")),react.createElement("td",{className:"value"},react.createElement("span",{title:metadataKey.expired},(0,dateUtils.kD)(metadataKey.expired,this.props.t,this.props.context.locale))))))}))))))),hasSettingsChanges&&react.createElement("div",{className:"warning message form-banner"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification.")))),errors?.hasError("generated_metadata_key","required")&&react.createElement("div",{className:"warning message form-banner"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"A shared metadata key is required to save the metadata keys settings."))))),react.createElement(DisplayContentTypesMetadataKeyAdministrationActions,{onSaveRequested:this.save,isProcessing:this.state.isProcessing}),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need help?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about the content type support and migration, checkout the dedicated page on the official website.")),react.createElement("a",{className:"button",target:"_blank",rel:"noopener noreferrer",href:"https://passbolt.com/docs"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration.propTypes={context:prop_types_default().object,actionFeedbackContext:prop_types_default().object,dialogContext:prop_types_default().object,createPortal:prop_types_default().func,metadataSettingsServiceWorkerService:prop_types_default().object,metadataKeysServiceWorkerService:prop_types_default().object,gpgServiceWorkerService:prop_types_default().object,t:prop_types_default().func};const Administration_DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration=(0,AppContext.L)((0,DialogContext.z9)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration))));DisplayContentTypesMetadataKeyAdministration_DisplayContentTypesMetadataKeyAdministration.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"loadKeysSettings",docblock:"Load the metadata key settings.\nIf the settings cannot be loaded, display the error dialog.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Load the metadata key settings.\nIf the settings cannot be loaded, display the error dialog."},{name:"handleUnexpectedError",docblock:"Handle unexpected error\n@param {Error} error The error\n@returns {Promise<string>} Return the dialog key identifier.",modifiers:[],params:[{name:"error",description:"The error",type:{name:"Error"},optional:!1}],returns:{description:"Return the dialog key identifier.",type:{name:"Promise",elements:[{name:"string"}]}},description:"Handle unexpected error"},{name:"loadKeys",docblock:"Load the metadata keys.\nIf the metadata keys cannot be loaded, display the error dialog.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Load the metadata keys.\nIf the metadata keys cannot be loaded, display the error dialog."},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"setFormPropertyValue",docblock:"Set a form property value. Trigger the validation if the form has already been submitted once.\n@param name\n@param parsedValue",modifiers:[],params:[{name:"name",optional:!1},{name:"parsedValue",optional:!1}],returns:null,description:"Set a form property value. Trigger the validation if the form has already been submitted once."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"generateMetadataKey",docblock:"Generate a new metadata key\n@return {Promise}",modifiers:["async"],params:[],returns:{type:{name:"Promise"}},description:"Generate a new metadata key"},{name:"handleFormSubmit",docblock:"Handle form submission that can be trigger when hitting `enter`\n@param {Event} event The html event triggering the form submit.",modifiers:[],params:[{name:"event",description:"The html event triggering the form submit.",type:{name:"Event"},optional:!1}],returns:null,description:"Handle form submission that can be trigger when hitting `enter`"},{name:"save",docblock:"Save the settings.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the settings."},{name:"saveMetadataKeysSettings",docblock:"Save the metadata keys settings.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the metadata keys settings."},{name:"createMetadataKey",docblock:"Create the metadata key.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Create the metadata key."}],displayName:"DisplayContentTypesMetadataKeyAdministration",props:{context:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},createPortal:{description:"",type:{name:"func"},required:!1},metadataSettingsServiceWorkerService:{description:"",type:{name:"object"},required:!1},metadataKeysServiceWorkerService:{description:"",type:{name:"object"},required:!1},gpgServiceWorkerService:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplayInternationalizationAdministration/DisplayInternationalizationAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayInternationalizationAdministration_DisplayInternationalizationAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),heart=__webpack_require__("./src/img/svg/heart.svg"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),AdministrationInternationalizationContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationInternationalizationContext/AdministrationInternationalizationContext.js");class DisplayAdministrationInternationalisationActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}async handleSaveClick(){try{await this.props.adminInternationalizationContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}finally{this.props.adminInternationalizationContext.setProcessing(!1)}}isSaveEnabled(){return!this.props.adminInternationalizationContext.isProcessing()&&this.props.adminInternationalizationContext.hasLocaleChanges()}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this)}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The internationalization settings were updated."))}async handleSaveError(error){"UserAbortsOperationError"!==error.name&&(console.error(error),await this.handleError(error))}async handleError(error){await this.props.actionFeedbackContext.displayError(error.message)}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary form",id:"save-settings",type:"button",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationInternationalisationActions.propTypes={context:prop_types_default().object,adminInternationalizationContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationInternationalisationActions_DisplayAdministrationInternationalisationActions=(0,AdministrationInternationalizationContext.A3)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationInternationalisationActions)));DisplayAdministrationInternationalisationActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."},{name:"handleError",docblock:"handle error to display the error dialog\n@param error",modifiers:["async"],params:[{name:"error",optional:!1}],returns:null,description:"handle error to display the error dialog"}],displayName:"DisplayAdministrationInternationalisationActions",props:{context:{description:"",type:{name:"object"},required:!1},adminInternationalizationContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var portals=__webpack_require__("./src/shared/utils/portals.js");class DisplayInternationalizationAdministration extends react.Component{constructor(props){super(props),this.bindCallbacks()}componentDidMount(){this.props.adminInternationalizationContext.findLocale()}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminInternationalizationContext.clearContext()}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this)}handleInputChange(event){this.props.adminInternationalizationContext.setLocale(event.target.value)}get supportedLocales(){return this.props.context.siteSettings.supportedLocales?this.props.context.siteSettings.supportedLocales.map((supportedLocale=>({value:supportedLocale.locale,label:supportedLocale.label}))):[]}render(){const lang=this.props.adminInternationalizationContext.getLocale(),hasWarnings=null!==this.props.adminInternationalizationContext.getCurrentLocale()&&this.props.adminInternationalizationContext.hasLocaleChanges();return react.createElement("div",{className:"row"},react.createElement("div",{className:"internationalisation-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title"},react.createElement(es.x6,null,"Internationalisation")),react.createElement("form",{className:"form"},react.createElement("div",{className:"select-wrapper input"},react.createElement("label",{htmlFor:"app-locale-input"},react.createElement(es.x6,null,"Language")),react.createElement(Select.A,{className:"medium",id:"locale-input",name:"locale",items:this.supportedLocales,value:lang,onChange:this.handleInputChange}),react.createElement("p",null,react.createElement(es.x6,null,"The default language of the organisation."))))),hasWarnings&&react.createElement("div",{className:"warning message"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayAdministrationInternationalisationActions_DisplayAdministrationInternationalisationActions,null),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Want to contribute?")),react.createElement("p",null,react.createElement(es.x6,null,"Your language is missing or you discovered an error in the translation, help us to improve passbolt.")),react.createElement("a",{className:"button",href:"https://help.passbolt.com/contribute/translation",target:"_blank",rel:"noopener noreferrer"},react.createElement(heart.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Contribute")))),document.getElementById("administration-help-panel")))}}DisplayInternationalizationAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminInternationalizationContext:prop_types_default().object,t:prop_types_default().func};const DisplayInternationalizationAdministration_DisplayInternationalizationAdministration=(0,AppContext.L)((0,AdministrationInternationalizationContext.A3)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayInternationalizationAdministration))));DisplayInternationalizationAdministration.__docgenInfo={description:"This component allows to display the internationalisation for the administration",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"supportedLocales",docblock:"Get the supported locales\n@returns {array}",modifiers:["get"],params:[],returns:{type:{name:"array"}},description:"Get the supported locales"}],displayName:"DisplayInternationalizationAdministration",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminInternationalizationContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplayMfaPolicyAdministration/DisplayMfaPolicyAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayMfaPolicyAdministration_DisplayMfaPolicyAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),file_text=__webpack_require__("./src/img/svg/file_text.svg"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),AdministrationMfaPolicyContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationMfaPolicy/AdministrationMfaPolicyContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js");class DisplayAdministrationMfaPolicyActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSave=this.handleSave.bind(this)}isSaveEnabled(){return!this.props.adminMfaPolicyContext.isProcessing()}async handleSave(){if(this.isSaveEnabled())try{await this.props.adminMfaPolicyContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}finally{this.props.adminMfaPolicyContext.setProcessing(!1)}}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The MFA policy settings were updated."))}async handleSaveError(error){"UserAbortsOperationError"!==error.name&&(console.error(error),await this.props.actionFeedbackContext.displayError(error.message))}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary form",type:"button",disabled:!this.isSaveEnabled(),id:"save-settings",onClick:this.handleSave},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationMfaPolicyActions.propTypes={adminMfaPolicyContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationMfaPolicyActions_DisplayAdministrationMfaPolicyActions=(0,AdministrationMfaPolicyContext.yS)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationMfaPolicyActions)));DisplayAdministrationMfaPolicyActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"handleSave",docblock:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."}],displayName:"DisplayAdministrationMfaPolicyActions",props:{adminMfaPolicyContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var portals=__webpack_require__("./src/shared/utils/portals.js");class DisplayMfaPolicyAdministration extends react.Component{constructor(props){super(props),this.bindCallbacks()}async componentDidMount(){await this.findSettings()}componentWillUnmount(){this.props.adminMfaPolicyContext.clearContext()}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this)}async findSettings(){await this.props.adminMfaPolicyContext.findSettings()}async handleInputChange(event){const field=event.target.name;let value=event.target.value;"rememberMeForAMonth"===field&&(value=event.target.checked),this.props.adminMfaPolicyContext.setSettings(field,value)}hasAllInputDisabled(){return this.props.adminMfaPolicyContext.isProcessing()}render(){const settings=this.props.adminMfaPolicyContext.getSettings();return react.createElement("div",{className:"row"},react.createElement("div",{className:"mfa-policy-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title",id:"mfa-policy-settings-title"},react.createElement(es.x6,null,"MFA Policy")),react.createElement("form",{className:"form"},react.createElement("h4",{className:"no-border",id:"mfa-policy-subtitle"},react.createElement(es.x6,null,"Default users multi factor authentication policy")),react.createElement("p",{id:"mfa-policy-description"},react.createElement(es.x6,null,"You can choose the default behaviour of multi factor authentication for all users.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+("mandatory"===settings?.policy?"checked":""),id:"mfa-policy-mandatory"},react.createElement("input",{type:"radio",value:"mandatory",onChange:this.handleInputChange,name:"policy",checked:"mandatory"===settings?.policy,id:"mfa-policy-mandatory-radio",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"mfa-policy-mandatory-radio"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Prompt")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users have to enable multi factor authentication. If they don't, they will be reminded every time they log in.")))),react.createElement("div",{className:"input radio "+("opt-in"===settings?.policy?"checked":""),id:"mfa-policy-opt-in"},react.createElement("input",{type:"radio",value:"opt-in",onChange:this.handleInputChange,name:"policy",checked:"opt-in"===settings?.policy,id:"mfa-policy-opt-in-radio",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"mfa-policy-opt-in-radio"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Opt-in (default)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users have the choice to enable multi factor authentication in their profile workspace."))))),react.createElement("h4",{id:"mfa-policy-remember-subtitle"},"Remember a device for a month"),react.createElement("span",{className:"input toggle-switch form-element "},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"rememberMeForAMonth",onChange:this.handleInputChange,disabled:this.hasAllInputDisabled(),checked:settings?.rememberMeForAMonth,id:"remember-toggle-button"}),react.createElement("label",{htmlFor:"remember-toggle-button"},react.createElement(es.x6,null,"Allow “Remember this device for a month.“ option during MFA."))))),this.props.adminMfaPolicyContext.hasSettingsChanges()&&react.createElement("div",{className:"warning message",id:"mfa-policy-setting-banner"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayAdministrationMfaPolicyActions_DisplayAdministrationMfaPolicyActions,null),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need some help?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about MFA policy settings, checkout the dedicated page on the help website.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/authentication/mfa-policy",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayMfaPolicyAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminMfaPolicyContext:prop_types_default().object,t:prop_types_default().func};const DisplayMfaPolicyAdministration_DisplayMfaPolicyAdministration=(0,AppContext.L)((0,AdministrationWorkspaceContext.Kk)((0,AdministrationMfaPolicyContext.yS)((0,es.CI)("common")(DisplayMfaPolicyAdministration))));DisplayMfaPolicyAdministration.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"findSettings",docblock:"Bind callbacks methods",modifiers:["async"],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle policy input change.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle policy input change."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"}],displayName:"DisplayMfaPolicyAdministration",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminMfaPolicyContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplaySelfRegistrationAdministration/DisplaySelfRegistrationAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplaySelfRegistrationAdministration_DisplaySelfRegistrationAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),DomainUtil=__webpack_require__("./src/react-extension/lib/Domain/DomainUtil.js"),MapObject=__webpack_require__("./src/react-extension/lib/Map/MapObject.js"),AdministrationSelfRegistrationContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationSelfRegistration/AdministrationSelfRegistrationContext.js");const map=new Map;function setRef(key){if("string"!=typeof key)return console.warn("useDynamicRefs: Cannot set ref without key");const ref=react.createRef();return map.set(key,ref),ref}function getRef(key){return key?map.get(key):console.warn("useDynamicRefs: Cannot get ref without key")}const DynamicRef=function useDynamicRefs(){return{getRef,setRef}};var DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),SelfRegistrationDomainsViewModel=__webpack_require__("./src/shared/models/selfRegistration/SelfRegistrationDomainsViewModel.js"),dist=__webpack_require__("./node_modules/debounce-promise/dist/index.js"),dist_default=__webpack_require__.n(dist),portals=__webpack_require__("./src/shared/utils/portals.js"),file_text=__webpack_require__("./src/img/svg/file_text.svg");class DisplayAdministrationSelfRegistrationActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSave=this.handleSave.bind(this)}get allowedDomains(){return this.props.adminSelfRegistrationContext.getAllowedDomains()}isSaveEnabled(){let isFirstUsageWithoutChanges=!1;return this.props.adminSelfRegistrationContext.getCurrentSettings()?.provider||(isFirstUsageWithoutChanges=!this.props.adminSelfRegistrationContext.hasSettingsChanges()),!this.props.adminSelfRegistrationContext.isProcessing()&&!isFirstUsageWithoutChanges}async handleSave(){this.isSaveEnabled()&&this.props.adminSelfRegistrationContext.save()}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary form",type:"button",disabled:!this.isSaveEnabled(),id:"save-settings",onClick:this.handleSave},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationSelfRegistrationActions.propTypes={adminSelfRegistrationContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationSelfRegistrationActions_DisplayAdministrationSelfRegistrationActions=(0,es.CI)("common")((0,AdministrationSelfRegistrationContext.v6)(DisplayAdministrationSelfRegistrationActions));DisplayAdministrationSelfRegistrationActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"allowedDomains",docblock:"return the allowed domains",modifiers:["get"],params:[],returns:null,description:"return the allowed domains"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"handleSave",docblock:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user"}],displayName:"DisplayAdministrationSelfRegistrationActions",props:{adminSelfRegistrationContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class DisplaySelfRegistrationAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.dynamicRefs=DynamicRef(),this.checkForPublicDomainDebounce=dist_default()(this.checkForWarnings,300),this.bindCallbacks()}async componentDidMount(){await this.findSettings()}componentDidUpdate(){this.shouldFocusOnError(),this.shouldCheckWarnings()}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminSelfRegistrationContext.clearContext()}get defaultState(){return{isEnabled:!1,warnings:new Map}}bindCallbacks(){this.handleToggleClicked=this.handleToggleClicked.bind(this),this.handleAddRowClick=this.handleAddRowClick.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleDeleteRow=this.handleDeleteRow.bind(this)}get currentUser(){return this.props.context.loggedInUser}get allowedDomains(){return this.props.adminSelfRegistrationContext.getAllowedDomains()}async findSettings(){await this.props.adminSelfRegistrationContext.findSettings(),this.setState({isEnabled:this.allowedDomains.size>0}),this.checkForWarnings(),this.validateForm()}checkForWarnings(){this.setState({warnings:new Map},(()=>{this.allowedDomains.forEach(((value,key)=>this.checkDomainIsProfessional(key,value)))}))}setupSettings(){if(this.props.adminSelfRegistrationContext.setDomains(new SelfRegistrationDomainsViewModel.A(this.props.adminSelfRegistrationContext.getCurrentSettings())),this.checkForWarnings(),0===this.allowedDomains.size){const domain=DomainUtil.A.extractDomainFromEmail(this.currentUser?.username);DomainUtil.A.checkDomainValidity(domain),this.populateUserDomain(domain)}}shouldFocusOnError(){const onFocus=this.props.adminSelfRegistrationContext.shouldFocus(),[error]=this.props.adminSelfRegistrationContext.getErrors().keys();if(error&&onFocus){this.dynamicRefs.getRef(error).current.focus(),this.props.adminSelfRegistrationContext.setFocus(!1)}}shouldCheckWarnings(){this.props.adminSelfRegistrationContext.isSaved()&&(this.props.adminSelfRegistrationContext.setSaved(!1),this.checkForWarnings())}populateUserDomain(domain){const row=DomainUtil.A.isProfessional(domain)?domain:"";this.addRow(row)}addRow(value=""){const uuid=(0,v4.A)();this.props.adminSelfRegistrationContext.setAllowedDomains(uuid,value,(()=>{const inputRef=this.dynamicRefs.getRef(uuid);inputRef?.current.focus()}))}handleDeleteRow(key){if(this.canDelete()){const domains=this.allowedDomains;domains.delete(key),this.props.adminSelfRegistrationContext.setDomains({allowedDomains:domains}),this.validateForm(),this.checkForWarnings()}}hasWarnings(){return this.state.warnings.size>0}hasAllInputDisabled(){return this.props.adminSelfRegistrationContext.isProcessing()}handleToggleClicked(){this.setState({isEnabled:!this.state.isEnabled},(()=>{this.state.isEnabled?this.setupSettings():(this.props.adminSelfRegistrationContext.setDomains({allowedDomains:new Map}),this.props.adminSelfRegistrationContext.setErrors(new Map))}))}handleAddRowClick(){this.addRow()}checkDomainIsProfessional(uuid,value){this.setState((prevState=>{const warnings=MapObject.A.clone(prevState.warnings);return DomainUtil.A.isProfessional(value)?warnings.delete(uuid):warnings.set(uuid,"This is not a safe professional domain"),{warnings}}))}handleInputChange(event){const value=event.target.value,uuid=event.target.name;this.props.adminSelfRegistrationContext.setAllowedDomains(uuid,value,(()=>this.validateForm())),this.checkForPublicDomainDebounce()}validateForm(){this.props.adminSelfRegistrationContext.validateForm()}canDelete(){return this.allowedDomains.size>1}render(){const isSubmitted=this.props.adminSelfRegistrationContext.isSubmitted(),errors=this.props.adminSelfRegistrationContext.getErrors();return react.createElement("div",{className:"row"},react.createElement(react.Fragment,null,react.createElement("div",{className:"self-registration main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",null,react.createElement("span",{className:"input toggle-switch form-element"},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"settings-toggle",onChange:this.handleToggleClicked,checked:this.state.isEnabled,disabled:this.hasAllInputDisabled(),id:"settings-toggle"}),react.createElement("label",{htmlFor:"settings-toggle"},react.createElement(es.x6,null,"Self Registration")))),!this.state.isEnabled&&react.createElement("p",{className:"description",id:"disabled-description"},react.createElement(es.x6,null,"User self registration is disabled.")," ",react.createElement(es.x6,null,"Only administrators can invite users to register.")),this.state.isEnabled&&react.createElement("div",{className:"self-registration-form"},react.createElement("div",{id:"self-registration-subtitle",className:`input ${this.hasWarnings()&&"warning"} ${isSubmitted&&errors.size>0&&"error"}`},react.createElement("label",{id:"enabled-label"},react.createElement(es.x6,null,"Email domain safe list"))),react.createElement("p",{className:"description",id:"enabled-description"},react.createElement(es.x6,null,"All the users with an email address ending with the domain in the safe list are allowed to register on passbolt.")),MapObject.A.iterators(this.allowedDomains).map((key=>react.createElement("div",{key,className:"input"},react.createElement("div",{className:"domain-row"},react.createElement("input",{type:"text",className:"full-width",onChange:this.handleInputChange,id:`input-${key}`,name:key,value:this.allowedDomains.get(key),disabled:!this.hasAllInputDisabled,ref:this.dynamicRefs.setRef(key),placeholder:this.props.t("domain")}),react.createElement("button",{type:"button",disabled:!this.canDelete(),className:"button-icon",id:`delete-${key}`,onClick:()=>this.handleDeleteRow(key)},react.createElement(Icon.A,{name:"trash"}))),this.hasWarnings()&&this.state.warnings.get(key)&&react.createElement("div",{id:"domain-name-input-feedback",className:"warning-message"},react.createElement(es.x6,null,this.state.warnings.get(key))),errors.get(key)&&isSubmitted&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,errors.get(key)))))),react.createElement("div",{className:"domain-add"},react.createElement("button",{type:"button",onClick:this.handleAddRowClick},react.createElement(Icon.A,{name:"add"}),react.createElement("span",null,react.createElement(es.x6,null,"Add")))))),this.props.adminSelfRegistrationContext.hasSettingsChanges()&&react.createElement("div",{className:"warning message",id:"self-registration-setting-overridden-banner"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayAdministrationSelfRegistrationActions_DisplayAdministrationSelfRegistrationActions,null)),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"What is user self registration?")),react.createElement("p",null,react.createElement(es.x6,null,"User self registration enables users with an email from a whitelisted domain to create their passbolt account without prior admin invitation.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/user-provisioning/self-registration/",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplaySelfRegistrationAdministration.propTypes={dialogContext:prop_types_default().any,context:prop_types_default().any,adminSelfRegistrationContext:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,t:prop_types_default().func};const DisplaySelfRegistrationAdministration_DisplaySelfRegistrationAdministration=(0,AppContext.L)((0,DialogContext.z9)((0,AdministrationSelfRegistrationContext.v6)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplaySelfRegistrationAdministration)))));DisplaySelfRegistrationAdministration.__docgenInfo={description:"This component allows to display the Self registration for the administration",methods:[{name:"defaultState",docblock:"Get default state\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"currentUser",docblock:"return the current user",modifiers:["get"],params:[],returns:null,description:"return the current user"},{name:"allowedDomains",docblock:"return the allowed domains",modifiers:["get"],params:[],returns:null,description:"return the allowed domains"},{name:"findSettings",docblock:"Bind callbacks methods",modifiers:["async"],params:[],returns:null,description:"Bind callbacks methods"},{name:"checkForWarnings",docblock:"We check for warnings and errors into the form",modifiers:[],params:[],returns:null,description:"We check for warnings and errors into the form"},{name:"setupSettings",docblock:"setup settings for the first time",modifiers:[],params:[],returns:null,description:"setup settings for the first time"},{name:"shouldFocusOnError",docblock:"set focus to the first input error",modifiers:[],params:[],returns:null,description:"set focus to the first input error"},{name:"shouldCheckWarnings",docblock:"in case of saved settings we should check warnings again",modifiers:[],params:[],returns:null,description:"in case of saved settings we should check warnings again"},{name:"populateUserDomain",docblock:"Check domain and populate it if it is a professional\n@param {string} domain",modifiers:[],params:[{name:"domain",type:{name:"string"},optional:!1}],returns:null,description:"Check domain and populate it if it is a professional"},{name:"addRow",docblock:"Check domain and populate it if is a professional domain\n@param {string} domain",modifiers:[],params:[{name:"value",optional:!0}],returns:null,description:"Check domain and populate it if is a professional domain"},{name:"handleDeleteRow",docblock:"Remove a domain row\n@param {string} key",modifiers:[],params:[{name:"key",type:{name:"string"},optional:!1}],returns:null,description:"Remove a domain row"},{name:"hasWarnings",docblock:"Check if inputs has warnings",modifiers:[],params:[],returns:null,description:"Check if inputs has warnings"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleToggleClicked",docblock:"Handle the click on the self registration title\n@param {UserDirectory} userDirectory state",modifiers:[],params:[],returns:null,description:"Handle the click on the self registration title"},{name:"handleAddRowClick",docblock:"Handle the click on the add button",modifiers:[],params:[],returns:null,description:"Handle the click on the add button"},{name:"checkDomainIsProfessional",docblock:"check if domain is a professional one",modifiers:[],params:[{name:"uuid",optional:!1},{name:"value",optional:!1}],returns:null,description:"check if domain is a professional one"},{name:"handleInputChange",docblock:"Handle input change\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle input change"},{name:"validateForm",docblock:"validate the form\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"validate the form"},{name:"canDelete",docblock:"we cannot delete a row if we have only one domaine\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"we cannot delete a row if we have only one domaine"}],displayName:"DisplaySelfRegistrationAdministration",props:{dialogContext:{description:"",type:{name:"any"},required:!1},context:{description:"",type:{name:"any"},required:!1},adminSelfRegistrationContext:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplaySubscriptionKey/DisplaySubscriptionKey.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplaySubscriptionKey_DisplaySubscriptionKey});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),NavigationContext=__webpack_require__("./src/react-extension/contexts/NavigationContext.js"),AnimatedFeedback=__webpack_require__("./src/shared/components/Icons/AnimatedFeedback.js"),EditSubscriptionKey=__webpack_require__("./src/react-extension/components/Administration/EditSubscriptionKey/EditSubscriptionKey.js");class SubscriptionActionService{constructor(props){this.context=props.context,this.dialogContext=props.dialogContext,this.subscriptionContext=props.adminSubscriptionContext}static getInstance(context){return this.instance||(this.instance=new SubscriptionActionService(context)),this.instance}static killInstance(){this.instance=null}editSubscription(){const editSubscriptionKey={key:this.subscriptionContext.getSubscription().data};this.context.setContext({editSubscriptionKey}),this.dialogContext.open(EditSubscriptionKey.A)}}const subscription_SubscriptionActionService=SubscriptionActionService;var AdministrationSubscription=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationSubscription/AdministrationSubscription.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js"),portals=__webpack_require__("./src/shared/utils/portals.js"),email=__webpack_require__("./src/img/svg/email.svg");class DisplaySubscriptionKey extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks(),this.subscriptionActionService=subscription_SubscriptionActionService.getInstance(this.props)}get defaultState(){return{activeUsers:null}}async componentDidMount(){this.findActiveUsers(),await this.findSubscriptionKey()}componentWillUnmount(){this.props.adminSubscriptionContext.clearContext(),subscription_SubscriptionActionService.killInstance(),this.mfaFormService=null}bindCallbacks(){this.handleRenewKey=this.handleRenewKey.bind(this),this.handleUpdateKey=this.handleUpdateKey.bind(this)}async findActiveUsers(){const activeUsers=await this.props.adminSubscriptionContext.getActiveUsers();this.setState({activeUsers})}async findSubscriptionKey(){this.props.adminSubscriptionContext.findSubscriptionKey()}handleRenewKey(){const subscription=this.props.adminSubscriptionContext.getSubscription();this.hasLimitUsersExceeded()?this.props.navigationContext.onGoToNewTab(`https://www.passbolt.com/subscription/ee/update/qty?subscription_id=${subscription.subscriptionId}&customer_id=${subscription.customerId}`):(this.hasSubscriptionKeyExpired()||this.hasSubscriptionKeyGoingToExpire())&&this.props.navigationContext.onGoToNewTab(`https://www.passbolt.com/subscription/ee/update/renew?subscription_id=${subscription.subscriptionId}&customer_id=${subscription.customerId}`)}handleUpdateKey(){this.subscriptionActionService.editSubscription()}hasSubscriptionKeyExpired(){return luxon.c9.fromISO(this.props.adminSubscriptionContext.getSubscription().expiry)<luxon.c9.now()}hasSubscriptionKeyGoingToExpire(){return luxon.c9.fromISO(this.props.adminSubscriptionContext.getSubscription().expiry)<luxon.c9.now().plus({days:30})&&!this.hasSubscriptionKeyExpired()}hasSubscriptionKey(){return Boolean(this.props.adminSubscriptionContext.getSubscription().data)}get shouldShowRenewKey(){return this.hasSubscriptionKey()&&(this.hasLimitUsersExceeded()||this.hasSubscriptionKeyExpired()||this.hasSubscriptionKeyGoingToExpire())}hasLimitUsersExceeded(){return this.props.adminSubscriptionContext.getSubscription().users<this.state.activeUsers}hasValidSubscription(){return this.hasSubscriptionKey()&&!this.hasLimitUsersExceeded()&&!this.hasSubscriptionKeyExpired()}hasInvalidSubscription(){return!this.hasSubscriptionKey()||this.hasLimitUsersExceeded()||this.hasSubscriptionKeyExpired()}formatDate(date){try{return luxon.c9.fromISO(date).setLocale(this.props.context.locale).toLocaleString(luxon.c9.DATE_SHORT)}catch(error){return""}}get translate(){return this.props.t}render(){const subscription=this.props.adminSubscriptionContext.getSubscription(),isProcessing=this.props.adminSubscriptionContext.isProcessing();return react.createElement("div",{className:"row"},!isProcessing&&react.createElement(react.Fragment,null,react.createElement("div",{className:"subscription-key main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title"},react.createElement(es.x6,null,"Subscription key details")),react.createElement("div",{className:"feedback-card"},this.hasValidSubscription()&&!this.hasSubscriptionKeyGoingToExpire()&&react.createElement(AnimatedFeedback.A,{name:"success"}),this.hasInvalidSubscription()&&react.createElement(AnimatedFeedback.A,{name:"error"}),this.hasValidSubscription()&&this.hasSubscriptionKeyGoingToExpire()&&react.createElement(AnimatedFeedback.A,{name:"warning"}),react.createElement("div",{className:"subscription-information"},!this.hasSubscriptionKey()&&react.createElement(react.Fragment,null,react.createElement("h4",{className:"subscription-information-subtitle"},react.createElement(es.x6,null,"Your subscription key is either missing or not valid.")),react.createElement("p",null,react.createElement(es.x6,null,"Sorry your subscription is either missing or not readable."),react.createElement("br",null),react.createElement(es.x6,null,"Update the subscription key and try again.")," ",react.createElement(es.x6,null,"If this does not work get in touch with support."))),this.hasValidSubscription()&&this.hasSubscriptionKeyGoingToExpire()&&react.createElement("h4",{className:"subscription-information-subtitle"},react.createElement(es.x6,null,"Your subscription key is going to expire.")),this.hasSubscriptionKey()&&this.hasInvalidSubscription()&&react.createElement("h4",{className:"subscription-information-subtitle"},react.createElement(es.x6,null,"Your subscription key is not valid.")),this.hasValidSubscription()&&!this.hasSubscriptionKeyGoingToExpire()&&react.createElement("h4",{className:"subscription-information-subtitle"},react.createElement(es.x6,null,"Your subscription key is valid and up to date!")),this.hasSubscriptionKey()&&react.createElement("div",{className:"information"},react.createElement("div",{className:"information-label"},react.createElement("span",{className:"customer-id label"},react.createElement(es.x6,null,"Customer id:")),react.createElement("span",{className:"subscription-id label"},react.createElement(es.x6,null,"Subscription id:")),react.createElement("span",{className:"email label"},react.createElement(es.x6,null,"Email:")),react.createElement("span",{className:"users label"},react.createElement(es.x6,null,"Users limit:")),react.createElement("span",{className:"created label"},react.createElement(es.x6,null,"Valid from:")),react.createElement("span",{className:"expiry label"},react.createElement(es.x6,null,"Expires on:"))),react.createElement("div",{className:"information-value"},react.createElement("span",{className:"customer-id value"},subscription.customerId),react.createElement("span",{className:"subscription-id value"},subscription.subscriptionId),react.createElement("span",{className:"email value"},subscription.email),react.createElement("span",{className:"users value "+(this.hasLimitUsersExceeded()?"error":"")},subscription.users," ",react.createElement("span",{className:"secondary-information"},"(",react.createElement(es.x6,null,"currently:")," ",this.state.activeUsers,")")),react.createElement("span",{className:"created value"},this.formatDate(subscription.created)),react.createElement("span",{className:`expiry value ${this.hasSubscriptionKeyExpired()?"error":""} ${this.hasSubscriptionKeyGoingToExpire()?"warning":""}`},this.formatDate(subscription.expiry)," ",react.createElement("span",{className:"secondary-information"},"(",`${this.hasSubscriptionKeyExpired()?this.translate("expired "):""}${(0,dateUtils.kD)(subscription.expiry,this.props.t,this.props.context.locale)}`,")")))))))),react.createElement("div",{className:"actions-wrapper"},this.shouldShowRenewKey&&react.createElement("button",{className:"button secondary",type:"button",onClick:this.handleRenewKey},react.createElement(es.x6,null,"Renew key")),this.hasSubscriptionKey()?react.createElement("button",{className:"button primary form",type:"button",onClick:this.handleUpdateKey},react.createElement(es.x6,null,"Update key")):react.createElement("button",{className:"button primary form",type:"button",onClick:this.handleUpdateKey},react.createElement(es.x6,null,"Add key")))),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need help?")),react.createElement("p",null,react.createElement(es.x6,null,"For any change or question related to your passbolt subscription, kindly contact our sales team.")),react.createElement("a",{className:"button",target:"_blank",rel:"noopener noreferrer",href:"https://www.passbolt.com/contact"},react.createElement(email.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Contact Sales")))),document.getElementById("administration-help-panel")))}}DisplaySubscriptionKey.propTypes={context:prop_types_default().any,navigationContext:prop_types_default().any,administrationWorkspaceContext:prop_types_default().object,adminSubscriptionContext:prop_types_default().object,dialogContext:prop_types_default().any,t:prop_types_default().func};const DisplaySubscriptionKey_DisplaySubscriptionKey=(0,AppContext.L)((0,NavigationContext.qN)((0,AdministrationSubscription.j$)((0,AdministrationWorkspaceContext.Kk)((0,DialogContext.z9)((0,es.CI)("common")(DisplaySubscriptionKey))))));DisplaySubscriptionKey.__docgenInfo={description:"This component allows to display the subscription key for the administration",methods:[{name:"defaultState",docblock:"Get default state\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"findActiveUsers",docblock:"fetch the active users",modifiers:["async"],params:[],returns:null,description:"fetch the active users"},{name:"findSubscriptionKey",docblock:"fetch the subscription key",modifiers:["async"],params:[],returns:null,description:"fetch the subscription key"},{name:"handleRenewKey",docblock:"Handle renew key click event",modifiers:[],params:[],returns:null,description:"Handle renew key click event"},{name:"handleUpdateKey",docblock:"Handle update key click event",modifiers:[],params:[],returns:null,description:"Handle update key click event"},{name:"hasSubscriptionKeyExpired",docblock:"Has subscription key expired\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has subscription key expired"},{name:"hasSubscriptionKeyGoingToExpire",docblock:"Has subscription key going to expire\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has subscription key going to expire"},{name:"hasSubscriptionKey",docblock:"Has no subscription key\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has no subscription key"},{name:"shouldShowRenewKey",docblock:"Should show renew key\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Should show renew key"},{name:"hasLimitUsersExceeded",docblock:"Has limit of users exceeded\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has limit of users exceeded"},{name:"hasValidSubscription",docblock:"Has valid subscription\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has valid subscription"},{name:"hasInvalidSubscription",docblock:"Has invalid subscription\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has invalid subscription"},{name:"formatDate",docblock:"Format a date.\n@string {string} date The date to format\n@return {string}",modifiers:[],params:[{name:"date",optional:!1}],returns:{type:{name:"string"}},description:"Format a date."},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DisplaySubscriptionKey",props:{context:{description:"",type:{name:"any"},required:!1},navigationContext:{description:"",type:{name:"any"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminSubscriptionContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/EditSubscriptionKey/EditSubscriptionKey.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_react_extension_components_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),_react_extension_components_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),_react_extension_components_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),_contexts_AdministrationWorkspaceContext__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),react_i18next__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),_contexts_Administration_AdministrationSubscription_AdministrationSubscription__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationSubscription/AdministrationSubscription.js");class EditSubscriptionKey extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.getDefaultState(),this.initEventHandlers(),this.createInputRef()}getDefaultState(){return{selectedFile:null,key:"",keyError:"",processing:!1,hasBeenValidated:!1}}initEventHandlers(){this.handleCloseClick=this.handleCloseClick.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleKeyInputKeyUp=this.handleKeyInputKeyUp.bind(this),this.handleSelectSubscriptionKeyFile=this.handleSelectSubscriptionKeyFile.bind(this),this.handleSelectFile=this.handleSelectFile.bind(this)}createInputRef(){this.keyInputRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef(),this.fileUploaderRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef()}componentDidMount(){this.setState({key:this.props.context.editSubscriptionKey.key||""})}async handleFormSubmit(event){event.preventDefault(),this.state.processing||await this.save()}handleInputChange(event){const target=event.target,value=target.value,name=target.name;this.setState({[name]:value})}handleKeyInputKeyUp(){if(this.state.hasAlreadyBeenValidated){const state=this.validateNameInput();this.setState(state)}}handleCloseClick(){this.props.context.setContext({editSubscriptionKey:null}),this.props.onClose()}handleSelectFile(){this.fileUploaderRef.current.click()}get selectedFilename(){return this.state.selectedFile?this.state.selectedFile.name:""}async handleSelectSubscriptionKeyFile(event){const[subscriptionFile]=event.target.files,subscriptionKey=await this.readSubscriptionKeyFile(subscriptionFile);this.setState({key:subscriptionKey,selectedFile:subscriptionFile}),this.state.hasBeenValidated&&await this.validate()}readSubscriptionKeyFile(subscriptionFile){const reader=new FileReader;return new Promise(((resolve,reject)=>{reader.onloadend=()=>{try{resolve(reader.result)}catch(e){reject(e)}},reader.readAsText(subscriptionFile)}))}async save(){if(this.state.processing)return;if(await this.setState({hasBeenValidated:!0}),await this.toggleProcessing(),!await this.validate())return this.handleValidateError(),void await this.toggleProcessing();const keyDto={data:this.state.key};try{await this.props.administrationWorkspaceContext.onUpdateSubscriptionKeyRequested(keyDto),await this.handleSaveSuccess(),await this.props.adminSubscriptionContext.findSubscriptionKey()}catch(error){await this.toggleProcessing(),this.handleSaveError(error),this.focusFieldError()}}handleValidateError(){this.focusFieldError()}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.translate("The subscription key has been updated successfully.")),this.props.administrationWorkspaceContext.onMustRefreshSubscriptionKey(),this.props.context.setContext({editSubscriptionKey:null,refreshSubscriptionAnnouncement:!0}),this.props.onClose()}async handleSaveError(error){if("PassboltSubscriptionError"===error.name)this.setState({keyError:error.message});else if("EntityValidationError"===error.name)this.setState({keyError:this.translate("The subscription key is invalid.")});else if("PassboltApiFetchError"===error.name&&error.data&&400===error.data.code)this.setState({keyError:error.message});else{console.error(error);const errorDialogProps={error};this.props.dialogContext.open(_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_5__.A,errorDialogProps)}}focusFieldError(){this.state.keyError&&this.keyInputRef.current.focus()}validateKeyInput(){const key=this.state.key.trim();let keyError="";return key.length||(keyError=this.translate("A subscription key is required.")),new Promise((resolve=>{this.setState({keyError},resolve)}))}async validate(){return this.setState({keyError:""}),await this.validateKeyInput(),""===this.state.keyError}async toggleProcessing(){await this.setState({processing:!this.state.processing})}hasAllInputDisabled(){return this.state.processing}get translate(){return this.props.t}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_extension_components_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_2__.A,{title:this.translate("Edit subscription key"),onClose:this.handleCloseClick,disabled:this.state.processing,className:"edit-subscription-dialog"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:this.handleFormSubmit,noValidate:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`input textarea required ${this.state.keyError?"error":""} ${this.hasAllInputDisabled()?"disabled":""}`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:"edit-tag-form-name"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Subscription key")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("textarea",{id:"edit-subscription-form-key",name:"key",value:this.state.key,onKeyUp:this.handleKeyInputKeyUp,onChange:this.handleInputChange,disabled:this.hasAllInputDisabled(),ref:this.keyInputRef,className:"required full_report",required:"required",autoComplete:"off",autoFocus:!0})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input file "+(this.hasAllInputDisabled()?"disabled":"")},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"file",ref:this.fileUploaderRef,disabled:this.hasAllInputDisabled(),onChange:this.handleSelectSubscriptionKeyFile}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input-file-inline"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"text",disabled:!0,placeholder:this.translate("No key file selected"),value:this.selectedFilename}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"button primary",onClick:this.handleSelectFile,disabled:this.hasAllInputDisabled()},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Choose a file")))),this.state.keyError&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"key error-message"},this.state.keyError))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_extension_components_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__.A,{disabled:this.hasAllInputDisabled(),onClick:this.handleCloseClick}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_extension_components_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__.A,{disabled:this.hasAllInputDisabled(),processing:this.state.processing,value:this.translate("Save")}))))}}EditSubscriptionKey.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,onClose:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func,actionFeedbackContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,adminSubscriptionContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().object,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,administrationWorkspaceContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,t:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__.L)((0,_contexts_Administration_AdministrationSubscription_AdministrationSubscription__WEBPACK_IMPORTED_MODULE_10__.j$)((0,_contexts_AdministrationWorkspaceContext__WEBPACK_IMPORTED_MODULE_8__.Kk)((0,_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__.ot)((0,_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_4__.z9)((0,react_i18next__WEBPACK_IMPORTED_MODULE_9__.CI)("common")(EditSubscriptionKey))))));EditSubscriptionKey.__docgenInfo={description:"Component allows the user to edit the subscription key from a dialog",methods:[{name:"getDefaultState",docblock:null,modifiers:[],params:[],returns:null},{name:"initEventHandlers",docblock:null,modifiers:[],params:[],returns:null},{name:"createInputRef",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"handleFormSubmit",docblock:"Handle form submit event.\n@params {ReactEvent} The react event\n@return {Promise}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"Promise"}},description:"Handle form submit event."},{name:"handleInputChange",docblock:"Handle form input change.\n@params {ReactEvent} The react event.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle form input change."},{name:"handleKeyInputKeyUp",docblock:"Handle key input keyUp event.",modifiers:[],params:[],returns:null,description:"Handle key input keyUp event."},{name:"handleCloseClick",docblock:"Handle close button click.",modifiers:[],params:[],returns:null,description:"Handle close button click."},{name:"handleSelectFile",docblock:"Handle the selection of a file by file explorer",modifiers:[],params:[],returns:null,description:"Handle the selection of a file by file explorer"},{name:"selectedFilename",docblock:"Returns the selected file's name",modifiers:["get"],params:[],returns:null,description:"Returns the selected file's name"},{name:"handleSelectSubscriptionKeyFile",docblock:"Whenever the user select a subscription key file\n@param event The file dom event",modifiers:["async"],params:[{name:"event",description:"The file dom event",optional:!1}],returns:null,description:"Whenever the user select a subscription key file"},{name:"readSubscriptionKeyFile",docblock:"Read the selected subscription key file and returns its content in a base 64\n@param subscriptionFile A subscription key file",modifiers:[],params:[{name:"subscriptionFile",description:"A subscription key file",optional:!1}],returns:null,description:"Read the selected subscription key file and returns its content in a base 64"},{name:"save",docblock:"Save the changes.",modifiers:["async"],params:[],returns:null,description:"Save the changes."},{name:"handleValidateError",docblock:"Handle validation error.",modifiers:[],params:[],returns:null,description:"Handle validation error."},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."},{name:"focusFieldError",docblock:"Focus the field of the form which is in error state.",modifiers:[],params:[],returns:null,description:"Focus the field of the form which is in error state."},{name:"validateKeyInput",docblock:"Validate the key input.\n@return {Promise}",modifiers:[],params:[],returns:{type:{name:"Promise"}},description:"Validate the key input."},{name:"validate",docblock:"Validate the form.\n@return {Promise<boolean>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"boolean"}]}},description:"Validate the form."},{name:"toggleProcessing",docblock:"Toggle the processing mode",modifiers:["async"],params:[],returns:null,description:"Toggle the processing mode"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is processing"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"EditSubscriptionKey",props:{context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},adminSubscriptionContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/HomePage/AdministrationHomePage.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>HomePage_AdministrationHomePage});var _path,_path2,_path3,react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),CardItem=__webpack_require__("./src/shared/components/Cards/CardItem.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),NavigationContext=__webpack_require__("./src/react-extension/contexts/NavigationContext.js"),subscription=__webpack_require__("./src/img/svg/subscription.svg");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const encrypted_metadata=function SvgEncryptedMetadata(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:49,height:48,fill:"none",viewBox:"0 0 49 48"},props),_path||(_path=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M42.597 12h-36M22.455 24H6.597M22.455 36H6.597"})),_path2||(_path2=react.createElement("path",{stroke:"var(--icon-color)",strokeLinejoin:"round",strokeWidth:2,d:"M41.532 27.608H29.734c-.588 0-1.065.477-1.065 1.065v8.334c0 .588.477 1.065 1.065 1.065h11.798c.588 0 1.065-.477 1.065-1.065v-8.334c0-.588-.477-1.065-1.065-1.065Z"})),_path3||(_path3=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M30.884 27.608v-4.103a4.756 4.756 0 0 1 9.512 0v4.103"})))};var content_type_path,arrow_big_up_dash=__webpack_require__("./src/img/svg/arrow_big_up_dash.svg");function content_type_extends(){return content_type_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},content_type_extends.apply(null,arguments)}const content_type=function SvgContentType(props){return react.createElement("svg",content_type_extends({xmlns:"http://www.w3.org/2000/svg",width:49,height:48,fill:"none",viewBox:"0 0 49 48"},props),content_type_path||(content_type_path=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M17.197 20a1.4 1.4 0 0 1-1.252-2.158L23.397 6a1.4 1.4 0 0 1 2.396-.086L33.197 17.8a1.4 1.4 0 0 1-1.144 2.2zM18.597 28h-10a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V30a2 2 0 0 0-2-2M35.597 42a7 7 0 1 0 0-14 7 7 0 0 0 0 14"})))};var mfa_settings_path,mfa_settings_path2,file_key_2=__webpack_require__("./src/img/svg/file_key_2.svg"),expiry=__webpack_require__("./src/img/svg/expiry.svg"),password_policy=__webpack_require__("./src/img/svg/password_policy.svg"),passphrase_policy=__webpack_require__("./src/img/svg/passphrase_policy.svg"),account_recovery=__webpack_require__("./src/img/svg/account_recovery.svg"),sso=__webpack_require__("./src/img/svg/sso.svg");function mfa_settings_extends(){return mfa_settings_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},mfa_settings_extends.apply(null,arguments)}const mfa_settings=function SvgMfaSettings(props){return react.createElement("svg",mfa_settings_extends({xmlns:"http://www.w3.org/2000/svg",width:49,height:48,fill:"none",viewBox:"0 0 49 48"},props),mfa_settings_path||(mfa_settings_path=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M4.597 24c0-11 9-20 20-20a20 20 0 0 1 16 8"})),mfa_settings_path2||(mfa_settings_path2=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M10.597 39c1-3 2-9 2-15 0-1.4.24-2.74.68-4M35.177 42.04c.24-1.2.86-4.6 1-6.04M24.597 20a4 4 0 0 0-4 4c0 2.04-.2 5.02-.52 8M17.897 44c.42-1.32.9-2.64 1.14-4M28.597 26.24c0 4.76 0 12.76-2 17.76M4.597 32h.02M44.197 32c.4-4 .262-10.708 0-12M18.597 13.6a12 12 0 0 1 18 10.4c0 .94 0 2.34-.04 4"})))};var heart_pulse_path,heart_pulse_path2,mfa_policy=__webpack_require__("./src/img/svg/mfa_policy.svg"),self_register=__webpack_require__("./src/img/svg/self_register.svg"),ldap=__webpack_require__("./src/img/svg/ldap.svg"),email_server=__webpack_require__("./src/img/svg/email_server.svg"),rbac=__webpack_require__("./src/img/svg/rbac.svg"),international=__webpack_require__("./src/img/svg/international.svg");function heart_pulse_extends(){return heart_pulse_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},heart_pulse_extends.apply(null,arguments)}const heart_pulse=function SvgHeartPulse(props){return react.createElement("svg",heart_pulse_extends({xmlns:"http://www.w3.org/2000/svg",width:49,height:48,fill:"none",viewBox:"0 0 49 48"},props),heart_pulse_path||(heart_pulse_path=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M38.597 28c2.98-2.92 6-6.42 6-11a11 11 0 0 0-11-11c-3.52 0-6 1-9 4-3-3-5.48-4-9-4a11 11 0 0 0-11 11c0 4.6 3 8.1 6 11l14 14z"})),heart_pulse_path2||(heart_pulse_path2=react.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M7.037 24h12.56l1-2 4 9 4-14 3 7h10.54"})))};var email_notifications=__webpack_require__("./src/img/svg/email_notifications.svg");class AdministrationHomePage extends react.PureComponent{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClickOn=this.handleClickOn.bind(this),this.isFlagEnabled=this.isFlagEnabled.bind(this)}handleClickOn(cardItemData){cardItemData.redirectTo()}get cardItemsData(){return[{icon:react.createElement(subscription.A,null),title:this.props.t("Subscription"),description:this.props.t("Browse and update the subscription key details."),redirectTo:this.props.navigationContext.onGoToAdministrationSubscriptionRequested,flag:AdministrationWorkspaceContext.UZ.SUBSCRIPTION},{icon:react.createElement(encrypted_metadata,null),title:this.props.t("Encrypted metadata"),description:this.props.t("Choose between cleartext metadata and encrypted metadata."),redirectTo:this.props.navigationContext.onGoToAdministrationContentTypesEncryptedMetadataRequested,flag:AdministrationWorkspaceContext.UZ.CONTENT_TYPES_ENCRYPTED_METADATA,isBeta:!0},{icon:react.createElement(arrow_big_up_dash.A,null),title:this.props.t("Migrate metadata"),description:this.props.t("Convert cleartext metadata into encrypted metadata."),redirectTo:this.props.navigationContext.onGoToAdministrationMigrateMetadataRequested,flag:AdministrationWorkspaceContext.UZ.MIGRATE_METADATA,isBeta:!0},{icon:react.createElement(content_type,null),title:this.props.t("Allow content types"),description:this.props.t("Control the content types availability for all users."),redirectTo:this.props.navigationContext.onGoToAdministrationAllowContentTypesRequested,flag:AdministrationWorkspaceContext.UZ.ALLOW_CONTENT_TYPES,isBeta:!0},{icon:react.createElement(file_key_2.A,null),title:this.props.t("Metadata key"),description:this.props.t("Control the layer of encryption that is used to protect metadata."),redirectTo:this.props.navigationContext.onGoToAdministrationContentTypesMetadataKeyRequested,flag:AdministrationWorkspaceContext.UZ.CONTENT_TYPES_METADATA_KEY,isBeta:!0},{icon:react.createElement(expiry.A,null),title:this.props.t("Password expiry"),description:this.props.t("Control the default behaviour of password expiry policy for all users."),redirectTo:this.props.navigationContext.onGoToAdministrationPasswordExpirySettingsRequested,flag:AdministrationWorkspaceContext.UZ.PASSWORD_EXPIRY},{icon:react.createElement(password_policy.A,null),title:this.props.t("Password policy"),description:this.props.t("Modify the default settings of the passwords generator."),redirectTo:this.props.navigationContext.onGoToAdministrationPasswordPoliciesRequested,flag:AdministrationWorkspaceContext.UZ.PASSWORD_POLICIES},{icon:react.createElement(passphrase_policy.A,null),title:this.props.t("User passphrase policies"),description:this.props.t("Define the minimal entropy for the users' private key passphrase."),redirectTo:this.props.navigationContext.onGoToAdministrationUserPassphrasePoliciesRequested,flag:AdministrationWorkspaceContext.UZ.USER_PASSPHRASE_POLICIES},{icon:react.createElement(account_recovery.A,null),title:this.props.t("Account recovery"),description:this.props.t("Control the behavior for account recovery for all users."),redirectTo:this.props.navigationContext.onGoToAdministrationAccountRecoveryRequested,flag:AdministrationWorkspaceContext.UZ.ACCOUNT_RECOVERY},{icon:react.createElement(sso.A,null),title:this.props.t("Single Sign-On"),description:this.props.t("Select which Single Sign-on provider can be use to login."),redirectTo:this.props.navigationContext.onGoToAdministrationSsoRequested,flag:AdministrationWorkspaceContext.UZ.SSO},{icon:react.createElement(mfa_settings,null),title:this.props.t("Multi Factor Authentication"),description:this.props.t("Select which multi factor authentication provider can be use."),redirectTo:this.props.navigationContext.onGoToAdministrationMfaRequested,flag:AdministrationWorkspaceContext.UZ.MFA},{icon:react.createElement(mfa_policy.A,null),title:this.props.t("MFA Policy"),description:this.props.t("Control the default behaviour of multi factor authentication."),redirectTo:this.props.navigationContext.onGoToAdministrationMfaPolicyRequested,flag:AdministrationWorkspaceContext.UZ.MFA_POLICY},{icon:react.createElement(ldap.A,null),title:this.props.t("Users directory"),description:this.props.t("Configure the synchronisation of users and groups with passbolt."),redirectTo:this.props.navigationContext.onGoToAdministrationUsersDirectoryRequested,flag:AdministrationWorkspaceContext.UZ.USER_DIRECTORY},{icon:react.createElement(self_register.A,null),title:this.props.t("Self registration"),description:this.props.t("Enable users  to enrol without prior admin invitation."),redirectTo:this.props.navigationContext.onGoToAdministrationSelfRegistrationRequested,flag:AdministrationWorkspaceContext.UZ.SELF_REGISTRATION},{icon:react.createElement(email_server.A,null),title:this.props.t("Email server"),description:this.props.t("Control the SMTP server configuration used to send emails."),redirectTo:this.props.navigationContext.onGoToAdministrationSmtpSettingsRequested,flag:AdministrationWorkspaceContext.UZ.SMTP_SETTINGS},{icon:react.createElement(email_notifications.A,null),title:this.props.t("Email notifications"),description:this.props.t("Define which email notifications will be sent."),redirectTo:this.props.navigationContext.onGoToAdministrationEmailNotificationsRequested,flag:null},{icon:react.createElement(rbac.A,null),title:this.props.t("Role-Based Access Control"),description:this.props.t("Define UI level access controls for the user role."),redirectTo:this.props.navigationContext.onGoToAdministrationRbacsRequested,flag:AdministrationWorkspaceContext.UZ.RBAC},{icon:react.createElement(international.A,null),title:this.props.t("Internationalisation"),description:this.props.t("Define the default language of the organisation."),redirectTo:this.props.navigationContext.onGoToAdministrationInternationalizationRequested,flag:AdministrationWorkspaceContext.UZ.INTERNATIONALIZATION},{icon:react.createElement(heart_pulse,null),title:this.props.t("API Status"),description:this.props.t("Monitor the passbolt API's health and responsiveness."),redirectTo:this.props.navigationContext.onGoToAdministrationHealthcheckRequested,flag:AdministrationWorkspaceContext.UZ.HEALTHCHECK}].filter(this.isFlagEnabled)}isFlagEnabled(cardData){return null===cardData.flag||Boolean(this.props.context.siteSettings?.canIUse(AdministrationWorkspaceContext.IB[cardData.flag]))}render(){return react.createElement("div",{className:"row"},react.createElement("div",{id:"administration-home-page",className:"main-column"},react.createElement("div",{className:"main-content"},react.createElement("div",{className:"grid"},this.cardItemsData.map((cardItemData=>react.createElement(CardItem.A,{key:cardItemData.title,icon:cardItemData.icon,title:cardItemData.title,description:cardItemData.description,onClick:()=>this.handleClickOn(cardItemData),isBeta:Boolean(cardItemData.isBeta)})))))))}}AdministrationHomePage.propTypes={context:prop_types_default().object,navigationContext:prop_types_default().object,t:prop_types_default().func};const HomePage_AdministrationHomePage=(0,AppContext.L)((0,NavigationContext.qN)((0,es.CI)("common")(AdministrationHomePage)));AdministrationHomePage.__docgenInfo={description:"This component represents the Administration Home Page",methods:[{name:"bindCallbacks",docblock:"Binds the callbacks",modifiers:[],params:[],returns:null,description:"Binds the callbacks"},{name:"handleClickOn",docblock:"Handles the click on a card of the home page.\n@param {object} cardItemData",modifiers:[],params:[{name:"cardItemData",type:{name:"object"},optional:!1}],returns:null,description:"Handles the click on a card of the home page."},{name:"cardItemsData",docblock:'Returns the list of available "cards"/admin pages.\nThe list is filtered out based on the currently active flags.\n@returns {array<object>}',modifiers:["get"],params:[],returns:{type:{name:"array",elements:[{name:"object"}]}},description:'Returns the list of available "cards"/admin pages.\nThe list is filtered out based on the currently active flags.'},{name:"isFlagEnabled",docblock:"Is the flag enabled for the current card data.\n@param {object} cardData\n@returns {boolean}",modifiers:[],params:[{name:"cardData",type:{name:"object"},optional:!1}],returns:{type:{name:"boolean"}},description:"Is the flag enabled for the current card data."}],displayName:"AdministrationHomePage",props:{context:{description:"",type:{name:"object"},required:!1},navigationContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/ManageSmtpAdministrationSettings.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>ManageSmtpAdministrationSettings_ManageSmtpAdministrationSettings});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),SmtpProviders_data=__webpack_require__("./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/SmtpProviders.data.js"),Password=__webpack_require__("./src/shared/components/Password/Password.js"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),AdminSmtpSettingsContext=__webpack_require__("./src/react-extension/contexts/AdminSmtpSettingsContext.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),SendTestMailDialog=__webpack_require__("./src/react-extension/components/Administration/SendTestMailDialog/SendTestMailDialog.js");class DisplayAdministrationWorkspaceActions extends react.Component{constructor(props){super(props),this.bindCallbacks(),this.dialogId=null}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this),this.handleTestClick=this.handleTestClick.bind(this),this.handleCloseDialog=this.handleCloseDialog.bind(this)}async handleSaveClick(){if(this.smtpSettings.isProcessing())return;this.smtpSettings.validateData()&&await this.smtpSettings.saveSmtpSettings()}async handleTestClick(){if(this.smtpSettings.isProcessing())return;this.smtpSettings.validateData()&&(null!==this.dialogId&&this.handleCloseDialog(),this.dialogId=await this.props.dialogContext.open(SendTestMailDialog.A,{handleClose:this.handleCloseDialog}))}handleCloseDialog(){this.props.dialogContext.close(this.dialogId),this.dialogId=null}isSaveEnabled(){return this.smtpSettings.isSettingsModified()&&!this.smtpSettings.isProcessing()}isTestEnabled(){return this.smtpSettings.isSettingsModified()&&!this.smtpSettings.isProcessing()}get smtpSettings(){return this.props.adminSmtpSettingsContext}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("div",{className:"left-actions-wrapper"},react.createElement("button",{type:"button",className:"button secondary",disabled:!this.isTestEnabled(),id:"send-test-email",onClick:this.handleTestClick},react.createElement(Icon.A,{name:"plug"}),react.createElement("span",null,react.createElement(es.x6,null,"Send test email")))),react.createElement("button",{type:"button",className:"button primary form",id:"save-settings",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationWorkspaceActions.propTypes={adminSmtpSettingsContext:prop_types_default().object,dialogContext:prop_types_default().object};const DisplayAdministrationSmtpSettingsActions=(0,AdminSmtpSettingsContext.fZ)((0,DialogContext.z9)((0,es.CI)("common")(DisplayAdministrationWorkspaceActions)));DisplayAdministrationWorkspaceActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"handleTestClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"handleCloseDialog",docblock:"Handle close dialog",modifiers:[],params:[],returns:null,description:"Handle close dialog"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"isTestEnabled",docblock:"Is test button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is test button enable"},{name:"smtpSettings",docblock:"Returns the adminSmtpSettingsContext props\n@returns {object}\n@private",modifiers:["get"],params:[],returns:{type:{name:"object"}},description:"Returns the adminSmtpSettingsContext props"}],displayName:"DisplayAdministrationWorkspaceActions",props:{adminSmtpSettingsContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1}}};var portals=__webpack_require__("./src/shared/utils/portals.js"),caret_down=__webpack_require__("./src/img/svg/caret_down.svg"),caret_right=__webpack_require__("./src/img/svg/caret_right.svg"),email=__webpack_require__("./src/img/svg/email.svg"),file_text=__webpack_require__("./src/img/svg/file_text.svg"),svg_link=__webpack_require__("./src/img/svg/link.svg");class ManageSmtpAdministrationSettings extends react.Component{static get AUTHENTICATION_METHOD_NONE(){return"None"}static get AUTHENTICATION_METHOD_USERNAME(){return"Username only"}static get AUTHENTICATION_METHOD_USERNAME_PASSWORD(){return"Username & password"}constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks(),this.createRefs()}get defaultState(){return{showAdvancedSettings:!1,source:"db"}}createRefs(){this.usernameFieldRef=react.createRef(),this.passwordFieldRef=react.createRef(),this.hostFieldRef=react.createRef(),this.portFieldRef=react.createRef(),this.clientFieldRef=react.createRef(),this.senderEmailFieldRef=react.createRef(),this.senderNameFieldRef=react.createRef()}async componentDidMount(){this.props.administrationWorkspaceContext.setDisplayAdministrationWorkspaceAction(DisplayAdministrationSmtpSettingsActions),await this.props.adminSmtpSettingsContext.findSmtpSettings();const settings=this.props.adminSmtpSettingsContext.getCurrentSmtpSettings();this.setState({showAdvancedSettings:"other"===settings.provider?.id})}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminSmtpSettingsContext.clearContext()}componentDidUpdate(){const smtpContext=this.props.adminSmtpSettingsContext,fieldToFocus=smtpContext.getFieldToFocus();fieldToFocus&&this[`${fieldToFocus}FieldRef`]?.current?.focus(),smtpContext.hasProviderChanged()&&this.setState({showAdvancedSettings:"other"===smtpContext.getCurrentSmtpSettings().provider?.id})}bindCallbacks(){this.handleAdvancedSettingsToggle=this.handleAdvancedSettingsToggle.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleProviderChange=this.handleProviderChange.bind(this),this.handleAuthenticationMethodChange=this.handleAuthenticationMethodChange.bind(this)}handleProviderChange(event){const providerId=event.target.value,provider=SmtpProviders_data.A.find((item=>item.id===providerId));this.props.adminSmtpSettingsContext.changeProvider(provider)}handleAuthenticationMethodChange(event){let username=null,password=null;"Username only"===event.target.value?username="":"Username & password"===event.target.value&&(username="",password=""),this.props.adminSmtpSettingsContext.setData({username,password})}handleInputChange(event){const target=event.target;this.props.adminSmtpSettingsContext.setData({[target.name]:target.value})}handleAdvancedSettingsToggle(){this.setState({showAdvancedSettings:!this.state.showAdvancedSettings})}isProcessing(){return this.props.adminSmtpSettingsContext.isProcessing()}get providerList(){return SmtpProviders_data.A.map((item=>({value:item.id,label:item.name})))}get authenticationMethodList(){return[{value:"None",label:this.translate("None")},{value:"Username only",label:this.translate("Username only")},{value:"Username & password",label:this.translate("Username & password")}]}get tlsSelectList(){return[{value:!0,label:this.translate("Yes")},{value:!1,label:this.translate("No")}]}get authenticationMethod(){const smtpSettings=this.props.adminSmtpSettingsContext.getCurrentSmtpSettings();return null===smtpSettings?.username?"None":null===smtpSettings?.password?"Username only":"Username & password"}shouldDisplayUsername(){return"Username only"===this.authenticationMethod||"Username & password"===this.authenticationMethod}shouldDisplayPassword(){return"Username & password"===this.authenticationMethod}shouldShowSourceWarningMessage(){const smtpContext=this.props.adminSmtpSettingsContext;return"db"!==smtpContext.getCurrentSmtpSettings().source&&smtpContext.isSettingsModified()}isReady(){return this.props.adminSmtpSettingsContext.isDataReady()}get settingsSource(){return this.props.adminSmtpSettingsContext?.getCurrentSmtpSettings()?.source}get configurationSource(){return{env:this.props.t("environment variables"),file:this.props.t("file"),db:this.props.t("database")}[this.settingsSource]||this.props.t("unknown")}get translate(){return this.props.t}render(){const settings=this.props.adminSmtpSettingsContext.getCurrentSmtpSettings(),errors=this.props.adminSmtpSettingsContext.getErrors(),smtpProviderName=settings?.provider?.name,hasChanges=this.props.adminSmtpSettingsContext.isSettingsModified(),hasWarnings=hasChanges||this.shouldShowSourceWarningMessage();return react.createElement("div",{className:"row"},react.createElement(react.Fragment,null,react.createElement("div",{className:"third-party-provider-settings smtp-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title"},react.createElement(es.x6,null,"Email server")),this.isReady()&&!settings?.provider&&react.createElement(react.Fragment,null,react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Select a provider")),react.createElement("div",{className:"provider-list"},SmtpProviders_data.A.map((provider=>react.createElement("div",{key:provider.id,className:"provider button",id:provider.id,onClick:()=>this.props.adminSmtpSettingsContext.changeProvider(provider)},react.createElement("div",{className:"provider-logo"},"other"===provider.id&&react.createElement(email.A,null),"other"!==provider.id&&react.createElement("img",{src:`${this.props.context.trustedDomain}/img/third_party/${provider.icon}`})),react.createElement("p",{className:"provider-name"},provider.name)))))),this.isReady()&&settings?.provider&&react.createElement(react.Fragment,null,react.createElement("form",{className:"form"},react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"SMTP server configuration")),react.createElement("div",{className:"select-wrapper input required "+(this.isProcessing()?"disabled":"")},react.createElement("label",{htmlFor:"smtp-settings-form-provider"},react.createElement(es.x6,null,"Email provider")),react.createElement(Select.A,{id:"smtp-settings-form-provider",name:"provider",items:this.providerList,value:settings.provider.id,onChange:this.handleProviderChange,disabled:this.isProcessing()})),react.createElement("div",{className:"select-wrapper input required "+(this.isProcessing()?"disabled":"")},react.createElement("label",{htmlFor:"smtp-settings-form-authentication-method"},react.createElement(es.x6,null,"Authentication method")),react.createElement(Select.A,{id:"smtp-settings-form-authentication-method",name:"authentication-method",items:this.authenticationMethodList,value:this.authenticationMethod,onChange:this.handleAuthenticationMethodChange,disabled:this.isProcessing()})),this.shouldDisplayUsername()&&react.createElement("div",{className:`input text ${errors.username?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-username"},react.createElement(es.x6,null,"Username")),react.createElement("input",{id:"smtp-settings-form-username",ref:this.usernameFieldRef,name:"username",className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.username,onChange:this.handleInputChange,placeholder:this.translate("Username"),disabled:this.isProcessing()}),errors.username&&react.createElement("div",{className:"error-message"},errors.username)),this.shouldDisplayPassword()&&react.createElement("div",{className:`input-password-wrapper input ${errors.password?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-password"},react.createElement(es.x6,null,"Password")),react.createElement(Password.A,{id:"smtp-settings-form-password",name:"password",autoComplete:"new-password",placeholder:this.translate("Password"),preview:!0,value:settings.password,onChange:this.handleInputChange,disabled:this.isProcessing(),inputRef:this.passwordFieldRef}),errors.password&&react.createElement("div",{className:"password error-message"},errors.password)),react.createElement("div",{className:"accordion-header"},react.createElement("button",{type:"button",className:"link no-border",onClick:this.handleAdvancedSettingsToggle},this.state.showAdvancedSettings?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement(es.x6,null,"Advanced settings"))),this.state.showAdvancedSettings&&react.createElement("div",{className:"advanced-settings"},react.createElement("div",{className:`input text required ${errors.host?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-host"},react.createElement(es.x6,null,"SMTP host")),react.createElement("input",{id:"smtp-settings-form-host",ref:this.hostFieldRef,name:"host","aria-required":!0,className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.host,onChange:this.handleInputChange,placeholder:this.translate("SMTP server address"),disabled:this.isProcessing()}),errors.host&&react.createElement("div",{className:"error-message"},errors.host)),react.createElement("div",{className:`input text required ${errors.tls?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-tls"},react.createElement(es.x6,null,"Use TLS")),react.createElement(Select.A,{id:"smtp-settings-form-tls",name:"tls",items:this.tlsSelectList,value:settings.tls,onChange:this.handleInputChange,disabled:this.isProcessing()})),react.createElement("div",{className:`input text required ${errors.port?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-port"},react.createElement(es.x6,null,"Port")),react.createElement("input",{id:"smtp-settings-form-port","aria-required":!0,ref:this.portFieldRef,name:"port",className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.port,onChange:this.handleInputChange,placeholder:this.translate("Port number"),disabled:this.isProcessing()}),errors.port&&react.createElement("div",{className:"error-message"},errors.port)),react.createElement("div",{className:`input text ${errors.client?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-client"},react.createElement(es.x6,null,"SMTP client")),react.createElement("input",{id:"smtp-settings-form-client",ref:this.clientFieldRef,name:"client",maxLength:"2048",type:"text",autoComplete:"off",value:settings.client,onChange:this.handleInputChange,placeholder:this.translate("SMTP client address"),disabled:this.isProcessing()}),errors.client&&react.createElement("div",{className:"error-message"},errors.client))),react.createElement("h4",null,react.createElement(es.x6,null,"Sender configuration")),react.createElement("div",{className:`input text required ${errors.sender_name?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-sender-name"},react.createElement(es.x6,null,"Sender name")),react.createElement("input",{id:"smtp-settings-form-sender-name",ref:this.senderNameFieldRef,name:"sender_name","aria-required":!0,className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.sender_name,onChange:this.handleInputChange,placeholder:this.translate("Sender name"),disabled:this.isProcessing()}),errors.sender_name&&react.createElement("div",{className:"error-message"},errors.sender_name),react.createElement("p",null,react.createElement(es.x6,null,"This is the name users will see in their mailbox when passbolt sends a notification."))),react.createElement("div",{className:`input text required ${errors.sender_email?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-sender-name"},react.createElement(es.x6,null,"Sender email")),react.createElement("input",{id:"smtp-settings-form-sender-email",ref:this.senderEmailFieldRef,name:"sender_email","aria-required":!0,className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.sender_email,onChange:this.handleInputChange,placeholder:this.translate("Sender email"),disabled:this.isProcessing()}),errors.sender_email&&react.createElement("div",{className:"error-message"},errors.sender_email),react.createElement("p",null,react.createElement(es.x6,null,"This is the email address users will see in their mail box when passbolt sends a notification.",react.createElement("br",null),"It's a good practice to provide a working email address that users can reply to.")))))),hasWarnings&&react.createElement("div",{className:"warning message"},this.shouldShowSourceWarningMessage()&&react.createElement("div",{id:"smtp-settings-source-warning"},react.createElement(es.x6,null,"These are the settings provided by a configuration file. If you save it, will ignore the settings on file and use the ones from the database.")),hasChanges&&react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayAdministrationSmtpSettingsActions,null)),(0,portals.m)(react.createElement(react.Fragment,null,react.createElement("div",{className:"sidebar-help-section",id:"smtp-settings-source"},react.createElement("h3",null,react.createElement(es.x6,null,"Configuration source")),react.createElement("p",null,react.createElement(es.x6,null,"This current configuration source is: "),this.configurationSource,".")),react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Why do I need an SMTP server?")),react.createElement("p",null,react.createElement(es.x6,null,"Passbolt needs an smtp server in order to send invitation emails after an account creation and to send email notifications.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/emails/email-server/",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),settings?.provider&&"other"!==settings?.provider.id&&react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"How do I configure a ",{smtpProviderName}," SMTP server?")),react.createElement("a",{className:"button",href:settings.provider.help_page,target:"_blank",rel:"noopener noreferrer"},react.createElement(svg_link.A,null),react.createElement("span",null,react.createElement(es.x6,null,"See the ",{smtpProviderName}," documentation")))),settings?.provider&&("google-mail"===settings.provider.id||"google-workspace"===settings.provider.id)&&react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Why shouldn't I use my login password ?")),react.createElement("p",null,react.createElement(es.x6,null,'In order to use the "Username & Password" authentication method with Google, you will need to enable MFA on your Google Account. The password should not be your login password, you have to create an "App Password" generated by Google.. However, the email remain the same.')),react.createElement("a",{className:"button",href:"https://support.google.com/mail/answer/185833",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"More informations"))))),document.getElementById("administration-help-panel")))}}ManageSmtpAdministrationSettings.propTypes={context:prop_types_default().object,dialogContext:prop_types_default().any,administrationWorkspaceContext:prop_types_default().object,adminSmtpSettingsContext:prop_types_default().object,t:prop_types_default().func};const ManageSmtpAdministrationSettings_ManageSmtpAdministrationSettings=(0,AppContext.L)((0,AdminSmtpSettingsContext.fZ)((0,DialogContext.z9)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(ManageSmtpAdministrationSettings)))));ManageSmtpAdministrationSettings.__docgenInfo={description:"",methods:[{name:"AUTHENTICATION_METHOD_NONE",docblock:"The no authentication method.\n@returns {string}",modifiers:["static","get"],params:[],returns:{type:{name:"string"}},description:"The no authentication method."},{name:"AUTHENTICATION_METHOD_USERNAME",docblock:"The authentication method username only\n@returns {string}",modifiers:["static","get"],params:[],returns:{type:{name:"string"}},description:"The authentication method username only"},{name:"AUTHENTICATION_METHOD_USERNAME_PASSWORD",docblock:"The authentication method username and password\n@returns {string}",modifiers:["static","get"],params:[],returns:{type:{name:"string"}},description:"The authentication method username and password"},{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"createRefs",docblock:"Creates the React ref for the forms to be able to focus fields having errors",modifiers:[],params:[],returns:null,description:"Creates the React ref for the forms to be able to focus fields having errors"},{name:"bindCallbacks",docblock:"Bind callbacks",modifiers:[],params:[],returns:null,description:"Bind callbacks"},{name:"handleProviderChange",docblock:"Handle provider change from select field.\n@params {ReactEvent} The react event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle provider change from select field."},{name:"handleAuthenticationMethodChange",docblock:"Handle provider change from select field.\n@params {ReactEvent} The react event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle provider change from select field."},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"handleAdvancedSettingsToggle",docblock:"Handles the click on the advanced settings toggle.",modifiers:[],params:[],returns:null,description:"Handles the click on the advanced settings toggle."},{name:"isProcessing",docblock:"Returns true if there is a processing happening with the SMTP settings.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if there is a processing happening with the SMTP settings."},{name:"providerList",docblock:"Return the list of available providers.\n@returns {Array<object>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"object"}]}},description:"Return the list of available providers."},{name:"authenticationMethodList",docblock:"Return the list of available authentication method.\n@returns {Array<object>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"object"}]}},description:"Return the list of available authentication method."},{name:"tlsSelectList",docblock:"Returns a list of available choice for the 'TLS' select field.\n@returns {Array<object>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"object"}]}},description:"Returns a list of available choice for the 'TLS' select field."},{name:"authenticationMethod",docblock:"Return the selected authentication method.\n@return {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Return the selected authentication method."},{name:"shouldDisplayUsername",docblock:"Return true if the username field should be displayed\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the username field should be displayed"},{name:"shouldDisplayPassword",docblock:"Return true if the password field should be displayed\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the password field should be displayed"},{name:"shouldShowSourceWarningMessage",docblock:"Returns true if the source of the settings is from a config file instead of DB and the user has modified a field.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the source of the settings is from a config file instead of DB and the user has modified a field."},{name:"isReady",docblock:"Returns true if the data is loaded.\nUseful to avoid UI blinking during data loading.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the data is loaded.\nUseful to avoid UI blinking during data loading."},{name:"settingsSource",docblock:"Returns the source of the settings\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the source of the settings"},{name:"configurationSource",docblock:"Returns the source of the current configuration\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the source of the current configuration"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"ManageSmtpAdministrationSettings",props:{context:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminSmtpSettingsContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Avatar/UserAvatar.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Avatar_UserAvatar});var _circle,_path,_circle2,react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const user_default=function SvgUserDefault(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:42,height:42,fill:"none",viewBox:"0 0 42 42"},props),_circle||(_circle=react.createElement("circle",{id:"background",cx:21,cy:21,r:21,fill:"var(--Avatar-Avatar-background)"})),_path||(_path=react.createElement("path",{fill:"var(--Avatar-Avatar)",d:"M27.184 26.54H14.852a7.36 7.36 0 0 0-5.362 2.2 7.4 7.4 0 0 0-2.216 5.36v1.145a19.66 19.66 0 0 0 13.672 5.522 19.66 19.66 0 0 0 13.673-5.522V34.1a7.38 7.38 0 0 0-2.199-5.362 7.38 7.38 0 0 0-5.236-2.198"})),_circle2||(_circle2=react.createElement("circle",{cx:21,cy:15.5,r:7.5,fill:"var(--Avatar-Avatar)"})))};var attention=__webpack_require__("./src/img/svg/attention.svg");const DEFAULT_AVATAR_URL_REGEXP=/img\/avatar\/user(_medium)?\.png$/;class UserAvatar extends react.Component{constructor(props){super(props),this.state=this.getDefaultState(),this.bindCallbacks()}getDefaultState(){return{error:!1,isLoading:!0}}bindCallbacks(){this.handleError=this.handleError.bind(this),this.handleLoaded=this.handleLoaded.bind(this)}get avatarUrl(){return this.props?.user?.profile?.avatar?.url?.medium}propsHasUrl(){return Boolean(this.avatarUrl)}propsUrlHasProtocol(){return this.avatarUrl.startsWith("https://")||this.avatarUrl.startsWith("http://")}formatUrl(url){return`${this.props.baseUrl}/${url}`}isDefaultAvatarUrlFromApi(){return DEFAULT_AVATAR_URL_REGEXP.test(this.avatarUrl)}getAvatarSrc(){return this.propsHasUrl()?this.propsUrlHasProtocol()?this.avatarUrl:this.formatUrl(this.avatarUrl):null}handleError(){console.error(`Could not load avatar image url: ${this.getAvatarSrc()}`),this.setState({error:!0})}handleLoaded(){this.setState({isLoading:!1})}getAltText(){const user=this.props?.user;return user?.first_name&&user?.last_name?this.props.t("Avatar of user {{first_name}} {{last_name}}.",{firstname:user.first_name,lastname:user.last_name}):"..."}render(){const srcAvatar=this.getAvatarSrc(),shouldDisplayDefaultAvatar=this.state.error||this.isDefaultAvatarUrlFromApi()||!srcAvatar;return react.createElement("div",{className:`${this.props.className}`},react.createElement("div",{className:"default-avatar"},(shouldDisplayDefaultAvatar||this.state.isLoading)&&react.createElement(user_default,null),!shouldDisplayDefaultAvatar&&react.createElement("img",{src:srcAvatar,className:this.state.isLoading?"is-loading":"",onError:this.handleError,onLoad:this.handleLoaded,alt:this.getAltText()})),this.props.attentionRequired&&react.createElement(attention.A,{className:"attention-required"}))}}UserAvatar.defaultProps={className:"avatar user-avatar"},UserAvatar.propTypes={baseUrl:prop_types_default().string,user:prop_types_default().object,attentionRequired:prop_types_default().bool,className:prop_types_default().string,t:prop_types_default().func};const Avatar_UserAvatar=(0,es.CI)("common")(UserAvatar);UserAvatar.__docgenInfo={description:"",methods:[{name:"getDefaultState",docblock:"Get default state\n@returns {*}",modifiers:[],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"avatarUrl",docblock:"Returns the current avatar URL from the props\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the current avatar URL from the props"},{name:"propsHasUrl",docblock:"Return true if the user from props contains a valid profile with avatar url properties\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the user from props contains a valid profile with avatar url properties"},{name:"propsUrlHasProtocol",docblock:"Check if the url has a protocol like http or https?\n@todo only check https for now\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the url has a protocol like http or https?"},{name:"formatUrl",docblock:"Format the avatar url to point on the site url.\n@param {string} url The relative url\n@returns {string}",modifiers:[],params:[{name:"url",description:"The relative url",type:{name:"string"},optional:!1}],returns:{type:{name:"string"}},description:"Format the avatar url to point on the site url."},{name:"isDefaultAvatarUrlFromApi",docblock:"Returns true if the given URL matches a default avatar from the API\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the given URL matches a default avatar from the API"},{name:"getAvatarSrc",docblock:"Get the user avatar url. If the user has no avatar defined, return the default one.\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Get the user avatar url. If the user has no avatar defined, return the default one."},{name:"handleError",docblock:"Handle error while loading the user avatar image.\nBy instance when the image is not present on the server.\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Handle error while loading the user avatar image.\nBy instance when the image is not present on the server."},{name:"handleLoaded",docblock:"Handle loaded image event.\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Handle loaded image event."},{name:"getAltText",docblock:"Get the user avatar image alternative text.\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Get the user avatar image alternative text."}],displayName:"UserAvatar",props:{className:{defaultValue:{value:'"avatar user-avatar"',computed:!1},description:"",type:{name:"string"},required:!1},baseUrl:{description:"",type:{name:"string"},required:!1},user:{description:"",type:{name:"object"},required:!1},attentionRequired:{description:"",type:{name:"bool"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Error/DisplayHttpError/DisplayHttpError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class DisplayHttpError extends react__WEBPACK_IMPORTED_MODULE_0__.Component{get errorTitle(){return{403:this.props.t("Whoops... access is denied"),404:this.props.t("Whoops... looks like you are lost.")}[this.props.errorCode]||""}get errorDescription(){return{403:this.props.t("Access is restricted to authorized users only."),404:this.props.t("We could not find the page you are looking for.")}[this.props.errorCode]||""}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"http-error main-column"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"main-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,this.props.errorCode),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",null,this.errorTitle),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,this.errorDescription)))))}}DisplayHttpError.propTypes={errorCode:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number.isRequired,t:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(DisplayHttpError);DisplayHttpError.__docgenInfo={description:"This component allows to display an HTTP error page",methods:[{name:"errorTitle",docblock:"Returns the title text associated to the HTTP error code passed as props.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the title text associated to the HTTP error code passed as props."},{name:"errorDescription",docblock:"Returns the description text associated to the HTTP error code passed as props.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the description text associated to the HTTP error code passed as props."}],displayName:"DisplayHttpError",props:{errorCode:{description:"",type:{name:"number"},required:!0},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Fingerprint/Fingerprint.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class Fingerprint extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fingerprint"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fingerprint-line"},this.props.fingerprint?.substring(0,20)?.replace(/.{4}/g,"$& ")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fingerprint-line"},this.props.fingerprint?.substring(20)?.replace(/.{4}/g,"$& ")))}}Fingerprint.propTypes={fingerprint:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired};const __WEBPACK_DEFAULT_EXPORT__=Fingerprint;Fingerprint.__docgenInfo={description:"",methods:[],displayName:"Fingerprint",props:{fingerprint:{description:"",type:{name:"string"},required:!0}}}},"./src/react-extension/components/Common/Range/Range.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);class Range extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(props){super(props),this.bindHandlers()}bindHandlers(){this.handleRangeOptionClick=this.handleRangeOptionClick.bind(this),this.handleRangeChange=this.handleRangeChange.bind(this)}handleRangeOptionClick(value){this.props.disabled||this.props.onChange(this.props.id,value)}handleRangeChange(e){const target=e.target;this.props.onChange(target.name,this.values[target.value].value)}getComputedStyleForEntropyStep(index,valueCount){return{left:`${index*(100/(valueCount-1))}%`}}getValueIndex(value){return this.values.findIndex((v=>v.value===value))}get values(){return[{label:"50 bits",value:50},{label:"64 bits",value:64},{label:"80 bits",value:80},{label:"96 bits",value:96},{label:"128 bits",value:128},{label:"160 bits",value:160},{label:"192 bits",value:192},{label:"224 bits",value:224}]}render(){const values=this.values,valueCount=values.length,{id,value}=this.props;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"range-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"range-labels"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{key:"min"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Weak")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{key:"max"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Secure"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"range-input-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"range",className:"range-input",id,name:id,min:0,max:values.length-1,value:this.getValueIndex(value),list:`${this.props.id}-values`,onChange:this.handleRangeChange,required:!0,disabled:this.props.disabled}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{className:"range-options"},values.map(((v,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{key:`li-${index}`,onClick:()=>this.handleRangeOptionClick(v.value),style:this.getComputedStyleForEntropyStep(index,valueCount),className:"range-option "+(value===v.value?"range-option--active":""),disabled:this.props.disabled},v.label))))))}}Range.propTypes={value:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number.isRequired,id:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string.isRequired,onChange:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func,disabled:prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(Range);Range.__docgenInfo={description:"Display of the Range component",methods:[{name:"bindHandlers",docblock:"Binds the component handlers",modifiers:[],params:[],returns:null,description:"Binds the component handlers"},{name:"handleRangeOptionClick",docblock:"Handles click on range options\n@param {number} value",modifiers:[],params:[{name:"value",type:{name:"number"},optional:!1}],returns:null,description:"Handles click on range options"},{name:"handleRangeChange",docblock:"Handles input range change event\n@param {ReactEvent} e",modifiers:[],params:[{name:"e",type:{name:"ReactEvent"},optional:!1}],returns:null,description:"Handles input range change event"},{name:"getComputedStyleForEntropyStep",docblock:"Returns the computed style to apply to an option based on its index\n@param {number} index the index number in the list\n@param {number} valueCount the size of the list\n@returns {Object}",modifiers:[],params:[{name:"index",description:"the index number in the list",type:{name:"number"},optional:!1},{name:"valueCount",description:"the size of the list",type:{name:"number"},optional:!1}],returns:{type:{name:"Object"}},description:"Returns the computed style to apply to an option based on its index"},{name:"getValueIndex",docblock:"Returns the index in the values list of the given value\n@param {number} value\n@returns {number}",modifiers:[],params:[{name:"value",type:{name:"number"},optional:!1}],returns:{type:{name:"number"}},description:"Returns the index in the values list of the given value"},{name:"values",docblock:"Returns the list of available values\n@returns {Array<{label: string, value: number}>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[]}},description:"Returns the list of available values"}],displayName:"Range",props:{value:{description:"",type:{name:"number"},required:!0},id:{description:"",type:{name:"string"},required:!0},onChange:{description:"",type:{name:"func"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationInternationalizationContext/AdministrationInternationalizationContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m$:()=>AdminInternationalizationContextProvider,A3:()=>withAdminInternationalization});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),apiClient=__webpack_require__("./src/shared/lib/apiClient/apiClient.js");const Internationalisation_InternationalisationService=class InternationalisationService{constructor(apiClientOptions){apiClientOptions.setResourceName("locale/settings"),this.apiClient=new apiClient.O(apiClientOptions)}async save(lang){return(await this.apiClient.create(lang)).body}},AdminInternationalizationContext=react.createContext({getCurrentLocale:()=>{},getLocale:()=>{},supportedLocales:()=>{},setLocale:()=>{},hasLocaleChanges:()=>{},findLocale:()=>{},save:()=>{},setProcessing:()=>{},isProcessing:()=>{},clearContext:()=>{}});class AdminInternationalizationContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.internalisationService=new Internationalisation_InternationalisationService(apiClientOptions)}get defaultState(){return{currentLocale:null,locale:"en-UK",processing:!0,getCurrentLocale:this.getCurrentLocale.bind(this),getLocale:this.getLocale.bind(this),setLocale:this.setLocale.bind(this),findLocale:this.findLocale.bind(this),hasLocaleChanges:this.hasLocaleChanges.bind(this),isProcessing:this.isProcessing.bind(this),setProcessing:this.setProcessing.bind(this),save:this.save.bind(this),clearContext:this.clearContext.bind(this)}}findLocale(){this.setProcessing(!0);const result=this.props.context.siteSettings.locale;this.setState({currentLocale:result,locale:result,processing:!1})}getCurrentLocale(){return this.state.currentLocale}getLocale(){return this.state.locale}async setLocale(locale){await this.setState({locale})}isProcessing(){return this.state.processing}setProcessing(processing){this.setState({processing})}hasLocaleChanges(){return this.state.locale!==this.state.currentLocale}clearContext(){const{currentLocale,locale,processing}=this.defaultState;this.setState({currentLocale,locale,processing})}async save(){this.setProcessing(!0),await this.internalisationService.save({value:this.state.locale}),this.props.context.onRefreshLocaleRequested(this.state.locale),this.findLocale()}render(){return react.createElement(AdminInternationalizationContext.Provider,{value:this.state},this.props.children)}}AdminInternationalizationContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any};(0,AppContext.L)(AdminInternationalizationContextProvider);function withAdminInternationalization(WrappedComponent){return class WithAdminInternationalization extends react.Component{render(){return react.createElement(AdminInternationalizationContext.Consumer,null,(adminInternationalizationContext=>react.createElement(WrappedComponent,{adminInternationalizationContext,...this.props})))}}}AdminInternationalizationContextProvider.__docgenInfo={description:"The Administration Internationalization context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findLocale",docblock:"Find locale from API",modifiers:[],params:[],returns:null,description:"Find locale from API"},{name:"getCurrentLocale",docblock:"Returns the locale actually saved\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the locale actually saved"},{name:"getLocale",docblock:"Returns the locale that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the locale that have been fetch previously."},{name:"setLocale",docblock:"Handle locale changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:["async"],params:[{name:"locale",optional:!1}],returns:{type:{name:"void"}},description:"Handle locale changes."},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"setProcessing",docblock:"Handle processing change.\n@params {Boolean} processing value\n@returns {void}",modifiers:[],params:[{name:"processing",optional:!1}],returns:{type:{name:"void"}},description:"Handle processing change."},{name:"hasLocaleChanges",docblock:"Check if there are changes to apply\n@returns {Boolean}",modifiers:[],params:[],returns:{type:{name:"Boolean"}},description:"Check if there are changes to apply"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."},{name:"save",docblock:"Whenever the save has been requested",modifiers:["async"],params:[],returns:null,description:"Whenever the save has been requested"}],displayName:"AdminInternationalizationContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationMfaPolicy/AdministrationMfaPolicyContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{sO:()=>AdminMfaPolicyContextProvider,yS:()=>withAdminMfaPolicy});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js");const mfaPolicy_MfaPolicyViewModel=class MfaPolicyViewModel{constructor(settings={remember_me_for_a_month:!1}){this.policy=settings.policy,this.rememberMeForAMonth=settings.remember_me_for_a_month}};var apiClient=__webpack_require__("./src/shared/lib/apiClient/apiClient.js");const mfaPolicy_MfaPolicyService=class MfaPolicyService{constructor(apiClientOptions){apiClientOptions.setResourceName("mfa-policies/settings"),this.apiClient=new apiClient.O(apiClientOptions)}async find(){return(await this.apiClient.findAll()).body}async save(dto){await this.apiClient.create(dto)}};var MfaPolicyEnumeration=__webpack_require__("./src/shared/models/mfaPolicy/MfaPolicyEnumeration.js");const mfaPolicy_MfaPolicyDto=class MfaPolicyDto{constructor(settings={rememberMeForAMonth:!1}){this.policy=settings.policy||MfaPolicyEnumeration.F.OPTIN,this.remember_me_for_a_month=settings.rememberMeForAMonth}},AdminMfaPolicyContext=react.createContext({getCurrentSettings:()=>{},getSettings:()=>{},setSettings:()=>{},hasSettingsChanges:()=>{},findSettings:()=>{},setProcessing:()=>{},isProcessing:()=>{},clearContext:()=>{},save:()=>{}});class AdminMfaPolicyContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.mfaPolicyService=new mfaPolicy_MfaPolicyService(apiClientOptions)}get defaultState(){return{settings:new mfaPolicy_MfaPolicyViewModel,currentSettings:new mfaPolicy_MfaPolicyViewModel,processing:!0,getCurrentSettings:this.getCurrentSettings.bind(this),getSettings:this.getSettings.bind(this),setSettings:this.setSettings.bind(this),findSettings:this.findSettings.bind(this),hasSettingsChanges:this.hasSettingsChanges.bind(this),isProcessing:this.isProcessing.bind(this),setProcessing:this.setProcessing.bind(this),clearContext:this.clearContext.bind(this),save:this.save.bind(this)}}async findSettings(callback=()=>{}){this.setProcessing(!0);const result=await this.mfaPolicyService.find(),currentSettings=new mfaPolicy_MfaPolicyViewModel(result);this.setState({currentSettings}),this.setState({settings:currentSettings},callback),this.setProcessing(!1)}async save(){this.setProcessing(!0);const newSettings=new mfaPolicy_MfaPolicyDto(this.state.settings);await this.mfaPolicyService.save(newSettings),await this.findSettings()}getCurrentSettings(){return this.state.currentSettings}getSettings(){return this.state.settings}setSettings(key,value,callback=()=>{}){const newSettings=Object.assign({},this.state.settings,{[key]:value});this.setState({settings:newSettings},callback)}isProcessing(){return this.state.processing}setProcessing(processing){this.setState({processing})}hasSettingsChanges(){return JSON.stringify(this.state.currentSettings)!==JSON.stringify(this.state.settings)}clearContext(){const{currentSettings,settings,processing}=this.defaultState;this.setState({currentSettings,settings,processing})}render(){return react.createElement(AdminMfaPolicyContext.Provider,{value:this.state},this.props.children)}}AdminMfaPolicyContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any,t:prop_types_default().any,actionFeedbackContext:prop_types_default().object};(0,AppContext.L)(AdminMfaPolicyContextProvider);function withAdminMfaPolicy(WrappedComponent){return class WithAdminMfaPolicy extends react.Component{render(){return react.createElement(AdminMfaPolicyContext.Consumer,null,(adminMfaPolicyContext=>react.createElement(WrappedComponent,{adminMfaPolicyContext,...this.props})))}}}AdminMfaPolicyContextProvider.__docgenInfo={description:"The Administration mfa policy context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findSettings",docblock:"Find the self registration settings\n@return {Promise<void>}",modifiers:["async"],params:[{name:"callback",optional:!0}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find the self registration settings"},{name:"save",docblock:"Whenever the save has been requested",modifiers:["async"],params:[],returns:null,description:"Whenever the save has been requested"},{name:"getCurrentSettings",docblock:"Returns the setting actually saved inside DB\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the setting actually saved inside DB"},{name:"getSettings",docblock:"Returns the settings that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the settings that have been fetch previously."},{name:"setSettings",docblock:"Handle settings changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"key",optional:!1},{name:"value",optional:!1},{name:"callback",optional:!0}],returns:{type:{name:"void"}},description:"Handle settings changes."},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"setProcessing",docblock:"Handle processing change.\n@params {Boolean} processing value\n@returns {void}",modifiers:[],params:[{name:"processing",optional:!1}],returns:{type:{name:"void"}},description:"Handle processing change."},{name:"hasSettingsChanges",docblock:"Check if there are changes to apply\n@returns {Boolean}",modifiers:[],params:[],returns:{type:{name:"Boolean"}},description:"Check if there are changes to apply"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."}],displayName:"AdminMfaPolicyContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"any"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationUserPassphrasePoliciesContext/AdministrationUserPassphrasePoliciesContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>AdministrationUserPassphrasePoliciesContext_AdministrationUserPassphrasePoliciesContext,pE:()=>withAdminUserPassphrasePolicies});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),entity=__webpack_require__("./src/shared/models/entity/abstract/entity.js");class UserPassphrasePoliciesEntity extends entity.A{constructor(userPassphrasePoliciesDto,options={}){super(entitySchema.A.validate(UserPassphrasePoliciesEntity.ENTITY_NAME,userPassphrasePoliciesDto,UserPassphrasePoliciesEntity.getSchema()),options)}static getSchema(){return{type:"object",required:["entropy_minimum","external_dictionary_check"],properties:{id:{type:"string",format:"uuid"},entropy_minimum:{type:"integer",minimum:50,maximum:224},external_dictionary_check:{type:"boolean"},created:{type:"string",format:"date-time"},created_by:{type:"string",format:"uuid"},modified:{type:"string",format:"date-time"},modified_by:{type:"string",format:"uuid"}}}}static get ENTITY_NAME(){return"UserPassphrasePolicies"}static createFromDefault(data={}){const dto=Object.assign({entropy_minimum:50,external_dictionary_check:!0},data);return new UserPassphrasePoliciesEntity(dto)}}const userPassphrasePoliciesEntity=UserPassphrasePoliciesEntity;class UserPassphrasePoliciesViewModel{constructor(settings={}){this.external_dictionary_check=settings?.external_dictionary_check,this.entropy_minimum=settings?.entropy_minimum}static getSchema(){const baseEntitySchema=userPassphrasePoliciesEntity.getSchema();return{type:"object",required:["entropy_minimum","external_dictionary_check"],properties:{entropy_minimum:baseEntitySchema.properties.entropy_minimum,external_dictionary_check:baseEntitySchema.properties.external_dictionary_check}}}static fromEntityDto(entityDto){const data={entropy_minimum:parseInt(entityDto?.entropy_minimum,10)||50,external_dictionary_check:Boolean(entityDto?.external_dictionary_check)};return new UserPassphrasePoliciesViewModel(data)}static isDataDifferent(a,b){return["entropy_minimum","external_dictionary_check"].some((key=>a[key]!==b[key]))}toEntityDto(){return{entropy_minimum:this.entropy_minimum,external_dictionary_check:this.external_dictionary_check}}cloneWithMutation(field,value){const clone={...this,[field]:value};return new UserPassphrasePoliciesViewModel(clone)}validate(){const schema=UserPassphrasePoliciesViewModel.getSchema();try{entitySchema.A.validate(this.constructor.name,this,schema)}catch(e){return e}return new entityValidationError.A}}const userPassphrasePolicies_UserPassphrasePoliciesViewModel=UserPassphrasePoliciesViewModel,AdministrationUserPassphrasePoliciesContext=react.createContext({getSettings:()=>{},setSettings:()=>{},findSettings:()=>{},isProcessing:()=>{},validateData:()=>{},save:()=>{},getErrors:()=>{},hasSettingsChanges:()=>{}});class AdministrationUserPassphrasePoliciesContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{processing:!1,errors:null,hasBeenValidated:!1,isDataModified:!1,settings:new userPassphrasePolicies_UserPassphrasePoliciesViewModel,findSettings:this.findSettings.bind(this),getSettings:this.getSettings.bind(this),setSettings:this.setSettings.bind(this),isProcessing:this.isProcessing.bind(this),validateData:this.validateData.bind(this),save:this.save.bind(this),getErrors:this.getErrors.bind(this),hasSettingsChanges:this.hasSettingsChanges.bind(this)}}async findSettings(){this.setState({processing:!0});const result=await this.props.context.port.request("passbolt.user-passphrase-policies.find"),settings=userPassphrasePolicies_UserPassphrasePoliciesViewModel.fromEntityDto(result);this.setState({settings,currentSettings:settings,processing:!1})}getSettings(){return this.state.settings}setSettings(key,value){const settings=this.state.settings.cloneWithMutation(key,value),isDataModified=userPassphrasePolicies_UserPassphrasePoliciesViewModel.isDataDifferent(settings,this.state.currentSettings);if(!this.state.hasBeenValidated)return void this.setState({settings,isDataModified});const errors=settings.validate();this.setState({errors,settings,isDataModified})}isProcessing(){return this.state.processing}validateData(){const validattionError=this.state.settings.validate(),hasErrors=validattionError.hasErrors(),errors=hasErrors?validattionError:null;return this.setState({errors,hasBeenValidated:!0}),!hasErrors}async save(){this.setState({processing:!0});try{const settingsDto=this.state.settings.toEntityDto(),result=await this.props.context.port.request("passbolt.user-passphrase-policies.save",settingsDto),settings=userPassphrasePolicies_UserPassphrasePoliciesViewModel.fromEntityDto(result);this.setState({settings,currentSettings:settings,processing:!1,isDataModified:!1})}finally{this.setState({processing:!1})}}getErrors(){return this.state.errors}hasSettingsChanges(){return this.state.isDataModified}render(){return react.createElement(AdministrationUserPassphrasePoliciesContext.Provider,{value:this.state},this.props.children)}}AdministrationUserPassphrasePoliciesContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any,t:prop_types_default().any};const AdministrationUserPassphrasePoliciesContext_AdministrationUserPassphrasePoliciesContext=(0,AppContext.L)((0,es.CI)("common")(AdministrationUserPassphrasePoliciesContextProvider));function withAdminUserPassphrasePolicies(WrappedComponent){return class WithAdminUserPassphrasePolicies extends react.Component{render(){return react.createElement(AdministrationUserPassphrasePoliciesContext.Consumer,null,(adminUserPassphrasePoliciesContext=>react.createElement(WrappedComponent,{adminUserPassphrasePoliciesContext,...this.props})))}}}AdministrationUserPassphrasePoliciesContextProvider.__docgenInfo={description:"The Administration User passphrase Policies context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findSettings",docblock:"Find the User Passphrase Policies\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find the User Passphrase Policies"},{name:"getSettings",docblock:"Returns the settings that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the settings that have been fetch previously."},{name:"setSettings",docblock:"Set the givent field with the given value.",modifiers:[],params:[{name:"key",optional:!1},{name:"value",optional:!1}],returns:null,description:"Set the givent field with the given value."},{name:"isProcessing",docblock:"Returns true if data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if data is under processing"},{name:"validateData",docblock:"runs the current data validation\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"runs the current data validation"},{name:"save",docblock:"Saves the data on the API",modifiers:["async"],params:[],returns:null,description:"Saves the data on the API"},{name:"getErrors",docblock:"Returns the latest validation errors available\n@returns {EntityValidationError|null}",modifiers:[],params:[],returns:{type:{name:"union",elements:[{name:"EntityValidationError"}]}},description:"Returns the latest validation errors available"},{name:"hasSettingsChanges",docblock:"Returns true if the data has changed\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the data has changed"}],displayName:"AdministrationUserPassphrasePoliciesContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/AnnouncementContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>AnnouncementContextProvider,w2:()=>withAnnouncement});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),uuid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");const AnnouncementContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({announcements:[],show:()=>{},close:()=>{}});class AnnouncementContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{announcements:[],show:(Announcement,AnnouncementProps)=>{const announcementKey=(0,uuid__WEBPACK_IMPORTED_MODULE_1__.A)();return this.setState({announcements:[...this.state.announcements,{key:announcementKey,Announcement,AnnouncementProps}]}),announcementKey},close:async announcementKey=>await this.setState({announcements:this.state.announcements.filter((announcement=>announcementKey!==announcement.key))})}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(AnnouncementContext.Provider,{value:this.state},this.props.children)}}function withAnnouncement(WrappedComponent){return class WithAnnouncement extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(AnnouncementContext.Consumer,null,(announcementContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{announcementContext,...this.props})))}}}AnnouncementContextProvider.displayName="AnnouncementContextProvider",AnnouncementContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().any},AnnouncementContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"}],displayName:"AnnouncementContextProvider",props:{children:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/ContextualMenuContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>ContextualMenuContextProvider,t6:()=>withContextualMenu,wp:()=>ContextualMenuContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const ContextualMenuContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({ContextualMenu:null,show:()=>{},hide:()=>{}});class ContextualMenuContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{contextualMenus:[],show:(ContextualMenuComponent,componentProps)=>this.setState({contextualMenus:[...this.state.contextualMenus,{ContextualMenuComponent,componentProps}]}),hide:index=>this.setState({contextualMenus:this.state.contextualMenus.filter(((_,contextualMenuIndex)=>contextualMenuIndex!==index))})}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContextualMenuContext.Provider,{value:this.state},this.props.children)}}function withContextualMenu(WrappedComponent){return class WithContextualMenu extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContextualMenuContext.Consumer,null,(contextualMenuContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{contextualMenuContext,...this.props})))}}}ContextualMenuContextProvider.displayName="ContextualMenuContextProvider",ContextualMenuContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any},ContextualMenuContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"}],displayName:"ContextualMenuContextProvider",props:{children:{description:"",type:{name:"any"},required:!1}}}},"./src/shared/components/Cards/CardItem.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class CardItem extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"button-transparent card",onClick:this.props.onClick},this.props.icon,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"card-information"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:`title ${this.props.isBeta&&"is-beta"}`,title:this.props.title},this.props.title,this.props.isBeta&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"chips beta"},"beta")),this.props.description&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"info",title:this.props.description},this.props.description)))}}CardItem.defaultProps={isBeta:!1},CardItem.propTypes={icon:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object.isRequired,title:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired,description:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,isBeta:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool.isRequired,onClick:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func};const __WEBPACK_DEFAULT_EXPORT__=CardItem;CardItem.__docgenInfo={description:"This component represents a Card item",methods:[],displayName:"CardItem",props:{isBeta:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},icon:{description:"",type:{name:"object"},required:!0},title:{description:"",type:{name:"string"},required:!0},description:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1}}}},"./src/shared/models/entity/gpgkey/externalGpgKeyCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js"),_abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityCollection.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),_abstract_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js");class ExternalGpgKeyCollection extends _abstract_entityCollection__WEBPACK_IMPORTED_MODULE_1__.A{constructor(externalGpgKeyCollectionDto,options={}){super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_2__.A.validate(ExternalGpgKeyCollection.ENTITY_NAME,externalGpgKeyCollectionDto,ExternalGpgKeyCollection.getSchema()),options);this._props.map((resource=>resource.id)).sort().sort(((a,b)=>{if(a===b)throw new _abstract_entityCollectionError__WEBPACK_IMPORTED_MODULE_3__.A(0,ExternalGpgKeyCollection.RULE_UNIQUE_ID,`Gpgkey fingerprint ${a} already exists.`)})),this._props.forEach((resource=>{this._items.push(new _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A(resource,{clone:!1}))})),this._props=null}static getSchema(){return{type:"array",items:_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema()}}static get ENTITY_NAME(){return"externalGpgKey"}static get RULE_UNIQUE_ID(){return"fingerprint"}}const __WEBPACK_DEFAULT_EXPORT__=ExternalGpgKeyCollection}}]);