/*! For license information please see 9516.54fabe24.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[9516],{"./src/img/svg/arrow_left.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgArrowLeft(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M9 14.25 3.75 9 9 3.75M14.25 9H3.75"})))}},"./src/img/svg/attention.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgAttention(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,clipPath:"url(#attention_svg__clip0_2062_453107)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"var(--icon-exclamation-background-color)",stroke:"var(--icon-exclamation-border-color)",d:"M9 16.5a7.5 7.5 0 1 0 0-15 7.5 7.5 0 0 0 0 15"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-exclamation-color)",d:"M9 6v3M9 12h.008"}))))}},"./src/img/svg/caret_down.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgCaretDown(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:10,height:8,fill:"none",viewBox:"0 0 10 8"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"m1 2 4 4 4-4"})))}},"./src/img/svg/caret_right.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgCaretRight(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:8,height:10,fill:"none",viewBox:"0 0 8 10"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"m2 9 4-4-4-4"})))}},"./src/img/svg/link.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgLink(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:19,height:18,fill:"none",viewBox:"0 0 19 18"},props),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,clipPath:"url(#link_svg__clip0_99_1008536)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M8.33 9.75a3.75 3.75 0 0 0 5.655.405l2.25-2.25a3.75 3.75 0 0 0-5.302-5.303l-1.29 1.283"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M11.33 8.25a3.75 3.75 0 0 0-5.655-.405l-2.25 2.25a3.75 3.75 0 0 0 5.303 5.302l1.282-1.282"}))))}},"./node_modules/debounce-promise/dist/index.js":module=>{module.exports=function debounce(fn){var wait=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},lastCallAt=void 0,deferred=void 0,timer=void 0,pendingArgs=[];return function debounced(){var currentWait=function getWait(wait){return"function"==typeof wait?wait():wait}(wait),currentTime=(new Date).getTime(),isCold=!lastCallAt||currentTime-lastCallAt>currentWait;lastCallAt=currentTime;for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];if(isCold&&options.leading)return options.accumulate?Promise.resolve(fn.call(this,[args])).then((function(result){return result[0]})):Promise.resolve(fn.call.apply(fn,[this].concat(args)));if(deferred?clearTimeout(timer):deferred=function defer(){var deferred={};return deferred.promise=new Promise((function(resolve,reject){deferred.resolve=resolve,deferred.reject=reject})),deferred}(),pendingArgs.push(args),timer=setTimeout(flush.bind(this),currentWait),options.accumulate){var argsIndex=pendingArgs.length-1;return deferred.promise.then((function(results){return results[argsIndex]}))}return deferred.promise};function flush(){var thisDeferred=deferred;clearTimeout(timer),Promise.resolve(options.accumulate?fn.call(this,pendingArgs):fn.apply(this,pendingArgs[pendingArgs.length-1])).then(thisDeferred.resolve,thisDeferred.reject),pendingArgs=[],deferred=null}}},"./node_modules/memoize-one/dist/memoize-one.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>memoizeOne});var safeIsNaN=Number.isNaN||function ponyfill(value){return"number"==typeof value&&value!=value};function areInputsEqual(newInputs,lastInputs){if(newInputs.length!==lastInputs.length)return!1;for(var i=0;i<newInputs.length;i++)if(first=newInputs[i],second=lastInputs[i],!(first===second||safeIsNaN(first)&&safeIsNaN(second)))return!1;var first,second;return!0}function memoizeOne(resultFn,isEqual){void 0===isEqual&&(isEqual=areInputsEqual);var cache=null;function memoized(){for(var newArgs=[],_i=0;_i<arguments.length;_i++)newArgs[_i]=arguments[_i];if(cache&&cache.lastThis===this&&isEqual(newArgs,cache.lastArgs))return cache.lastResult;var lastResult=resultFn.apply(this,newArgs);return cache={lastResult,lastArgs:newArgs,lastThis:this},lastResult}return memoized.clear=function clear(){cache=null},memoized}},"./src/react-extension/components/Administration/AdministrationWorkspace.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Administration_AdministrationWorkspace});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),DisplayUserBadgeMenu=__webpack_require__("./src/react-extension/components/User/DisplayUserBadgeMenu/DisplayUserBadgeMenu.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),NavigationContext=__webpack_require__("./src/react-extension/contexts/NavigationContext.js");class DisplayAdministrationMenu extends react.Component{constructor(props){super(props),this.bindCallbacks()}canIUse(featureFlag){return Boolean(this.props.context.siteSettings?.canIUse(featureFlag))}get isMfaEnabled(){return this.canIUse("multiFactorAuthentication")}get isUserDirectoryEnabled(){return this.canIUse("directorySync")}get canIUseEE(){return this.canIUse("ee")}get canIUseLocale(){return this.canIUse("locale")}get canIUseAccountRecovery(){return this.canIUse("accountRecovery")}get canIUseSmtpSettings(){return this.canIUse("smtpSettings")}get canIUseSelfRegistrationSettings(){return this.canIUse("selfRegistration")}get canIUseSso(){return this.canIUse("sso")}get canIUseMfaPolicy(){return this.canIUse("mfaPolicies")}get canIUsePasswordPolicies(){return this.canIUse("passwordPoliciesUpdate")}get canIUseRbacs(){return this.canIUse("rbacs")}get canIUseUserPassphrasePolicies(){return this.canIUse("userPassphrasePolicies")}get canIUsePasswordExpiry(){return this.canIUse("passwordExpiry")}get canIUseHealthcheck(){return this.canIUse("healthcheckUi")}get canIUseMetadata(){return this.canIUse("metadata")}bindCallbacks(){this.handleMfaClick=this.handleMfaClick.bind(this),this.handleUserDirectoryClick=this.handleUserDirectoryClick.bind(this),this.handleEmailNotificationsClick=this.handleEmailNotificationsClick.bind(this),this.handleSubscriptionClick=this.handleSubscriptionClick.bind(this),this.handleInternationalizationClick=this.handleInternationalizationClick.bind(this),this.handleAccountRecoveryClick=this.handleAccountRecoveryClick.bind(this),this.handleSmtpSettingsClick=this.handleSmtpSettingsClick.bind(this),this.handleSelfRegistrationClick=this.handleSelfRegistrationClick.bind(this),this.handleSsoClick=this.handleSsoClick.bind(this),this.handleMfaPolicyClick=this.handleMfaPolicyClick.bind(this),this.handleRbacsClick=this.handleRbacsClick.bind(this),this.handlePasswordPoliciesClick=this.handlePasswordPoliciesClick.bind(this),this.handleUserPassphrasePoliciesClick=this.handleUserPassphrasePoliciesClick.bind(this),this.handlePasswordExpirySettingsClick=this.handlePasswordExpirySettingsClick.bind(this),this.handleHealthcheckClick=this.handleHealthcheckClick.bind(this),this.handleContentTypesEncryptedMetadataClick=this.handleContentTypesEncryptedMetadataClick.bind(this),this.handleContentTypesMetadataKeyClick=this.handleContentTypesMetadataKeyClick.bind(this)}handleMfaClick(){this.props.navigationContext.onGoToAdministrationMfaRequested()}handleUserDirectoryClick(){this.props.navigationContext.onGoToAdministrationUsersDirectoryRequested()}handleEmailNotificationsClick(){this.props.navigationContext.onGoToAdministrationEmailNotificationsRequested()}handleSubscriptionClick(){this.props.navigationContext.onGoToAdministrationSubscriptionRequested()}handleInternationalizationClick(){this.props.navigationContext.onGoToAdministrationInternationalizationRequested()}handleAccountRecoveryClick(){this.props.navigationContext.onGoToAdministrationAccountRecoveryRequested()}handleSmtpSettingsClick(){this.props.navigationContext.onGoToAdministrationSmtpSettingsRequested()}handleSelfRegistrationClick(){this.props.navigationContext.onGoToAdministrationSelfRegistrationRequested()}handleSsoClick(){this.props.navigationContext.onGoToAdministrationSsoRequested()}handleRbacsClick(){this.props.navigationContext.onGoToAdministrationRbacsRequested()}handleMfaPolicyClick(){this.props.navigationContext.onGoToAdministrationMfaPolicyRequested()}handlePasswordPoliciesClick(){this.props.navigationContext.onGoToAdministrationPasswordPoliciesRequested()}handleUserPassphrasePoliciesClick(){this.props.navigationContext.onGoToAdministrationUserPassphrasePoliciesRequested()}handlePasswordExpirySettingsClick(){this.props.navigationContext.onGoToAdministrationPasswordExpirySettingsRequested()}handleHealthcheckClick(){this.props.navigationContext.onGoToAdministrationHealthcheckRequested()}handleContentTypesEncryptedMetadataClick(){this.props.navigationContext.onGoToAdministrationContentTypesEncryptedMetadataRequested()}handleContentTypesMetadataKeyClick(){this.props.navigationContext.onGoToAdministrationContentTypesMetadataKeyRequested()}isMfaSelected(){return AdministrationWorkspaceContext.UZ.MFA===this.props.administrationWorkspaceContext.selectedAdministration}isMfaPolicySelected(){return AdministrationWorkspaceContext.UZ.MFA_POLICY===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordPoliciesSelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isUserDirectorySelected(){return AdministrationWorkspaceContext.UZ.USER_DIRECTORY===this.props.administrationWorkspaceContext.selectedAdministration}isEmailNotificationsSelected(){return AdministrationWorkspaceContext.UZ.EMAIL_NOTIFICATION===this.props.administrationWorkspaceContext.selectedAdministration}isSubscriptionSelected(){return AdministrationWorkspaceContext.UZ.SUBSCRIPTION===this.props.administrationWorkspaceContext.selectedAdministration}isInternationalizationSelected(){return AdministrationWorkspaceContext.UZ.INTERNATIONALIZATION===this.props.administrationWorkspaceContext.selectedAdministration}isAccountRecoverySelected(){return AdministrationWorkspaceContext.UZ.ACCOUNT_RECOVERY===this.props.administrationWorkspaceContext.selectedAdministration}isSsoSelected(){return AdministrationWorkspaceContext.UZ.SSO===this.props.administrationWorkspaceContext.selectedAdministration}isRbacSelected(){return AdministrationWorkspaceContext.UZ.RBAC===this.props.administrationWorkspaceContext.selectedAdministration}isSmtpSettingsSelected(){return AdministrationWorkspaceContext.UZ.SMTP_SETTINGS===this.props.administrationWorkspaceContext.selectedAdministration}isSelfRegistrationSettingsSelected(){return AdministrationWorkspaceContext.UZ.SELF_REGISTRATION===this.props.administrationWorkspaceContext.selectedAdministration}isUserPassphrasePoliciesSelected(){return AdministrationWorkspaceContext.UZ.USER_PASSPHRASE_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordExpirySettingsSelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_EXPIRY===this.props.administrationWorkspaceContext.selectedAdministration}isHealthcheckSelected(){return AdministrationWorkspaceContext.UZ.HEALTHCHECK===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesEncryptedMetadataSelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_ENCRYPTED_METADATA===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesMetadataKeySelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_METADATA_KEY===this.props.administrationWorkspaceContext.selectedAdministration}render(){return react.createElement("div",{className:"navigation-secondary navigation-administration"},react.createElement("ul",{id:"administration_menu",className:"clearfix menu ready"},this.isMfaEnabled&&react.createElement("li",{id:"mfa_menu"},react.createElement("div",{className:"row "+(this.isMfaSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleMfaClick},react.createElement("span",null,react.createElement(es.x6,null,"Multi Factor Authentication"))))))),this.canIUseMfaPolicy&&react.createElement("li",{id:"mfa_policy_menu"},react.createElement("div",{className:"row "+(this.isMfaPolicySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleMfaPolicyClick},react.createElement("span",null,react.createElement(es.x6,null,"MFA Policy"))))))),this.canIUsePasswordPolicies&&react.createElement("li",{id:"password_policy_menu"},react.createElement("div",{className:"row "+(this.isPasswordPoliciesSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handlePasswordPoliciesClick},react.createElement("span",null,react.createElement(es.x6,null,"Password Policy"))))))),this.isUserDirectoryEnabled&&react.createElement("li",{id:"user_directory_menu"},react.createElement("div",{className:"row "+(this.isUserDirectorySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleUserDirectoryClick},react.createElement("span",null,react.createElement(es.x6,null,"Users Directory"))))))),react.createElement("li",{id:"email_notification_menu"},react.createElement("div",{className:"row "+(this.isEmailNotificationsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleEmailNotificationsClick},react.createElement("span",null,react.createElement(es.x6,null,"Email Notifications"))))))),this.canIUseLocale&&react.createElement("li",{id:"internationalization_menu"},react.createElement("div",{className:"row "+(this.isInternationalizationSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleInternationalizationClick},react.createElement("span",null,react.createElement(es.x6,null,"Internationalisation"))))))),this.canIUseEE&&react.createElement("li",{id:"subscription_menu"},react.createElement("div",{className:"row "+(this.isSubscriptionSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSubscriptionClick},react.createElement("span",null,react.createElement(es.x6,null,"Subscription"))))))),this.canIUseAccountRecovery&&react.createElement("li",{id:"account_recovery_menu"},react.createElement("div",{className:"row "+(this.isAccountRecoverySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleAccountRecoveryClick},react.createElement("span",null,react.createElement(es.x6,null,"Account Recovery"))))))),this.canIUseSmtpSettings&&react.createElement("li",{id:"smtp_settings_menu"},react.createElement("div",{className:"row "+(this.isSmtpSettingsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSmtpSettingsClick},react.createElement("span",null,react.createElement(es.x6,null,"Email server"))))))),this.canIUseSelfRegistrationSettings&&react.createElement("li",{id:"self_registration_menu"},react.createElement("div",{className:"row "+(this.isSelfRegistrationSettingsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSelfRegistrationClick},react.createElement("span",null,react.createElement(es.x6,null,"Self Registration"))))))),this.canIUseSso&&react.createElement("li",{id:"sso_menu"},react.createElement("div",{className:"row "+(this.isSsoSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSsoClick},react.createElement("span",null,react.createElement(es.x6,null,"Single Sign-On"))))))),this.canIUseRbacs&&react.createElement("li",{id:"rbacs_menu"},react.createElement("div",{className:"row "+(this.isRbacSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleRbacsClick},react.createElement("span",null,react.createElement(es.x6,null,"Role-Based Access Control"))))))),this.canIUseUserPassphrasePolicies&&react.createElement("li",{id:"user_passphrase_policies_menu"},react.createElement("div",{className:"row "+(this.isUserPassphrasePoliciesSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleUserPassphrasePoliciesClick},react.createElement("span",null,react.createElement(es.x6,null,"User Passphrase Policies"))))))),this.canIUsePasswordExpiry&&react.createElement("li",{id:"password_expiry_menu"},react.createElement("div",{className:"row "+(this.isPasswordExpirySettingsSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handlePasswordExpirySettingsClick},react.createElement("span",null,react.createElement(es.x6,null,"Password Expiry"))))))),this.canIUseHealthcheck&&react.createElement("li",{id:"healthcheck_menu"},react.createElement("div",{className:"row "+(this.isHealthcheckSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleHealthcheckClick},react.createElement("span",null,react.createElement(es.x6,null,"Passbolt API Status"))))))),this.canIUseMetadata&&react.createElement("li",{id:"encrypted_metadata_menu"},react.createElement("div",{className:"row  "+(this.isContentTypesEncryptedMetadataSelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleContentTypesEncryptedMetadataClick},react.createElement("span",null,react.createElement(es.x6,null,"Encrypted metadata")),react.createElement("span",{className:"chips beta"},"beta")))))),this.canIUseMetadata&&react.createElement("li",{id:"metadata_key_menu"},react.createElement("div",{className:"row  "+(this.isContentTypesMetadataKeySelected()?"selected":"")},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleContentTypesMetadataKeyClick},react.createElement("span",null,react.createElement(es.x6,null,"Metadata key")),react.createElement("span",{className:"chips beta"},"beta"))))))))}}DisplayAdministrationMenu.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,history:prop_types_default().object,navigationContext:prop_types_default().any};const DisplayAdministrationMenu_DisplayAdministrationMenu=(0,react_router.y)((0,AppContext.L)((0,NavigationContext.qN)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayAdministrationMenu)))));DisplayAdministrationMenu.__docgenInfo={description:"This component allows to display the menu of the administration",methods:[{name:"canIUse",docblock:"Returns true if the given feature flag exists and is enabled\n@param {string} featureFlag\n@returns {boolean}",modifiers:[],params:[{name:"featureFlag",type:{name:"string"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the given feature flag exists and is enabled"},{name:"isMfaEnabled",docblock:"Returns true if the user has the MFA capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the user has the MFA capability"},{name:"isUserDirectoryEnabled",docblock:"Returns true if the user has the user directory capability\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the user has the user directory capability"},{name:"canIUseEE",docblock:"Can I use the EE plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the EE plugin"},{name:"canIUseLocale",docblock:"Can I use the locale plugin.\n@type {boolean}",modifiers:["get"],params:[],returns:null,description:"Can I use the locale plugin."},{name:"canIUseAccountRecovery",docblock:"Can I use the account recovery plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the account recovery plugin"},{name:"canIUseSmtpSettings",docblock:"Can I use the SMTP settings plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the SMTP settings plugin"},{name:"canIUseSelfRegistrationSettings",docblock:"Can I use the self registration settings plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the self registration settings plugin"},{name:"canIUseSso",docblock:"Can I use the sso plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the sso plugin"},{name:"canIUseMfaPolicy",docblock:"Can I use the mfa policy plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the mfa policy plugin"},{name:"canIUsePasswordPolicies",docblock:"Can I use the password policy plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the password policy plugin"},{name:"canIUseRbacs",docblock:"Can I use the RBACS plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the RBACS plugin"},{name:"canIUseUserPassphrasePolicies",docblock:"Can I use the User Passphrase Policies plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the User Passphrase Policies plugin"},{name:"canIUsePasswordExpiry",docblock:"Can I use the User Passphrase Policies plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the User Passphrase Policies plugin"},{name:"canIUseHealthcheck",docblock:"Can I use the healthcheck plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the healthcheck plugin"},{name:"canIUseMetadata",docblock:"Can I use the metadata plugin\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can I use the metadata plugin"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleMfaClick",docblock:"Handle when the user click on the mfa menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the mfa menu"},{name:"handleUserDirectoryClick",docblock:"Handle when the user click on the user directory menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the user directory menu"},{name:"handleEmailNotificationsClick",docblock:"Handle when the user click on the email notifications menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the email notifications menu"},{name:"handleSubscriptionClick",docblock:"Handle when the user click on the subscription menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the subscription menu"},{name:"handleInternationalizationClick",docblock:"Handle when the user click on the internationalization menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the internationalization menu"},{name:"handleAccountRecoveryClick",docblock:"Handle when the user click on the account recovery menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the account recovery menu"},{name:"handleSmtpSettingsClick",docblock:"Handle when the user click on the smtp settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the smtp settings menu"},{name:"handleSelfRegistrationClick",docblock:"Handle when the user click on the self registration settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the self registration settings menu"},{name:"handleSsoClick",docblock:"Handle when the user click on the sso menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the sso menu"},{name:"handleRbacsClick",docblock:"Handle when the user click on the rbac menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the rbac menu"},{name:"handleMfaPolicyClick",docblock:"Handle when the user click on the Mfa policy settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Mfa policy settings menu"},{name:"handlePasswordPoliciesClick",docblock:"Handle when the user click on the Password policies settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Password policies settings menu"},{name:"handleUserPassphrasePoliciesClick",docblock:"Handle when the user click on the User Passphrase Policies menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the User Passphrase Policies menu"},{name:"handlePasswordExpirySettingsClick",docblock:"Handle when the user click on the User Passphrase Policies menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the User Passphrase Policies menu"},{name:"handleHealthcheckClick",docblock:"Handle when the user click on the Mfa policy settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the Mfa policy settings menu"},{name:"handleContentTypesEncryptedMetadataClick",docblock:"Handle when the user click on the content types encrypted metadata settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the content types encrypted metadata settings menu"},{name:"handleContentTypesMetadataKeyClick",docblock:"Handle when the user click on the content types metadata key settings menu",modifiers:[],params:[],returns:null,description:"Handle when the user click on the content types metadata key settings menu"},{name:"isMfaSelected",docblock:"If MFA menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA menu is selected"},{name:"isMfaPolicySelected",docblock:"If MFA policiy menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA policiy menu is selected"},{name:"isPasswordPoliciesSelected",docblock:"If Password policiy menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password policiy menu is selected"},{name:"isUserDirectorySelected",docblock:"If User Directory menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User Directory menu is selected"},{name:"isEmailNotificationsSelected",docblock:"If Email Notifications menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Email Notifications menu is selected"},{name:"isSubscriptionSelected",docblock:"If Subscription menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Subscription menu is selected"},{name:"isInternationalizationSelected",docblock:"If Internationalization menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Internationalization menu is selected"},{name:"isAccountRecoverySelected",docblock:"If Account Recovery menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Account Recovery menu is selected"},{name:"isSsoSelected",docblock:"If SSO menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SSO menu is selected"},{name:"isRbacSelected",docblock:"If RBAC menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If RBAC menu is selected"},{name:"isSmtpSettingsSelected",docblock:"If SMTP settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SMTP settings menu is selected"},{name:"isSelfRegistrationSettingsSelected",docblock:"If Self registration settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Self registration settings menu is selected"},{name:"isUserPassphrasePoliciesSelected",docblock:"If User Passphrase Policies menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User Passphrase Policies menu is selected"},{name:"isPasswordExpirySettingsSelected",docblock:"If Password Expiry menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password Expiry menu is selected"},{name:"isHealthcheckSelected",docblock:"If Healthcheck menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Healthcheck menu is selected"},{name:"isContentTypesEncryptedMetadataSelected",docblock:"If content types encrypted metadata menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types encrypted metadata menu is selected"},{name:"isContentTypesMetadataKeySelected",docblock:"If content types metadata key menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types metadata key menu is selected"}],displayName:"DisplayAdministrationMenu",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},history:{description:"",type:{name:"object"},required:!1},navigationContext:{description:"",type:{name:"any"},required:!1}}};var DisplayMfaAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayMfaAdministration/DisplayMfaAdministration.js"),DisplayAdministrationWorkspaceBreadcrumb=__webpack_require__("./src/react-extension/components/Administration/DisplayAdministrationWorkspaceBreadcrumb/DisplayAdministrationWorkspaceBreadcrumb.js"),DisplayUserDirectoryAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayUserDirectoryAdministration/DisplayUserDirectoryAdministration.js"),DisplayEmailNotificationsAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayEmailNotificationsAdministration/DisplayEmailNotificationsAdministration.js"),DisplaySubscriptionKey=__webpack_require__("./src/react-extension/components/Administration/DisplaySubscriptionKey/DisplaySubscriptionKey.js"),DisplayInternationalizationAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayInternationalizationAdministration/DisplayInternationalizationAdministration.js"),ManageAccountRecoveryAdministrationSettings=__webpack_require__("./src/react-extension/components/Administration/ManageAccountRecoveryAdministrationSettings/ManageAccountRecoveryAdministrationSettings.js"),ManageSmtpAdministrationSettings=__webpack_require__("./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/ManageSmtpAdministrationSettings.js"),DisplaySelfRegistrationAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplaySelfRegistrationAdministration/DisplaySelfRegistrationAdministration.js"),ManageSsoSettings=__webpack_require__("./src/react-extension/components/Administration/ManageSsoSettings/ManageSsoSettings.js"),DisplayMfaPolicyAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayMfaPolicyAdministration/DisplayMfaPolicyAdministration.js"),DisplayRbacAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayRbacAdministration/DisplayRbacAdministration.js"),DisplayPasswordPoliciesAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayPasswordPoliciesAdministration/DisplayPasswordPoliciesAdministration.js"),AdministrationUserPassphrasePoliciesContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationUserPassphrasePoliciesContext/AdministrationUserPassphrasePoliciesContext.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js");class DisplayAdministrationUserPassphrasePoliciesActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSave=this.handleSave.bind(this)}get isActionEnabled(){return!this.props.adminUserPassphrasePoliciesContext.isProcessing()}async handleSave(){if(this.isActionEnabled&&this.props.adminUserPassphrasePoliciesContext.validateData())try{await this.props.adminUserPassphrasePoliciesContext.save(),await this.handleSaveSuccess()}catch(error){await this.handleSaveError(error)}}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The user passphrase policies were updated."))}async handleSaveError(error){console.error(error),await this.props.actionFeedbackContext.displayError(error.message),this.props.dialogContext.open(NotifyError.A,{error})}render(){const isDisabled=!this.isActionEnabled;return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{type:"button",className:"button primary",disabled:isDisabled,id:"save-settings",onClick:this.handleSave},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationUserPassphrasePoliciesActions.propTypes={adminUserPassphrasePoliciesContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,dialogContext:prop_types_default().any,t:prop_types_default().func};const DisplayAdministrationUserPassphrasePoliciesActions_DisplayAdministrationUserPassphrasePoliciesActions=(0,AdministrationUserPassphrasePoliciesContext.pE)((0,ActionFeedbackContext.ot)((0,DialogContext.z9)((0,es.CI)("common")(DisplayAdministrationUserPassphrasePoliciesActions))));DisplayAdministrationUserPassphrasePoliciesActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"isActionEnabled",docblock:"Is save button enabled\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is save button enabled"},{name:"handleSave",docblock:"Handles the save action.\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handles the save action."},{name:"handleSaveSuccess",docblock:"Handle save operation success.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle save operation error."}],displayName:"DisplayAdministrationUserPassphrasePoliciesActions",props:{adminUserPassphrasePoliciesContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var Range=__webpack_require__("./src/react-extension/components/Common/Range/Range.js"),portals=__webpack_require__("./src/shared/utils/portals.js"),buoy=__webpack_require__("./src/img/svg/buoy.svg");class DisplayAdministrationUserPassphrasePolicies extends react.PureComponent{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isReady:!1}}async componentDidMount(){await this.props.adminUserPassphrasePoliciesContext.findSettings(),this.setState({isReady:!0})}bindCallbacks(){this.handleMinimumEntropyChange=this.handleMinimumEntropyChange.bind(this),this.handleCheckboxInputChange=this.handleCheckboxInputChange.bind(this)}hasAllInputDisabled(){return this.props.adminUserPassphrasePoliciesContext.isProcessing()}handleMinimumEntropyChange(name,val){const value=parseInt(val,10)||0;this.props.adminUserPassphrasePoliciesContext.setSettings(name,value)}handleCheckboxInputChange(e){const target=e.target,name=target.name,value=Boolean(target.checked);this.props.adminUserPassphrasePoliciesContext.setSettings(name,value)}isWeakSettings(settings){return settings.entropy_minimum<80}get hasWarnings(){const adminContext=this.props.adminUserPassphrasePoliciesContext,settings=adminContext.getSettings();return adminContext.hasSettingsChanges()||this.isWeakSettings(settings)}render(){if(!this.state.isReady)return null;const allInputDisabled=this.hasAllInputDisabled(),adminContext=this.props.adminUserPassphrasePoliciesContext,settings=adminContext.getSettings();return react.createElement("div",{className:"row"},react.createElement("div",{className:"password-policies-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{id:"user-passphrase-policies-title",className:"title"},react.createElement(es.x6,null,"User Passphrase Policies")),react.createElement("form",null,react.createElement("h4",{id:"user-passphrase-policies-entropy-minimum"},react.createElement(es.x6,null,"User passphrase minimal entropy")),react.createElement("div",{className:"input range"},react.createElement(Range.A,{id:"entropy_minimum",onChange:this.handleMinimumEntropyChange,value:settings.entropy_minimum,disabled:allInputDisabled})),react.createElement("div",null,react.createElement(es.x6,null,"You can set the minimal entropy for the users' private key passphrase.")," ",react.createElement(es.x6,null,"This is the passphrase that is asked during sign in or recover.")),react.createElement("h4",{id:"user-passphrase-policies-external-services-subtitle"},react.createElement("span",{className:"input toggle-switch form-element ready"},react.createElement("input",{id:"user-passphrase-policies-external-services-toggle-button",type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"external_dictionary_check",onChange:this.handleCheckboxInputChange,checked:settings?.external_dictionary_check,disabled:allInputDisabled}),react.createElement("label",{htmlFor:"user-passphrase-policies-external-services-toggle-button"},react.createElement(es.x6,null,"External password dictionary check")))),react.createElement("span",{className:"input toggle-switch form-element"},react.createElement(es.x6,null,"Allow passbolt to access external services to check if the user passphrase has been compromised when the user creates it.")))),this.hasWarnings&&react.createElement("div",{className:"warning message"},adminContext.hasSettingsChanges()&&react.createElement("div",{id:"user-passphrase-policies-save-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))),this.isWeakSettings(settings)&&react.createElement("div",{id:"user-passphrase-policies-weak-settings-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Passbolt recommends passphrase strength to be at minimum of ",{MINIMAL_ADVISED_ENTROPY:80}," bits to be safe."))))),react.createElement(DisplayAdministrationUserPassphrasePoliciesActions_DisplayAdministrationUserPassphrasePoliciesActions,null),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"What is user passphrase policies?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about the user passphrase policies, checkout the dedicated page on the help website.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/authentication/user-passphrase-policies/",target:"_blank",rel:"noopener noreferrer"},react.createElement(buoy.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayAdministrationUserPassphrasePolicies.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminUserPassphrasePoliciesContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationUserPassphrasePolicies_DisplayAdministrationUserPassphrasePolicies=(0,AppContext.L)((0,AdministrationWorkspaceContext.Kk)((0,AdministrationUserPassphrasePoliciesContext.pE)((0,es.CI)("common")(DisplayAdministrationUserPassphrasePolicies))));DisplayAdministrationUserPassphrasePolicies.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleMinimumEntropyChange",docblock:"Handles the minium entropy value change\n@param {string} name the settings name to change the value\n@param {number} val the valud to apply to the settings",modifiers:[],params:[{name:"name",description:"the settings name to change the value",type:{name:"string"},optional:!1},{name:"val",description:"the valud to apply to the settings",type:{name:"number"},optional:!1}],returns:null,description:"Handles the minium entropy value change"},{name:"handleCheckboxInputChange",docblock:"Handles checkbox check's state change",modifiers:[],params:[{name:"e",optional:!1}],returns:null,description:"Handles checkbox check's state change"},{name:"isWeakSettings",docblock:"Returns true if the settings are considered too weak to be safe\n@returns {boolean}",modifiers:[],params:[{name:"settings",optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the settings are considered too weak to be safe"},{name:"hasWarnings",docblock:"Returns true if a warning should be displayed\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Returns true if a warning should be displayed"}],displayName:"DisplayAdministrationUserPassphrasePolicies",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminUserPassphrasePoliciesContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var DisplayAdministrationPasswordExpiry=__webpack_require__("./src/react-extension/components/Administration/DisplayAdministrationPasswordExpiry/DisplayAdministrationPasswordExpiry.js"),DisplayHttpError=__webpack_require__("./src/react-extension/components/Common/Error/DisplayHttpError/DisplayHttpError.js"),DisplayHealthcheckAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayHealthcheckAdministration/DisplayHealthcheckAdministration.js"),DisplayContentTypesEncryptedMetadataAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayContentTypesEncryptedMetadataAdministration/DisplayContentTypesEncryptedMetadataAdministration.js"),arrow_left=__webpack_require__("./src/img/svg/arrow_left.svg"),Footer=__webpack_require__("./src/react-extension/components/Common/Footer/Footer.js"),DisplayContentTypesMetadataKeyAdministration=__webpack_require__("./src/react-extension/components/Administration/DisplayContentTypesMetadataKeyAdministration/DisplayContentTypesMetadataKeyAdministration.js");class AdministrationWorkspace extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleGoBack=this.handleGoBack.bind(this)}isMfaSelected(){return AdministrationWorkspaceContext.UZ.MFA===this.props.administrationWorkspaceContext.selectedAdministration}isMfaPolicySelected(){return AdministrationWorkspaceContext.UZ.MFA_POLICY===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordPoliciesSelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isUserDirectorySelected(){return AdministrationWorkspaceContext.UZ.USER_DIRECTORY===this.props.administrationWorkspaceContext.selectedAdministration}isEmailNotificationsSelected(){return AdministrationWorkspaceContext.UZ.EMAIL_NOTIFICATION===this.props.administrationWorkspaceContext.selectedAdministration}isSubscriptionSelected(){return AdministrationWorkspaceContext.UZ.SUBSCRIPTION===this.props.administrationWorkspaceContext.selectedAdministration}isInternationalizationSelected(){return AdministrationWorkspaceContext.UZ.INTERNATIONALIZATION===this.props.administrationWorkspaceContext.selectedAdministration}isAccountRecoverySelected(){return AdministrationWorkspaceContext.UZ.ACCOUNT_RECOVERY===this.props.administrationWorkspaceContext.selectedAdministration}isSmtpSettingsSelected(){return AdministrationWorkspaceContext.UZ.SMTP_SETTINGS===this.props.administrationWorkspaceContext.selectedAdministration}isSelfRegistrationSelected(){return AdministrationWorkspaceContext.UZ.SELF_REGISTRATION===this.props.administrationWorkspaceContext.selectedAdministration}isSsoSelected(){return AdministrationWorkspaceContext.UZ.SSO===this.props.administrationWorkspaceContext.selectedAdministration}isRbacSelected(){return AdministrationWorkspaceContext.UZ.RBAC===this.props.administrationWorkspaceContext.selectedAdministration}isUserPassphrasePoliciesSelected(){return AdministrationWorkspaceContext.UZ.USER_PASSPHRASE_POLICIES===this.props.administrationWorkspaceContext.selectedAdministration}isPasswordExpirySelected(){return AdministrationWorkspaceContext.UZ.PASSWORD_EXPIRY===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesEncryptedMetadataSelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_ENCRYPTED_METADATA===this.props.administrationWorkspaceContext.selectedAdministration}isContentTypesMetadataKeySelected(){return AdministrationWorkspaceContext.UZ.CONTENT_TYPES_METADATA_KEY===this.props.administrationWorkspaceContext.selectedAdministration}handleGoBack(){this.props.navigationContext.onGoToPasswordsRequested()}get isHttpError403(){return AdministrationWorkspaceContext.UZ.HTTP_403_ACCESS_DENIED===this.props.administrationWorkspaceContext.selectedAdministration}get isHttpError404(){return AdministrationWorkspaceContext.UZ.HTTP_404_NOT_FOUND===this.props.administrationWorkspaceContext.selectedAdministration}isHealthcheckSelected(){return AdministrationWorkspaceContext.UZ.HEALTHCHECK===this.props.administrationWorkspaceContext.selectedAdministration}render(){return react.createElement("div",{id:"container",className:"page administration"},react.createElement("div",{id:"app",className:"app",tabIndex:"1000"},react.createElement("div",{className:"panel main"},react.createElement("div",{className:"panel left"},!this.isHttpError403&&react.createElement("div",{className:"sidebar-content"},react.createElement("div",{className:"top-bar-left-navigation"},react.createElement("div",{className:"navigation"},react.createElement("button",{type:"button",className:"button-transparent back",onClick:this.handleGoBack},react.createElement(arrow_left.A,null)),react.createElement("span",{className:"title administration"},react.createElement(es.x6,null,"Organisation settings")))),react.createElement("div",{className:"sidebar-content-left"},react.createElement(DisplayAdministrationMenu_DisplayAdministrationMenu,null)))),react.createElement("div",{className:"panel middle"},react.createElement("div",{className:"header"},!this.isHttpError403&&react.createElement(react.Fragment,null,react.createElement("div",{className:"header-left"}),react.createElement("div",{className:"header-right"},react.createElement(DisplayUserBadgeMenu.A,{baseUrl:this.props.context.trustedDomain||this.props.context.userSettings.getTrustedDomain(),user:this.props.context.loggedInUser})))),react.createElement("div",{className:"middle-right"},react.createElement("div",{className:"breadcrumbs-and-grid"},react.createElement("div",{className:"top-bar"},react.createElement(DisplayAdministrationWorkspaceBreadcrumb.A,null)),react.createElement("div",{className:"main-page"},this.isHttpError403&&react.createElement(DisplayHttpError.A,{errorCode:403}),this.isHttpError404&&react.createElement(DisplayHttpError.A,{errorCode:404}),this.isMfaSelected()&&react.createElement(DisplayMfaAdministration.A,null),this.isMfaPolicySelected()&&react.createElement(DisplayMfaPolicyAdministration.A,null),this.isPasswordPoliciesSelected()&&react.createElement(DisplayPasswordPoliciesAdministration.A,null),this.isUserDirectorySelected()&&react.createElement(DisplayUserDirectoryAdministration.A,null),this.isEmailNotificationsSelected()&&react.createElement(DisplayEmailNotificationsAdministration.A,null),this.isSubscriptionSelected()&&react.createElement(DisplaySubscriptionKey.A,null),this.isInternationalizationSelected()&&react.createElement(DisplayInternationalizationAdministration.A,null),this.isAccountRecoverySelected()&&react.createElement(ManageAccountRecoveryAdministrationSettings.A,null),this.isSmtpSettingsSelected()&&react.createElement(ManageSmtpAdministrationSettings.A,null),this.isSelfRegistrationSelected()&&react.createElement(DisplaySelfRegistrationAdministration.A,null),this.isSsoSelected()&&react.createElement(ManageSsoSettings.A,null),this.isRbacSelected()&&react.createElement(DisplayRbacAdministration.A,null),this.isUserPassphrasePoliciesSelected()&&react.createElement(DisplayAdministrationUserPassphrasePolicies_DisplayAdministrationUserPassphrasePolicies,null),this.isPasswordExpirySelected()&&react.createElement(DisplayAdministrationPasswordExpiry.A,null),this.isHealthcheckSelected()&&react.createElement(DisplayHealthcheckAdministration.A,null),this.isContentTypesEncryptedMetadataSelected()&&react.createElement(DisplayContentTypesEncryptedMetadataAdministration.A,null),this.isContentTypesMetadataKeySelected()&&react.createElement(DisplayContentTypesMetadataKeyAdministration.A,null))),react.createElement("div",{className:"help-panel"},react.createElement("div",{className:"sidebar-help",id:"administration-help-panel"}),react.createElement(Footer.A,null)))))))}}AdministrationWorkspace.propTypes={context:prop_types_default().any,administrationWorkspaceContext:prop_types_default().object,navigationContext:prop_types_default().any};const Administration_AdministrationWorkspace=(0,AppContext.L)((0,NavigationContext.qN)((0,AdministrationWorkspaceContext.Kk)(AdministrationWorkspace)));AdministrationWorkspace.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"isMfaSelected",docblock:"If MFA menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA menu is selected"},{name:"isMfaPolicySelected",docblock:"If MFA policy menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If MFA policy menu is selected"},{name:"isPasswordPoliciesSelected",docblock:"If Password policies menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password policies menu is selected"},{name:"isUserDirectorySelected",docblock:"If User directory menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User directory menu is selected"},{name:"isEmailNotificationsSelected",docblock:"If Email notifications menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Email notifications menu is selected"},{name:"isSubscriptionSelected",docblock:"If Subscription menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Subscription menu is selected"},{name:"isInternationalizationSelected",docblock:"If Internationalization menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Internationalization menu is selected"},{name:"isAccountRecoverySelected",docblock:"If Account Recovery menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Account Recovery menu is selected"},{name:"isSmtpSettingsSelected",docblock:"If SMTP settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SMTP settings menu is selected"},{name:"isSelfRegistrationSelected",docblock:"If Self registration settings menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Self registration settings menu is selected"},{name:"isSsoSelected",docblock:"If SSO menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If SSO menu is selected"},{name:"isRbacSelected",docblock:"If RBAC menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If RBAC menu is selected"},{name:"isUserPassphrasePoliciesSelected",docblock:"If User Passphrase Policies menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If User Passphrase Policies menu is selected"},{name:"isPasswordExpirySelected",docblock:"If Password Expiry menu is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If Password Expiry menu is selected"},{name:"isContentTypesEncryptedMetadataSelected",docblock:"If content types encrypted metadata is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types encrypted metadata is selected"},{name:"isContentTypesMetadataKeySelected",docblock:"If content types metadata key is selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"If content types metadata key is selected"},{name:"handleGoBack",docblock:"Handle go back to resource workspace",modifiers:[],params:[],returns:null,description:"Handle go back to resource workspace"},{name:"isHttpError403",docblock:"If the page access is denied\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"If the page access is denied"},{name:"isHttpError404",docblock:"If the page accessed does not exist or if the corresponding feature flag is disabled\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"If the page accessed does not exist or if the corresponding feature flag is disabled"},{name:"isHealthcheckSelected",docblock:null,modifiers:[],params:[],returns:null}],displayName:"AdministrationWorkspace",props:{context:{description:"",type:{name:"any"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},navigationContext:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/components/Administration/DisplayContentTypesEncryptedMetadataAdministration/DisplayContentTypesEncryptedMetadataAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministration});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),metadataTypesSettingsEntity=__webpack_require__("./src/shared/models/entity/metadata/metadataTypesSettingsEntity.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),resourceTypesCollection=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypesCollection.js");const formProperties=["default_resource_types","allow_creation_of_v5_resources","allow_creation_of_v4_resources","allow_v4_v5_upgrade","allow_v5_v4_downgrade"];class MetadataTypesSettingsFormEntity extends metadataTypesSettingsEntity.Ay{toFormDto(){return formProperties.reduce(((result,prop)=>(void 0!==this._props[prop]&&(result[prop]=this._props[prop]),result)),{})}verifyHealth(resourceTypes){let result=null;if(void 0===resourceTypes)return result;if(!(resourceTypes instanceof resourceTypesCollection.A))throw new TypeError("The parameter 'resourceTypes' is not a valid 'ResourceTypesCollection' type.");const hasV4ResourceTypes=resourceTypes.hasSomeOfVersion(metadataTypesSettingsEntity.Sr),hasV5ResourceTypes=resourceTypes.hasSomeOfVersion(metadataTypesSettingsEntity.LP);return this.allowCreationOfV4Resources&&!hasV4ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_creation_of_v4_resources","resource_types_deleted","Resource types v4 are deleted.")),this.isDefaultResourceTypeV4&&!hasV4ResourceTypes&&(result=result||new entityValidationError.A,result.addError("default_resource_types","resource_types_v4_deleted","Resource types v4 are deleted.")),this.allowCreationOfV5Resources&&!hasV5ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_creation_of_v5_resources","resource_types_deleted","Resource types v5 are deleted.")),this.isDefaultResourceTypeV5&&!hasV5ResourceTypes&&(result=result||new entityValidationError.A,result.addError("default_resource_types","resource_types_v5_deleted","Resource types v5 are deleted.")),this.allowV5V4Downgrade&&!hasV4ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_v5_v4_downgrade","resource_types_deleted","Resource types v4 are deleted.")),this.allowV5V4Downgrade&&!this.allowCreationOfV4Resources&&(result=result||new entityValidationError.A,result.addError("allow_v5_v4_downgrade","allow_creation","Resource types v4 creation is not allowed.")),this.allowV4V5Upgrade&&!hasV5ResourceTypes&&(result=result||new entityValidationError.A,result.addError("allow_v4_v5_upgrade","resource_types_deleted","Resource types v5 are deleted.")),this.allowV4V5Upgrade&&!this.allowCreationOfV5Resources&&(result=result||new entityValidationError.A,result.addError("allow_v4_v5_upgrade","allow_creation","Resource types v5 creation is not allowed.")),result}}const metadataTypesSettingsFormEntity=MetadataTypesSettingsFormEntity;var metadataSettingsServiceWorkerService=__webpack_require__("./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js");class DisplayContentTypesEncryptedMetadataAdministrationActions extends react.Component{render(){return react.createElement("div",{className:"col2_3 actions-wrapper"},react.createElement("div",{className:"actions"},react.createElement("ul",null,react.createElement("li",null,react.createElement("button",{type:"button",disabled:this.props.isProcessing,onClick:this.props.onSaveRequested},react.createElement(Icon.A,{name:"save"}),react.createElement("span",null,react.createElement(es.x6,null,"Save settings")))))))}}DisplayContentTypesEncryptedMetadataAdministrationActions.propTypes={isProcessing:prop_types_default().bool,onSaveRequested:prop_types_default().func,t:prop_types_default().func};const DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministrationActions=(0,es.CI)("common")(DisplayContentTypesEncryptedMetadataAdministrationActions);DisplayContentTypesEncryptedMetadataAdministrationActions.__docgenInfo={description:"",methods:[],displayName:"DisplayContentTypesEncryptedMetadataAdministrationActions",props:{isProcessing:{description:"",type:{name:"bool"},required:!1},onSaveRequested:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),ResourceTypesLocalStorageContext=__webpack_require__("./src/shared/context/ResourceTypesLocalStorageContext/ResourceTypesLocalStorageContext.js");class DisplayContentTypesEncryptedMetadataAdministration extends react.Component{originalSettings=null;formSettings=null;constructor(props){super(props),this.metadataSettingsServiceWorkerService=props.metadataSettingsServiceWorkerService??new metadataSettingsServiceWorkerService.Ay(props.context.port),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){return{isProcessing:!0,hasAlreadyBeenValidated:!1,settings:{default_resource_types:"v4",allow_creation_of_v5_resources:!1,allow_creation_of_v4_resources:!1,allow_v4_v5_upgrade:!1,allow_v5_v4_downgrade:!1}}}bindCallbacks(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.save=this.save.bind(this)}async componentDidMount(){this.originalSettings=await this.metadataSettingsServiceWorkerService.findTypesSettings(),this.formSettings=new metadataTypesSettingsFormEntity(this.originalSettings.toDto(),{validate:!1});this.setState({settings:this.formSettings.toFormDto(),isProcessing:!1})}validateForm=(0,memoize_one_esm.A)((formSettingsDto=>this.formSettings?.validate()));verifyDataHealth=(0,memoize_one_esm.A)(((formSettingsDto,resourceTypes)=>this.formSettings?.verifyHealth(resourceTypes)));hasSettingsChanges=(0,memoize_one_esm.A)(((originalSettings,formSettings,formSettingsDto)=>this.originalSettings?.hasDiffProps(this.formSettings)));handleInputChange(event){if(this.hasAllInputDisabled())return;const{type,checked,value,name}=event.target,parsedValue="checkbox"===type?checked:value;this.setFormPropertyValue(name,parsedValue)}setFormPropertyValue(name,parsedValue){this.formSettings.set(name,parsedValue,{validate:!1}),this.setState({settings:this.formSettings.toFormDto()})}hasAllInputDisabled(){return this.state.isProcessing}handleFormSubmit(event){event.preventDefault(),this.save()}async save(){if(this.state.isProcessing)return;const validationError=this.validateForm(this.state.settings);if(validationError?.hasErrors()){const hasAlreadyBeenValidated=!0;this.setState({hasAlreadyBeenValidated})}else{this.setState({isProcessing:!0});try{this.originalSettings=await this.metadataSettingsServiceWorkerService.saveTypesSettings(this.formSettings),this.formSettings=new metadataTypesSettingsFormEntity(this.originalSettings.toDto()),await this.props.actionFeedbackContext.displaySuccess(this.props.t("The encrypted metadata settings were updated."))}catch(error){this.props.dialogContext.open(NotifyError.A,{error})}this.setState({hasAlreadyBeenValidated:!0,isProcessing:!1,settings:this.formSettings.toDto()})}}render(){const errors=this.state.hasAlreadyBeenValidated?this.validateForm(this.state.settings):null,warnings=this.verifyDataHealth(this.state.settings,this.props.resourceTypes),hasSettingsChanges=this.hasSettingsChanges(this.originalSettings,this.formSettings,this.state.settings);return react.createElement("div",{className:"row"},(this.props.createPortal||react_dom.createPortal)(react.createElement(DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministrationActions,{onSaveRequested:this.save,isProcessing:this.state.isProcessing}),document.getElementById("administration-actions-content-action")),react.createElement("div",{id:"content-types-encrypted-metadata-settings",className:"col8 main-column"},react.createElement("form",{onSubmit:this.handleFormSubmit,"data-testid":"submit-form"},react.createElement("h3",null,react.createElement("label",null,react.createElement(es.x6,null,"Encrypted metadata"))),hasSettingsChanges&&react.createElement("div",{className:"warning message form-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))),react.createElement("p",{className:"description"},react.createElement(es.x6,null,"Encrypted metadata for resources is available.")," ",react.createElement(es.x6,null,"Define the strategy to manage and migrate the legacy items.")),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Supported metadata types")),react.createElement("div",{className:"togglelist-alt"},react.createElement("span",{className:`input toggle-switch form-element\n                ${errors?.hasError("allow_creation_of_v5_resources")?"error":""}\n                ${warnings?.hasError("allow_creation_of_v5_resources")?"warning":""}`},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_creation_of_v5_resources",id:"allowCreationOfV5ResourcesInput",onChange:this.handleInputChange,checked:this.state.settings.allow_creation_of_v5_resources,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowCreationOfV5ResourcesInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Enable encrypted metadata (recommended)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Enable encrypted metadata for resources.")),errors?.hasError("allow_creation_of_v5_resources","is_default")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Encrypted metadata must be enabled to set it as the default type.")),!errors?.hasError("allow_creation_of_v5_resources")&&warnings?.hasError("allow_creation_of_v5_resources","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All encrypted metadata resource types were previously disabled. Re-enable them if you want users to create resources of this type."))))),react.createElement("div",{className:"togglelist-alt"},react.createElement("span",{className:`input toggle-switch form-element\n                ${errors?.hasError("allow_creation_of_v4_resources")?"error":""}\n                ${warnings?.hasError("allow_creation_of_v4_resources")?"warning":""}`},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_creation_of_v4_resources",id:"allowCreationOfV4ResourcesInput",onChange:this.handleInputChange,checked:this.state.settings.allow_creation_of_v4_resources,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowCreationOfV4ResourcesInput"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Enable legacy cleartext metadata")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Enable legacy cleartext metadata for resources.")),errors?.hasError("allow_creation_of_v4_resources","is_default")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Legacy cleartext metadata must be enabled to set it as the default type.")),!errors?.hasError("allow_creation_of_v4_resources")&&warnings?.hasError("allow_creation_of_v4_resources","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All legacy cleartext resource types were previously disabled. Re-enable them if you want users to create resources of this type."))))),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Default metadata type")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:`input radio\n                ${"v5"===this.state.settings.default_resource_types?"checked":""}\n                ${errors?.hasError("default_resource_types","allow_create_v5")?"error":""}\n                ${!errors?.hasError("default_resource_types","allow_create_v5")&&warnings?.hasError("default_resource_types","resource_types_v5_deleted")?"warning":""}`},react.createElement("input",{type:"radio",value:"v5",onChange:this.handleInputChange,name:"default_resource_types",checked:"v5"===this.state.settings.default_resource_types,id:"defaultResourceTypesV5Input",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"defaultResourceTypesV5Input"},react.createElement("span",{className:"name bold"},react.createElement(es.x6,null,"Encrypted metadata (recommended)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users can create resources with encrypted metadata by default."),react.createElement("br",null)),errors?.hasError("default_resource_types","allow_create_v5")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Encrypted metadata must be enabled to set it as the default type.")),!errors?.hasError("default_resource_types","allow_create_v5")&&warnings?.hasError("default_resource_types","resource_types_v5_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All encrypted metadata resource types were previously disabled. Re-enable them if you want users to create resources of this type.")))),react.createElement("div",{className:`input radio ${"v4"===this.state.settings.default_resource_types?"checked":""}\n                ${errors?.hasError("default_resource_types","allow_create_v4")?"error":""}\n                ${!errors?.hasError("default_resource_types","allow_create_v4")&&warnings?.hasError("default_resource_types","resource_types_v4_deleted")?"warning":""}`},react.createElement("input",{type:"radio",value:"v4",onChange:this.handleInputChange,name:"default_resource_types",checked:"v4"===this.state.settings.default_resource_types,id:"defaultResourceTypesV4Input",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"defaultResourceTypesV4Input"},react.createElement("span",{className:"name bold"},react.createElement(es.x6,null,"Legacy cleartext metadata")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users can create legacy resources with cleartext metadata by default.")),errors?.hasError("default_resource_types","allow_create_v4")&&react.createElement("div",{className:"name error-message"},react.createElement(es.x6,null,"Legacy cleartext metadata must be enabled to set it as the default type.")),!errors?.hasError("default_resource_types","allow_create_v4")&&warnings?.hasError("default_resource_types","resource_types_v4_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All legacy cleartext resource types were previously disabled. Re-enable them if you want users to create resources of this type."))))),react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Self served migration")),react.createElement("div",null,react.createElement("div",{className:"input toggle-switch form-element"},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_v4_v5_upgrade",id:"allowV4V5UpgradeInput",onChange:this.handleInputChange,checked:this.state.settings.allow_v4_v5_upgrade,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowV4V5UpgradeInput",className:"text"},react.createElement(es.x6,null,"Allow users to upgrade their content from cleartext to encrypted metadata type."),warnings?.hasError("allow_v4_v5_upgrade","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All encrypted metadata resource types were previously disabled. Re-enable them if you want users to upgrade their resources.")),warnings?.hasError("allow_v4_v5_upgrade","allow_creation")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"Encrypted metadata should be enabled to allow users to upgrade their resources."))))),react.createElement("div",null,react.createElement("div",{className:"input toggle-switch form-element"},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"allow_v5_v4_downgrade",id:"allowV5V4DowngradeInput",onChange:this.handleInputChange,checked:this.state.settings.allow_v5_v4_downgrade,disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"allowV5V4DowngradeInput",className:"text"},react.createElement(es.x6,null,"Allow users to downgrade their content from encrypted to cleartext metadata type."),warnings?.hasError("allow_v5_v4_downgrade","resource_types_deleted")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"All legacy cleartext resource types were previously disabled. Re-enable them if you want users to downgrade their resources.")),warnings?.hasError("allow_v5_v4_downgrade","allow_creation")&&react.createElement("div",{className:"name warning-message"},react.createElement(es.x6,null,"Legacy cleartext metadata should be enabled to allow users to downgrade their resources."))))))))}}DisplayContentTypesEncryptedMetadataAdministration.propTypes={context:prop_types_default().object,actionFeedbackContext:prop_types_default().object,dialogContext:prop_types_default().object,createPortal:prop_types_default().func,metadataSettingsServiceWorkerService:prop_types_default().object,resourceTypes:prop_types_default().instanceOf(resourceTypesCollection.A),t:prop_types_default().func};const DisplayContentTypesEncryptedMetadataAdministration_DisplayContentTypesEncryptedMetadataAdministration=(0,AppContext.L)((0,ActionFeedbackContext.ot)((0,DialogContext.z9)((0,ResourceTypesLocalStorageContext.KH)((0,es.CI)("common")(DisplayContentTypesEncryptedMetadataAdministration)))));DisplayContentTypesEncryptedMetadataAdministration.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"setFormPropertyValue",docblock:"Set a form property value. Trigger the validation if the form has already been submitted once.\n@param name\n@param parsedValue",modifiers:[],params:[{name:"name",optional:!1},{name:"parsedValue",optional:!1}],returns:null,description:"Set a form property value. Trigger the validation if the form has already been submitted once."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleFormSubmit",docblock:"Handle form submission that can be trigger when hitting `enter`\n@param {Event} event The html event triggering the form submit.",modifiers:[],params:[{name:"event",description:"The html event triggering the form submit.",type:{name:"Event"},optional:!1}],returns:null,description:"Handle form submission that can be trigger when hitting `enter`"},{name:"save",docblock:"Save the settings\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Save the settings"}],displayName:"DisplayContentTypesEncryptedMetadataAdministration",props:{context:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},createPortal:{description:"",type:{name:"func"},required:!1},metadataSettingsServiceWorkerService:{description:"",type:{name:"object"},required:!1},resourceTypes:{description:"",type:{name:"instanceOf",value:"ResourceTypesCollection"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplayInternationalizationAdministration/DisplayInternationalizationAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayInternationalizationAdministration_DisplayInternationalizationAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),heart=__webpack_require__("./src/img/svg/heart.svg"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),AdministrationInternationalizationContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationInternationalizationContext/AdministrationInternationalizationContext.js");class DisplayAdministrationInternationalisationActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}async handleSaveClick(){try{await this.props.adminInternationalizationContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}finally{this.props.adminInternationalizationContext.setProcessing(!1)}}isSaveEnabled(){return!this.props.adminInternationalizationContext.isProcessing()&&this.props.adminInternationalizationContext.hasLocaleChanges()}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this)}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The internationalization settings were updated."))}async handleSaveError(error){"UserAbortsOperationError"!==error.name&&(console.error(error),await this.handleError(error))}async handleError(error){await this.props.actionFeedbackContext.displayError(error.message)}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary",id:"save-settings",type:"button",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationInternationalisationActions.propTypes={context:prop_types_default().object,adminInternationalizationContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationInternationalisationActions_DisplayAdministrationInternationalisationActions=(0,AdministrationInternationalizationContext.A3)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationInternationalisationActions)));DisplayAdministrationInternationalisationActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."},{name:"handleError",docblock:"handle error to display the error dialog\n@param error",modifiers:["async"],params:[{name:"error",optional:!1}],returns:null,description:"handle error to display the error dialog"}],displayName:"DisplayAdministrationInternationalisationActions",props:{context:{description:"",type:{name:"object"},required:!1},adminInternationalizationContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var portals=__webpack_require__("./src/shared/utils/portals.js");class DisplayInternationalizationAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}async componentDidMount(){this.props.adminInternationalizationContext.findLocale()}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminInternationalizationContext.clearContext()}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this)}handleInputChange(event){this.props.adminInternationalizationContext.setLocale(event.target.value)}get supportedLocales(){return this.props.context.siteSettings.supportedLocales?this.props.context.siteSettings.supportedLocales.map((supportedLocale=>({value:supportedLocale.locale,label:supportedLocale.label}))):[]}render(){const lang=this.props.adminInternationalizationContext.getLocale();return react.createElement("div",{className:"row"},react.createElement(react.Fragment,null,react.createElement("div",{className:"internationalisation-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title"},react.createElement(es.x6,null,"Internationalisation")),react.createElement("form",{className:"form"},react.createElement("div",{className:"select-wrapper input"},react.createElement("label",{htmlFor:"app-locale-input"},react.createElement(es.x6,null,"Language")),react.createElement(Select.A,{className:"medium",id:"locale-input",name:"locale",items:this.supportedLocales,value:lang,onChange:this.handleInputChange}),react.createElement("p",null,react.createElement(es.x6,null,"The default language of the organisation.")))))),react.createElement(DisplayAdministrationInternationalisationActions_DisplayAdministrationInternationalisationActions,null)),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Want to contribute?")),react.createElement("p",null,react.createElement(es.x6,null,"Your language is missing or you discovered an error in the translation, help us to improve passbolt.")),react.createElement("a",{className:"button",href:"https://help.passbolt.com/contribute/translation",target:"_blank",rel:"noopener noreferrer"},react.createElement(heart.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Contribute")))),document.getElementById("administration-help-panel")))}}DisplayInternationalizationAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminInternationalizationContext:prop_types_default().object,t:prop_types_default().func};const DisplayInternationalizationAdministration_DisplayInternationalizationAdministration=(0,AppContext.L)((0,AdministrationInternationalizationContext.A3)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplayInternationalizationAdministration))));DisplayInternationalizationAdministration.__docgenInfo={description:"This component allows to display the internationalisation for the administration",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"supportedLocales",docblock:"Get the supported locales\n@returns {array}",modifiers:["get"],params:[],returns:{type:{name:"array"}},description:"Get the supported locales"}],displayName:"DisplayInternationalizationAdministration",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminInternationalizationContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplayMfaPolicyAdministration/DisplayMfaPolicyAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayMfaPolicyAdministration_DisplayMfaPolicyAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),file_text=__webpack_require__("./src/img/svg/file_text.svg"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),AdministrationMfaPolicyContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationMfaPolicy/AdministrationMfaPolicyContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js");class DisplayAdministrationMfaPolicyActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSave=this.handleSave.bind(this)}isSaveEnabled(){return!this.props.adminMfaPolicyContext.isProcessing()}async handleSave(){if(this.isSaveEnabled())try{await this.props.adminMfaPolicyContext.save(),this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}finally{this.props.adminMfaPolicyContext.setProcessing(!1)}}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.props.t("The MFA policy settings were updated."))}async handleSaveError(error){"UserAbortsOperationError"!==error.name&&(console.error(error),await this.props.actionFeedbackContext.displayError(error.message))}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary",type:"button",disabled:!this.isSaveEnabled(),id:"save-settings",onClick:this.handleSave},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationMfaPolicyActions.propTypes={adminMfaPolicyContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationMfaPolicyActions_DisplayAdministrationMfaPolicyActions=(0,AdministrationMfaPolicyContext.yS)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayAdministrationMfaPolicyActions)));DisplayAdministrationMfaPolicyActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"handleSave",docblock:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user"},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:["async"],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."}],displayName:"DisplayAdministrationMfaPolicyActions",props:{adminMfaPolicyContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var portals=__webpack_require__("./src/shared/utils/portals.js");class DisplayMfaPolicyAdministration extends react.Component{constructor(props){super(props),this.bindCallbacks()}async componentDidMount(){await this.findSettings()}componentWillUnmount(){this.props.adminMfaPolicyContext.clearContext()}bindCallbacks(){this.handleInputChange=this.handleInputChange.bind(this)}async findSettings(){await this.props.adminMfaPolicyContext.findSettings()}async handleInputChange(event){const field=event.target.name;let value=event.target.value;"rememberMeForAMonth"===field&&(value=event.target.checked),this.props.adminMfaPolicyContext.setSettings(field,value)}hasAllInputDisabled(){return this.props.adminMfaPolicyContext.isProcessing()}render(){const settings=this.props.adminMfaPolicyContext.getSettings();return react.createElement("div",{className:"row"},react.createElement("div",{className:"mfa-policy-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title",id:"mfa-policy-settings-title"},react.createElement(es.x6,null,"MFA Policy")),react.createElement("form",{className:"form"},react.createElement("h4",{className:"no-border",id:"mfa-policy-subtitle"},react.createElement(es.x6,null,"Default users multi factor authentication policy")),react.createElement("p",{id:"mfa-policy-description"},react.createElement(es.x6,null,"You can choose the default behaviour of multi factor authentication for all users.")),react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio "+("mandatory"===settings?.policy?"checked":""),id:"mfa-policy-mandatory"},react.createElement("input",{type:"radio",value:"mandatory",onChange:this.handleInputChange,name:"policy",checked:"mandatory"===settings?.policy,id:"mfa-policy-mandatory-radio",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"mfa-policy-mandatory-radio"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Prompt")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users have to enable multi factor authentication. If they don't, they will be reminded every time they log in.")))),react.createElement("div",{className:"input radio "+("opt-in"===settings?.policy?"checked":""),id:"mfa-policy-opt-in"},react.createElement("input",{type:"radio",value:"opt-in",onChange:this.handleInputChange,name:"policy",checked:"opt-in"===settings?.policy,id:"mfa-policy-opt-in-radio",disabled:this.hasAllInputDisabled()}),react.createElement("label",{htmlFor:"mfa-policy-opt-in-radio"},react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Opt-in (default)")),react.createElement("span",{className:"info"},react.createElement(es.x6,null,"Users have the choice to enable multi factor authentication in their profile workspace."))))),react.createElement("h4",{id:"mfa-policy-remember-subtitle"},"Remember a device for a month"),react.createElement("span",{className:"input toggle-switch form-element "},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"rememberMeForAMonth",onChange:this.handleInputChange,disabled:this.hasAllInputDisabled(),checked:settings?.rememberMeForAMonth,id:"remember-toggle-button"}),react.createElement("label",{htmlFor:"remember-toggle-button"},react.createElement(es.x6,null,"Allow “Remember this device for a month.“ option during MFA."))))),this.props.adminMfaPolicyContext.hasSettingsChanges()&&react.createElement("div",{className:"warning message",id:"mfa-policy-setting-banner"},react.createElement("div",null,react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification."))))),react.createElement(DisplayAdministrationMfaPolicyActions_DisplayAdministrationMfaPolicyActions,null),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Need some help?")),react.createElement("p",null,react.createElement(es.x6,null,"For more information about MFA policy settings, checkout the dedicated page on the help website.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/authentication/mfa-policy",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplayMfaPolicyAdministration.propTypes={context:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,adminMfaPolicyContext:prop_types_default().object,t:prop_types_default().func};const DisplayMfaPolicyAdministration_DisplayMfaPolicyAdministration=(0,AppContext.L)((0,AdministrationWorkspaceContext.Kk)((0,AdministrationMfaPolicyContext.yS)((0,es.CI)("common")(DisplayMfaPolicyAdministration))));DisplayMfaPolicyAdministration.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"findSettings",docblock:"Bind callbacks methods",modifiers:["async"],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleInputChange",docblock:"Handle policy input change.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle policy input change."},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"}],displayName:"DisplayMfaPolicyAdministration",props:{context:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminMfaPolicyContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/DisplaySelfRegistrationAdministration/DisplaySelfRegistrationAdministration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplaySelfRegistrationAdministration_DisplaySelfRegistrationAdministration});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),DomainUtil=__webpack_require__("./src/react-extension/lib/Domain/DomainUtil.js"),MapObject=__webpack_require__("./src/react-extension/lib/Map/MapObject.js"),AdministrationSelfRegistrationContext=__webpack_require__("./src/react-extension/contexts/Administration/AdministrationSelfRegistration/AdministrationSelfRegistrationContext.js");const map=new Map;function setRef(key){if("string"!=typeof key)return console.warn("useDynamicRefs: Cannot set ref without key");const ref=react.createRef();return map.set(key,ref),ref}function getRef(key){return key?map.get(key):console.warn("useDynamicRefs: Cannot get ref without key")}const DynamicRef=function useDynamicRefs(){return{getRef,setRef}};var DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),SelfRegistrationDomainsViewModel=__webpack_require__("./src/shared/models/selfRegistration/SelfRegistrationDomainsViewModel.js"),dist=__webpack_require__("./node_modules/debounce-promise/dist/index.js"),dist_default=__webpack_require__.n(dist),portals=__webpack_require__("./src/shared/utils/portals.js"),file_text=__webpack_require__("./src/img/svg/file_text.svg");class DisplayAdministrationSelfRegistrationActions extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleSave=this.handleSave.bind(this)}get allowedDomains(){return this.props.adminSelfRegistrationContext.getAllowedDomains()}isSaveEnabled(){let isFirstUsageWithoutChanges=!1;return this.props.adminSelfRegistrationContext.getCurrentSettings()?.provider||(isFirstUsageWithoutChanges=!this.props.adminSelfRegistrationContext.hasSettingsChanges()),!this.props.adminSelfRegistrationContext.isProcessing()&&!isFirstUsageWithoutChanges}async handleSave(){this.isSaveEnabled()&&this.props.adminSelfRegistrationContext.save()}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("button",{className:"button primary",type:"button",disabled:!this.isSaveEnabled(),id:"save-settings",onClick:this.handleSave},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationSelfRegistrationActions.propTypes={adminSelfRegistrationContext:prop_types_default().object,t:prop_types_default().func};const DisplayAdministrationSelfRegistrationActions_DisplayAdministrationSelfRegistrationActions=(0,es.CI)("common")((0,AdministrationSelfRegistrationContext.v6)(DisplayAdministrationSelfRegistrationActions));DisplayAdministrationSelfRegistrationActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"allowedDomains",docblock:"return the allowed domains",modifiers:["get"],params:[],returns:null,description:"return the allowed domains"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"handleSave",docblock:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the save action.\nIn case we have more than one domain and we have changes, we should display a confirmation dialog to inform the user"}],displayName:"DisplayAdministrationSelfRegistrationActions",props:{adminSelfRegistrationContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class DisplaySelfRegistrationAdministration extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.dynamicRefs=DynamicRef(),this.checkForPublicDomainDebounce=dist_default()(this.checkForWarnings,300),this.bindCallbacks()}async componentDidMount(){await this.findSettings()}componentDidUpdate(){this.shouldFocusOnError(),this.shouldCheckWarnings()}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminSelfRegistrationContext.clearContext()}get defaultState(){return{isEnabled:!1,warnings:new Map}}bindCallbacks(){this.handleToggleClicked=this.handleToggleClicked.bind(this),this.handleAddRowClick=this.handleAddRowClick.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleDeleteRow=this.handleDeleteRow.bind(this)}get currentUser(){return this.props.context.loggedInUser}get allowedDomains(){return this.props.adminSelfRegistrationContext.getAllowedDomains()}async findSettings(){await this.props.adminSelfRegistrationContext.findSettings(),this.setState({isEnabled:this.allowedDomains.size>0}),this.checkForWarnings(),this.validateForm()}checkForWarnings(){this.setState({warnings:new Map},(()=>{this.allowedDomains.forEach(((value,key)=>this.checkDomainIsProfessional(key,value)))}))}setupSettings(){if(this.props.adminSelfRegistrationContext.setDomains(new SelfRegistrationDomainsViewModel.A(this.props.adminSelfRegistrationContext.getCurrentSettings())),this.checkForWarnings(),0===this.allowedDomains.size){const domain=DomainUtil.A.extractDomainFromEmail(this.currentUser?.username);DomainUtil.A.checkDomainValidity(domain),this.populateUserDomain(domain)}}shouldFocusOnError(){const onFocus=this.props.adminSelfRegistrationContext.shouldFocus(),[error]=this.props.adminSelfRegistrationContext.getErrors().keys();if(error&&onFocus){this.dynamicRefs.getRef(error).current.focus(),this.props.adminSelfRegistrationContext.setFocus(!1)}}shouldCheckWarnings(){this.props.adminSelfRegistrationContext.isSaved()&&(this.props.adminSelfRegistrationContext.setSaved(!1),this.checkForWarnings())}populateUserDomain(domain){const row=DomainUtil.A.isProfessional(domain)?domain:"";this.addRow(row)}addRow(value=""){const uuid=(0,v4.A)();this.props.adminSelfRegistrationContext.setAllowedDomains(uuid,value,(()=>{const inputRef=this.dynamicRefs.getRef(uuid);inputRef?.current.focus()}))}handleDeleteRow(key){if(this.canDelete()){const domains=this.allowedDomains;domains.delete(key),this.props.adminSelfRegistrationContext.setDomains({allowedDomains:domains}),this.validateForm(),this.checkForWarnings()}}hasWarnings(){return this.state.warnings.size>0}hasAllInputDisabled(){return this.props.adminSelfRegistrationContext.isProcessing()}handleToggleClicked(){this.setState({isEnabled:!this.state.isEnabled},(()=>{this.state.isEnabled?this.setupSettings():(this.props.adminSelfRegistrationContext.setDomains({allowedDomains:new Map}),this.props.adminSelfRegistrationContext.setErrors(new Map))}))}handleAddRowClick(){this.addRow()}checkDomainIsProfessional(uuid,value){this.setState((prevState=>{const warnings=MapObject.A.clone(prevState.warnings);return DomainUtil.A.isProfessional(value)?warnings.delete(uuid):warnings.set(uuid,"This is not a safe professional domain"),{warnings}}))}handleInputChange(event){const value=event.target.value,uuid=event.target.name;this.props.adminSelfRegistrationContext.setAllowedDomains(uuid,value,(()=>this.validateForm())),this.checkForPublicDomainDebounce()}validateForm(){this.props.adminSelfRegistrationContext.validateForm()}canDelete(){return this.allowedDomains.size>1}render(){const isSubmitted=this.props.adminSelfRegistrationContext.isSubmitted(),errors=this.props.adminSelfRegistrationContext.getErrors();return react.createElement("div",{className:"row"},react.createElement(react.Fragment,null,react.createElement("div",{className:"self-registration main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",null,react.createElement("span",{className:"input toggle-switch form-element"},react.createElement("input",{type:"checkbox",className:"toggle-switch-checkbox checkbox",name:"settings-toggle",onChange:this.handleToggleClicked,checked:this.state.isEnabled,disabled:this.hasAllInputDisabled(),id:"settings-toggle"}),react.createElement("label",{htmlFor:"settings-toggle"},react.createElement(es.x6,null,"Self Registration")))),!this.state.isEnabled&&react.createElement("p",{className:"description",id:"disabled-description"},react.createElement(es.x6,null,"User self registration is disabled.")," ",react.createElement(es.x6,null,"Only administrators can invite users to register.")),this.state.isEnabled&&react.createElement("div",{className:"self-registration-form"},react.createElement("div",{id:"self-registration-subtitle",className:`input ${this.hasWarnings()&&"warning"} ${isSubmitted&&errors.size>0&&"error"}`},react.createElement("label",{id:"enabled-label"},react.createElement(es.x6,null,"Email domain safe list"))),react.createElement("p",{className:"description",id:"enabled-description"},react.createElement(es.x6,null,"All the users with an email address ending with the domain in the safe list are allowed to register on passbolt.")),MapObject.A.iterators(this.allowedDomains).map((key=>react.createElement("div",{key,className:"input"},react.createElement("div",{className:"domain-row"},react.createElement("input",{type:"text",className:"full-width",onChange:this.handleInputChange,id:`input-${key}`,name:key,value:this.allowedDomains.get(key),disabled:!this.hasAllInputDisabled,ref:this.dynamicRefs.setRef(key),placeholder:this.props.t("domain")}),react.createElement("button",{type:"button",disabled:!this.canDelete(),className:"button-icon",id:`delete-${key}`,onClick:()=>this.handleDeleteRow(key)},react.createElement(Icon.A,{name:"trash"}))),this.hasWarnings()&&this.state.warnings.get(key)&&react.createElement("div",{id:"domain-name-input-feedback",className:"warning-message"},react.createElement(es.x6,null,this.state.warnings.get(key))),errors.get(key)&&isSubmitted&&react.createElement("div",{className:"error-message"},react.createElement(es.x6,null,errors.get(key)))))),react.createElement("div",{className:"domain-add"},react.createElement("button",{type:"button",onClick:this.handleAddRowClick},react.createElement(Icon.A,{name:"add"}),react.createElement("span",null,react.createElement(es.x6,null,"Add")))))),this.props.adminSelfRegistrationContext.hasSettingsChanges()&&react.createElement("div",{className:"warning message",id:"self-registration-setting-overridden-banner"},react.createElement("p",null,react.createElement(es.x6,null,"Don't forget to save your settings to apply your modification.")))),react.createElement(DisplayAdministrationSelfRegistrationActions_DisplayAdministrationSelfRegistrationActions,null)),(0,portals.m)(react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"What is user self registration?")),react.createElement("p",null,react.createElement(es.x6,null,"User self registration enables users with an email from a whitelisted domain to create their passbolt account without prior admin invitation.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/user-provisioning/self-registration/",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),document.getElementById("administration-help-panel")))}}DisplaySelfRegistrationAdministration.propTypes={dialogContext:prop_types_default().any,context:prop_types_default().any,adminSelfRegistrationContext:prop_types_default().object,administrationWorkspaceContext:prop_types_default().object,t:prop_types_default().func};const DisplaySelfRegistrationAdministration_DisplaySelfRegistrationAdministration=(0,AppContext.L)((0,DialogContext.z9)((0,AdministrationSelfRegistrationContext.v6)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(DisplaySelfRegistrationAdministration)))));DisplaySelfRegistrationAdministration.__docgenInfo={description:"This component allows to display the Self registration for the administration",methods:[{name:"defaultState",docblock:"Get default state\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"currentUser",docblock:"return the current user",modifiers:["get"],params:[],returns:null,description:"return the current user"},{name:"allowedDomains",docblock:"return the allowed domains",modifiers:["get"],params:[],returns:null,description:"return the allowed domains"},{name:"findSettings",docblock:"Bind callbacks methods",modifiers:["async"],params:[],returns:null,description:"Bind callbacks methods"},{name:"checkForWarnings",docblock:"We check for warnings and errors into the form",modifiers:[],params:[],returns:null,description:"We check for warnings and errors into the form"},{name:"setupSettings",docblock:"setup settings for the first time",modifiers:[],params:[],returns:null,description:"setup settings for the first time"},{name:"shouldFocusOnError",docblock:"set focus to the first input error",modifiers:[],params:[],returns:null,description:"set focus to the first input error"},{name:"shouldCheckWarnings",docblock:"in case of saved settings we should check warnings again",modifiers:[],params:[],returns:null,description:"in case of saved settings we should check warnings again"},{name:"populateUserDomain",docblock:"Check domain and populate it if it is a professional\n@param {string} domain",modifiers:[],params:[{name:"domain",type:{name:"string"},optional:!1}],returns:null,description:"Check domain and populate it if it is a professional"},{name:"addRow",docblock:"Check domain and populate it if is a professional domain\n@param {string} domain",modifiers:[],params:[{name:"value",optional:!0}],returns:null,description:"Check domain and populate it if is a professional domain"},{name:"handleDeleteRow",docblock:"Remove a domain row\n@param {string} key",modifiers:[],params:[{name:"key",type:{name:"string"},optional:!1}],returns:null,description:"Remove a domain row"},{name:"hasWarnings",docblock:"Check if inputs has warnings",modifiers:[],params:[],returns:null,description:"Check if inputs has warnings"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"handleToggleClicked",docblock:"Handle the click on the self registration title\n@param {UserDirectory} userDirectory state",modifiers:[],params:[],returns:null,description:"Handle the click on the self registration title"},{name:"handleAddRowClick",docblock:"Handle the click on the add button",modifiers:[],params:[],returns:null,description:"Handle the click on the add button"},{name:"checkDomainIsProfessional",docblock:"check if domain is a professional one",modifiers:[],params:[{name:"uuid",optional:!1},{name:"value",optional:!1}],returns:null,description:"check if domain is a professional one"},{name:"handleInputChange",docblock:"Handle input change\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle input change"},{name:"validateForm",docblock:"validate the form\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"validate the form"},{name:"canDelete",docblock:"we cannot delete a row if we have only one domaine\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"we cannot delete a row if we have only one domaine"}],displayName:"DisplaySelfRegistrationAdministration",props:{dialogContext:{description:"",type:{name:"any"},required:!1},context:{description:"",type:{name:"any"},required:!1},adminSelfRegistrationContext:{description:"",type:{name:"object"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/ManageSmtpAdministrationSettings.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>ManageSmtpAdministrationSettings_ManageSmtpAdministrationSettings});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),AdministrationWorkspaceContext=__webpack_require__("./src/react-extension/contexts/AdministrationWorkspaceContext.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),SmtpProviders_data=__webpack_require__("./src/react-extension/components/Administration/ManageSmtpAdministrationSettings/SmtpProviders.data.js"),Password=__webpack_require__("./src/shared/components/Password/Password.js"),Select=__webpack_require__("./src/react-extension/components/Common/Select/Select.js"),AdminSmtpSettingsContext=__webpack_require__("./src/react-extension/contexts/AdminSmtpSettingsContext.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),SendTestMailDialog=__webpack_require__("./src/react-extension/components/Administration/SendTestMailDialog/SendTestMailDialog.js");class DisplayAdministrationWorkspaceActions extends react.Component{constructor(props){super(props),this.bindCallbacks(),this.dialogId=null}bindCallbacks(){this.handleSaveClick=this.handleSaveClick.bind(this),this.handleTestClick=this.handleTestClick.bind(this),this.handleCloseDialog=this.handleCloseDialog.bind(this)}async handleSaveClick(){if(this.smtpSettings.isProcessing())return;this.smtpSettings.validateData()&&await this.smtpSettings.saveSmtpSettings()}async handleTestClick(){if(this.smtpSettings.isProcessing())return;this.smtpSettings.validateData()&&(null!==this.dialogId&&this.handleCloseDialog(),this.dialogId=await this.props.dialogContext.open(SendTestMailDialog.A,{handleClose:this.handleCloseDialog}))}handleCloseDialog(){this.props.dialogContext.close(this.dialogId),this.dialogId=null}isSaveEnabled(){return this.smtpSettings.isSettingsModified()&&!this.smtpSettings.isProcessing()}isTestEnabled(){return this.smtpSettings.isSettingsModified()&&!this.smtpSettings.isProcessing()}get smtpSettings(){return this.props.adminSmtpSettingsContext}render(){return react.createElement("div",{className:"actions-wrapper"},react.createElement("div",{className:"left-actions-wrapper"},react.createElement("button",{type:"button secondary",disabled:!this.isTestEnabled(),id:"send-test-email",onClick:this.handleTestClick},react.createElement(Icon.A,{name:"plug"}),react.createElement("span",null,react.createElement(es.x6,null,"Send test email")))),react.createElement("button",{type:"button",className:"button primary",id:"save-settings",disabled:!this.isSaveEnabled(),onClick:this.handleSaveClick},react.createElement("span",null,react.createElement(es.x6,null,"Save"))))}}DisplayAdministrationWorkspaceActions.propTypes={adminSmtpSettingsContext:prop_types_default().object,workflowContext:prop_types_default().any,dialogContext:prop_types_default().object};const DisplayAdministrationSmtpSettingsActions=(0,AdminSmtpSettingsContext.fZ)((0,DialogContext.z9)((0,es.CI)("common")(DisplayAdministrationWorkspaceActions)));DisplayAdministrationWorkspaceActions.__docgenInfo={description:"This component is a container of multiple actions applicable on setting",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleSaveClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"handleTestClick",docblock:"Handle save settings",modifiers:["async"],params:[],returns:null,description:"Handle save settings"},{name:"handleCloseDialog",docblock:"Handle close dialog",modifiers:[],params:[],returns:null,description:"Handle close dialog"},{name:"isSaveEnabled",docblock:"Is save button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is save button enable"},{name:"isTestEnabled",docblock:"Is test button enable\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Is test button enable"},{name:"smtpSettings",docblock:"Returns the adminSmtpSettingsContext props\n@returns {object}\n@private",modifiers:["get"],params:[],returns:{type:{name:"object"}},description:"Returns the adminSmtpSettingsContext props"}],displayName:"DisplayAdministrationWorkspaceActions",props:{adminSmtpSettingsContext:{description:"",type:{name:"object"},required:!1},workflowContext:{description:"",type:{name:"any"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1}}};var portals=__webpack_require__("./src/shared/utils/portals.js"),caret_down=__webpack_require__("./src/img/svg/caret_down.svg"),caret_right=__webpack_require__("./src/img/svg/caret_right.svg"),email=__webpack_require__("./src/img/svg/email.svg"),file_text=__webpack_require__("./src/img/svg/file_text.svg"),svg_link=__webpack_require__("./src/img/svg/link.svg");class ManageSmtpAdministrationSettings extends react.Component{static get AUTHENTICATION_METHOD_NONE(){return"None"}static get AUTHENTICATION_METHOD_USERNAME(){return"Username only"}static get AUTHENTICATION_METHOD_USERNAME_PASSWORD(){return"Username & password"}constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks(),this.createRefs()}get defaultState(){return{showAdvancedSettings:!1,source:"db"}}createRefs(){this.usernameFieldRef=react.createRef(),this.passwordFieldRef=react.createRef(),this.hostFieldRef=react.createRef(),this.portFieldRef=react.createRef(),this.clientFieldRef=react.createRef(),this.senderEmailFieldRef=react.createRef(),this.senderNameFieldRef=react.createRef()}async componentDidMount(){this.props.administrationWorkspaceContext.setDisplayAdministrationWorkspaceAction(DisplayAdministrationSmtpSettingsActions),await this.props.adminSmtpSettingsContext.findSmtpSettings();const settings=this.props.adminSmtpSettingsContext.getCurrentSmtpSettings();this.setState({showAdvancedSettings:"other"===settings.provider?.id})}componentWillUnmount(){this.props.administrationWorkspaceContext.resetDisplayAdministrationWorkspaceAction(),this.props.adminSmtpSettingsContext.clearContext()}componentDidUpdate(){const smtpContext=this.props.adminSmtpSettingsContext,fieldToFocus=smtpContext.getFieldToFocus();fieldToFocus&&this[`${fieldToFocus}FieldRef`]?.current?.focus(),smtpContext.hasProviderChanged()&&this.setState({showAdvancedSettings:"other"===smtpContext.getCurrentSmtpSettings().provider?.id})}bindCallbacks(){this.handleAdvancedSettingsToggle=this.handleAdvancedSettingsToggle.bind(this),this.handleInputChange=this.handleInputChange.bind(this),this.handleProviderChange=this.handleProviderChange.bind(this),this.handleAuthenticationMethodChange=this.handleAuthenticationMethodChange.bind(this)}handleProviderChange(event){const providerId=event.target.value,provider=SmtpProviders_data.A.find((item=>item.id===providerId));this.props.adminSmtpSettingsContext.changeProvider(provider)}handleAuthenticationMethodChange(event){let username=null,password=null;"Username only"===event.target.value?username="":"Username & password"===event.target.value&&(username="",password=""),this.props.adminSmtpSettingsContext.setData({username,password})}handleInputChange(event){const target=event.target;this.props.adminSmtpSettingsContext.setData({[target.name]:target.value})}handleAdvancedSettingsToggle(){this.setState({showAdvancedSettings:!this.state.showAdvancedSettings})}isProcessing(){return this.props.adminSmtpSettingsContext.isProcessing()}get providerList(){return SmtpProviders_data.A.map((item=>({value:item.id,label:item.name})))}get authenticationMethodList(){return[{value:"None",label:this.translate("None")},{value:"Username only",label:this.translate("Username only")},{value:"Username & password",label:this.translate("Username & password")}]}get tlsSelectList(){return[{value:!0,label:this.translate("Yes")},{value:!1,label:this.translate("No")}]}get authenticationMethod(){const smtpSettings=this.props.adminSmtpSettingsContext.getCurrentSmtpSettings();return null===smtpSettings?.username?"None":null===smtpSettings?.password?"Username only":"Username & password"}shouldDisplayUsername(){return"Username only"===this.authenticationMethod||"Username & password"===this.authenticationMethod}shouldDisplayPassword(){return"Username & password"===this.authenticationMethod}shouldShowSourceWarningMessage(){const smtpContext=this.props.adminSmtpSettingsContext;return"db"!==smtpContext.getCurrentSmtpSettings().source&&smtpContext.isSettingsModified()}isReady(){return this.props.adminSmtpSettingsContext.isDataReady()}get settingsSource(){return this.props.adminSmtpSettingsContext?.getCurrentSmtpSettings()?.source}get configurationSource(){return{env:this.props.t("environment variables"),file:this.props.t("file"),db:this.props.t("database")}[this.settingsSource]||this.props.t("unknown")}get translate(){return this.props.t}render(){const settings=this.props.adminSmtpSettingsContext.getCurrentSmtpSettings(),errors=this.props.adminSmtpSettingsContext.getErrors(),smtpProviderName=settings?.provider?.name;return react.createElement("div",{className:"row"},react.createElement(react.Fragment,null,react.createElement("div",{className:"third-party-provider-settings smtp-settings main-column"},react.createElement("div",{className:"main-content"},react.createElement("h3",{className:"title"},react.createElement(es.x6,null,"Email server")),this.isReady()&&!settings?.provider&&react.createElement(react.Fragment,null,react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"Select a provider")),react.createElement("div",{className:"provider-list"},SmtpProviders_data.A.map((provider=>react.createElement("div",{key:provider.id,className:"provider button",id:provider.id,onClick:()=>this.props.adminSmtpSettingsContext.changeProvider(provider)},react.createElement("div",{className:"provider-logo"},"other"===provider.id&&react.createElement(email.A,null),"other"!==provider.id&&react.createElement("img",{src:`${this.props.context.trustedDomain}/img/third_party/${provider.icon}`})),react.createElement("p",{className:"provider-name"},provider.name)))))),this.isReady()&&settings?.provider&&react.createElement(react.Fragment,null,react.createElement("form",{className:"form"},react.createElement("h4",{className:"no-border"},react.createElement(es.x6,null,"SMTP server configuration")),react.createElement("div",{className:"select-wrapper input required "+(this.isProcessing()?"disabled":"")},react.createElement("label",{htmlFor:"smtp-settings-form-provider"},react.createElement(es.x6,null,"Email provider")),react.createElement(Select.A,{id:"smtp-settings-form-provider",name:"provider",items:this.providerList,value:settings.provider.id,onChange:this.handleProviderChange,disabled:this.isProcessing()})),react.createElement("div",{className:"select-wrapper input required "+(this.isProcessing()?"disabled":"")},react.createElement("label",{htmlFor:"smtp-settings-form-authentication-method"},react.createElement(es.x6,null,"Authentication method")),react.createElement(Select.A,{id:"smtp-settings-form-authentication-method",name:"authentication-method",items:this.authenticationMethodList,value:this.authenticationMethod,onChange:this.handleAuthenticationMethodChange,disabled:this.isProcessing()})),this.shouldDisplayUsername()&&react.createElement("div",{className:`input text ${errors.username?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-username"},react.createElement(es.x6,null,"Username")),react.createElement("input",{id:"smtp-settings-form-username",ref:this.usernameFieldRef,name:"username",className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.username,onChange:this.handleInputChange,placeholder:this.translate("Username"),disabled:this.isProcessing()}),errors.username&&react.createElement("div",{className:"error-message"},errors.username)),this.shouldDisplayPassword()&&react.createElement("div",{className:`input-password-wrapper input ${errors.password?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-password"},react.createElement(es.x6,null,"Password")),react.createElement(Password.A,{id:"smtp-settings-form-password",name:"password",autoComplete:"new-password",placeholder:this.translate("Password"),preview:!0,value:settings.password,onChange:this.handleInputChange,disabled:this.isProcessing(),inputRef:this.passwordFieldRef}),errors.password&&react.createElement("div",{className:"password error-message"},errors.password)),react.createElement("div",{className:"accordion-header"},react.createElement("button",{type:"button",className:"link no-border",onClick:this.handleAdvancedSettingsToggle},this.state.showAdvancedSettings?react.createElement(caret_down.A,null):react.createElement(caret_right.A,null),react.createElement(es.x6,null,"Advanced settings"))),this.state.showAdvancedSettings&&react.createElement("div",{className:"advanced-settings"},react.createElement("div",{className:`input text required ${errors.host?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-host"},react.createElement(es.x6,null,"SMTP host")),react.createElement("input",{id:"smtp-settings-form-host",ref:this.hostFieldRef,name:"host","aria-required":!0,className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.host,onChange:this.handleInputChange,placeholder:this.translate("SMTP server address"),disabled:this.isProcessing()}),errors.host&&react.createElement("div",{className:"error-message"},errors.host)),react.createElement("div",{className:`input text required ${errors.tls?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-tls"},react.createElement(es.x6,null,"Use TLS")),react.createElement(Select.A,{id:"smtp-settings-form-tls",name:"tls",items:this.tlsSelectList,value:settings.tls,onChange:this.handleInputChange,disabled:this.isProcessing()})),react.createElement("div",{className:`input text required ${errors.port?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-port"},react.createElement(es.x6,null,"Port")),react.createElement("input",{id:"smtp-settings-form-port","aria-required":!0,ref:this.portFieldRef,name:"port",className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.port,onChange:this.handleInputChange,placeholder:this.translate("Port number"),disabled:this.isProcessing()}),errors.port&&react.createElement("div",{className:"error-message"},errors.port)),react.createElement("div",{className:`input text ${errors.client?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-client"},react.createElement(es.x6,null,"SMTP client")),react.createElement("input",{id:"smtp-settings-form-client",ref:this.clientFieldRef,name:"client",maxLength:"2048",type:"text",autoComplete:"off",value:settings.client,onChange:this.handleInputChange,placeholder:this.translate("SMTP client address"),disabled:this.isProcessing()}),errors.client&&react.createElement("div",{className:"error-message"},errors.client))),react.createElement("h4",null,react.createElement(es.x6,null,"Sender configuration")),react.createElement("div",{className:`input text required ${errors.sender_name?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-sender-name"},react.createElement(es.x6,null,"Sender name")),react.createElement("input",{id:"smtp-settings-form-sender-name",ref:this.senderNameFieldRef,name:"sender_name","aria-required":!0,className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.sender_name,onChange:this.handleInputChange,placeholder:this.translate("Sender name"),disabled:this.isProcessing()}),errors.sender_name&&react.createElement("div",{className:"error-message"},errors.sender_name),react.createElement("p",null,react.createElement(es.x6,null,"This is the name users will see in their mailbox when passbolt sends a notification."))),react.createElement("div",{className:`input text required ${errors.sender_email?"error":""} ${this.isProcessing()?"disabled":""}`},react.createElement("label",{htmlFor:"smtp-settings-form-sender-name"},react.createElement(es.x6,null,"Sender email")),react.createElement("input",{id:"smtp-settings-form-sender-email",ref:this.senderEmailFieldRef,name:"sender_email","aria-required":!0,className:"fluid",maxLength:"256",type:"text",autoComplete:"off",value:settings.sender_email,onChange:this.handleInputChange,placeholder:this.translate("Sender email"),disabled:this.isProcessing()}),errors.sender_email&&react.createElement("div",{className:"error-message"},errors.sender_email),react.createElement("p",null,react.createElement(es.x6,null,"This is the email address users will see in their mail box when passbolt sends a notification.",react.createElement("br",null),"It's a good practice to provide a working email address that users can reply to.")))))),this.shouldShowSourceWarningMessage()&&react.createElement("div",{className:"warning message"},react.createElement(es.x6,null,react.createElement("b",null,"Warning:")," These are the settings provided by a configuration file. If you save it, will ignore the settings on file and use the ones from the database."))),react.createElement(DisplayAdministrationSmtpSettingsActions,null)),(0,portals.m)(react.createElement(react.Fragment,null,react.createElement("div",{className:"sidebar-help-section",id:"smtp-settings-source"},react.createElement("h3",null,react.createElement(es.x6,null,"Configuration source")),react.createElement("p",null,react.createElement(es.x6,null,"This current configuration source is: "),this.configurationSource,".")),react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Why do I need an SMTP server?")),react.createElement("p",null,react.createElement(es.x6,null,"Passbolt needs an smtp server in order to send invitation emails after an account creation and to send email notifications.")),react.createElement("a",{className:"button",href:"https://passbolt.com/docs/admin/emails/email-server/",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"Read the documentation")))),settings?.provider&&"other"!==settings?.provider.id&&react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"How do I configure a ",{smtpProviderName}," SMTP server?")),react.createElement("a",{className:"button",href:settings.provider.help_page,target:"_blank",rel:"noopener noreferrer"},react.createElement(svg_link.A,null),react.createElement("span",null,react.createElement(es.x6,null,"See the ",{smtpProviderName}," documentation")))),settings?.provider&&("google-mail"===settings.provider.id||"google-workspace"===settings.provider.id)&&react.createElement("div",{className:"sidebar-help-section"},react.createElement("h3",null,react.createElement(es.x6,null,"Why shouldn't I use my login password ?")),react.createElement("p",null,react.createElement(es.x6,null,'In order to use the "Username & Password" authentication method with Google, you will need to enable MFA on your Google Account. The password should not be your login password, you have to create an "App Password" generated by Google.. However, the email remain the same.')),react.createElement("a",{className:"button",href:"https://support.google.com/mail/answer/185833",target:"_blank",rel:"noopener noreferrer"},react.createElement(file_text.A,null),react.createElement("span",null,react.createElement(es.x6,null,"More informations"))))),document.getElementById("administration-help-panel")))}}ManageSmtpAdministrationSettings.propTypes={context:prop_types_default().object,dialogContext:prop_types_default().any,administrationWorkspaceContext:prop_types_default().object,adminSmtpSettingsContext:prop_types_default().object,t:prop_types_default().func};const ManageSmtpAdministrationSettings_ManageSmtpAdministrationSettings=(0,AppContext.L)((0,AdminSmtpSettingsContext.fZ)((0,DialogContext.z9)((0,AdministrationWorkspaceContext.Kk)((0,es.CI)("common")(ManageSmtpAdministrationSettings)))));ManageSmtpAdministrationSettings.__docgenInfo={description:"",methods:[{name:"AUTHENTICATION_METHOD_NONE",docblock:"The no authentication method.\n@returns {string}",modifiers:["static","get"],params:[],returns:{type:{name:"string"}},description:"The no authentication method."},{name:"AUTHENTICATION_METHOD_USERNAME",docblock:"The authentication method username only\n@returns {string}",modifiers:["static","get"],params:[],returns:{type:{name:"string"}},description:"The authentication method username only"},{name:"AUTHENTICATION_METHOD_USERNAME_PASSWORD",docblock:"The authentication method username and password\n@returns {string}",modifiers:["static","get"],params:[],returns:{type:{name:"string"}},description:"The authentication method username and password"},{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"createRefs",docblock:"Creates the React ref for the forms to be able to focus fields having errors",modifiers:[],params:[],returns:null,description:"Creates the React ref for the forms to be able to focus fields having errors"},{name:"bindCallbacks",docblock:"Bind callbacks",modifiers:[],params:[],returns:null,description:"Bind callbacks"},{name:"handleProviderChange",docblock:"Handle provider change from select field.\n@params {ReactEvent} The react event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle provider change from select field."},{name:"handleAuthenticationMethodChange",docblock:"Handle provider change from select field.\n@params {ReactEvent} The react event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle provider change from select field."},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"handleAdvancedSettingsToggle",docblock:"Handles the click on the advanced settings toggle.",modifiers:[],params:[],returns:null,description:"Handles the click on the advanced settings toggle."},{name:"isProcessing",docblock:"Returns true if there is a processing happening with the SMTP settings.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if there is a processing happening with the SMTP settings."},{name:"providerList",docblock:"Return the list of available providers.\n@returns {Array<object>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"object"}]}},description:"Return the list of available providers."},{name:"authenticationMethodList",docblock:"Return the list of available authentication method.\n@returns {Array<object>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"object"}]}},description:"Return the list of available authentication method."},{name:"tlsSelectList",docblock:"Returns a list of available choice for the 'TLS' select field.\n@returns {Array<object>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"object"}]}},description:"Returns a list of available choice for the 'TLS' select field."},{name:"authenticationMethod",docblock:"Return the selected authentication method.\n@return {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Return the selected authentication method."},{name:"shouldDisplayUsername",docblock:"Return true if the username field should be displayed\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the username field should be displayed"},{name:"shouldDisplayPassword",docblock:"Return true if the password field should be displayed\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the password field should be displayed"},{name:"shouldShowSourceWarningMessage",docblock:"Returns true if the source of the settings is from a config file instead of DB and the user has modified a field.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the source of the settings is from a config file instead of DB and the user has modified a field."},{name:"isReady",docblock:"Returns true if the data is loaded.\nUseful to avoid UI blinking during data loading.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the data is loaded.\nUseful to avoid UI blinking during data loading."},{name:"settingsSource",docblock:null,modifiers:["get"],params:[],returns:null},{name:"configurationSource",docblock:"Returns the source of the current configuration\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the source of the current configuration"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"ManageSmtpAdministrationSettings",props:{context:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},administrationWorkspaceContext:{description:"",type:{name:"object"},required:!1},adminSmtpSettingsContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Avatar/UserAvatar.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Avatar_UserAvatar});var _circle,_path,_circle2,react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const user_default=function SvgUserDefault(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:42,height:42,fill:"none",viewBox:"0 0 42 42"},props),_circle||(_circle=react.createElement("circle",{id:"background",cx:21,cy:21,r:21,fill:"var(--Avatar-Avatar-background)"})),_path||(_path=react.createElement("path",{fill:"var(--Avatar-Avatar)",d:"M27.184 26.54H14.852a7.36 7.36 0 0 0-5.362 2.2 7.4 7.4 0 0 0-2.216 5.36v1.145a19.66 19.66 0 0 0 13.672 5.522 19.66 19.66 0 0 0 13.673-5.522V34.1a7.38 7.38 0 0 0-2.199-5.362 7.38 7.38 0 0 0-5.236-2.198"})),_circle2||(_circle2=react.createElement("circle",{cx:21,cy:15.5,r:7.5,fill:"var(--Avatar-Avatar)"})))};var attention=__webpack_require__("./src/img/svg/attention.svg");const DEFAULT_AVATAR_URL_REGEXP=/img\/avatar\/user(_medium)?\.png$/;class UserAvatar extends react.Component{constructor(props){super(props),this.state=this.getDefaultState(),this.bindCallbacks()}getDefaultState(){return{error:!1}}bindCallbacks(){this.handleError=this.handleError.bind(this)}get avatarUrl(){return this.props?.user?.profile?.avatar?.url?.medium}propsHasUrl(){return Boolean(this.avatarUrl)}propsUrlHasProtocol(){return this.avatarUrl.startsWith("https://")||this.avatarUrl.startsWith("http://")}formatUrl(url){return`${this.props.baseUrl}/${url}`}isDefaultAvatarUrlFromApi(){return DEFAULT_AVATAR_URL_REGEXP.test(this.avatarUrl)}getAvatarSrc(){return this.propsHasUrl()?this.propsUrlHasProtocol()?this.avatarUrl:this.formatUrl(this.avatarUrl):null}handleError(){console.error(`Could not load avatar image url: ${this.getAvatarSrc()}`),this.setState({error:!0})}getAltText(){const user=this.props?.user;return user?.first_name&&user?.last_name?this.props.t("Avatar of user {{first_name}} {{last_name}}.",{firstname:user.first_name,lastname:user.last_name}):"..."}render(){const srcAvatar=this.getAvatarSrc(),shouldDisplayDefaultAvatar=this.state.error||this.isDefaultAvatarUrlFromApi()||!srcAvatar;return react.createElement("div",{className:`${this.props.className}`},shouldDisplayDefaultAvatar&&react.createElement("div",{className:"default-avatar"},react.createElement(user_default,null)),!shouldDisplayDefaultAvatar&&react.createElement("div",{className:"default-avatar"},react.createElement("img",{src:srcAvatar,onError:this.handleError,alt:this.getAltText()})),this.props.attentionRequired&&react.createElement(attention.A,{className:"attention-required"}))}}UserAvatar.defaultProps={className:"avatar user-avatar"},UserAvatar.propTypes={baseUrl:prop_types_default().string,user:prop_types_default().object,attentionRequired:prop_types_default().bool,className:prop_types_default().string,t:prop_types_default().func};const Avatar_UserAvatar=(0,es.CI)("common")(UserAvatar);UserAvatar.__docgenInfo={description:"",methods:[{name:"getDefaultState",docblock:"Get default state\n@returns {*}",modifiers:[],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"avatarUrl",docblock:"Returns the current avatar URL from the props\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the current avatar URL from the props"},{name:"propsHasUrl",docblock:"Return true if the user from props contains a valid profile with avatar url properties\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the user from props contains a valid profile with avatar url properties"},{name:"propsUrlHasProtocol",docblock:"Check if the url has a protocol like http or https?\n@todo only check https for now\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the url has a protocol like http or https?"},{name:"formatUrl",docblock:"Format the avatar url to point on the site url.\n@param {string} url The relative url\n@returns {string}",modifiers:[],params:[{name:"url",description:"The relative url",type:{name:"string"},optional:!1}],returns:{type:{name:"string"}},description:"Format the avatar url to point on the site url."},{name:"isDefaultAvatarUrlFromApi",docblock:"Returns true if the given URL matches a default avatar from the API\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the given URL matches a default avatar from the API"},{name:"getAvatarSrc",docblock:"Get the user avatar url. If the user has no avatar defined, return the default one.\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Get the user avatar url. If the user has no avatar defined, return the default one."},{name:"handleError",docblock:"Handle error while loading the user avatar image.\nBy instance when the image is not present on the server.\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Handle error while loading the user avatar image.\nBy instance when the image is not present on the server."},{name:"getAltText",docblock:"Get the user avatar image alternative text.\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Get the user avatar image alternative text."}],displayName:"UserAvatar",props:{className:{defaultValue:{value:'"avatar user-avatar"',computed:!1},description:"",type:{name:"string"},required:!1},baseUrl:{description:"",type:{name:"string"},required:!1},user:{description:"",type:{name:"object"},required:!1},attentionRequired:{description:"",type:{name:"bool"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Error/DisplayHttpError/DisplayHttpError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class DisplayHttpError extends react__WEBPACK_IMPORTED_MODULE_0__.Component{get errorTitle(){return{403:this.props.t("Whoops... access is denied"),404:this.props.t("Whoops... looks like you are lost.")}[this.props.errorCode]||""}get errorDescription(){return{403:this.props.t("Access is restricted to authorized users only."),404:this.props.t("We could not find the page you are looking for.")}[this.props.errorCode]||""}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"http-error main-column"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"main-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,this.props.errorCode),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",null,this.errorTitle),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,this.errorDescription)))))}}DisplayHttpError.propTypes={errorCode:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number.isRequired,t:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(DisplayHttpError);DisplayHttpError.__docgenInfo={description:"This component allows to display an HTTP error page",methods:[{name:"errorTitle",docblock:"Returns the title text associated to the HTTP error code passed as props.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the title text associated to the HTTP error code passed as props."},{name:"errorDescription",docblock:"Returns the description text associated to the HTTP error code passed as props.\n@returns {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Returns the description text associated to the HTTP error code passed as props."}],displayName:"DisplayHttpError",props:{errorCode:{description:"",type:{name:"number"},required:!0},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Common/Range/Range.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);class Range extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(props){super(props),this.bindHandlers()}bindHandlers(){this.handleRangeOptionClick=this.handleRangeOptionClick.bind(this),this.handleRangeChange=this.handleRangeChange.bind(this)}handleRangeOptionClick(value){this.props.disabled||this.props.onChange(this.props.id,value)}handleRangeChange(e){const target=e.target;this.props.onChange(target.name,this.values[target.value].value)}getComputedStyleForEntropyStep(index,valueCount){return{left:`${index*(100/(valueCount-1))}%`}}getValueIndex(value){return this.values.findIndex((v=>v.value===value))}get values(){return[{label:"50 bits",value:50},{label:"64 bits",value:64},{label:"80 bits",value:80},{label:"96 bits",value:96},{label:"128 bits",value:128},{label:"160 bits",value:160},{label:"192 bits",value:192},{label:"224 bits",value:224}]}render(){const values=this.values,valueCount=values.length,{id,value}=this.props;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"range-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"range-labels"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{key:"min"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Weak")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{key:"max"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_1__.x6,null,"Secure"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"range-input-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"range",className:"range-input",id,name:id,min:0,max:values.length-1,value:this.getValueIndex(value),list:`${this.props.id}-values`,onChange:this.handleRangeChange,required:!0,disabled:this.props.disabled}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{className:"range-options"},values.map(((v,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{key:`li-${index}`,onClick:()=>this.handleRangeOptionClick(v.value),style:this.getComputedStyleForEntropyStep(index,valueCount),className:"range-option "+(value===v.value?"range-option--active":""),disabled:this.props.disabled},v.label))))))}}Range.propTypes={value:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number.isRequired,id:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string.isRequired,onChange:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func,disabled:prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(Range);Range.__docgenInfo={description:"Display of the Range component",methods:[{name:"bindHandlers",docblock:"Binds the component handlers",modifiers:[],params:[],returns:null,description:"Binds the component handlers"},{name:"handleRangeOptionClick",docblock:"Handles click on range options\n@param {number} value",modifiers:[],params:[{name:"value",type:{name:"number"},optional:!1}],returns:null,description:"Handles click on range options"},{name:"handleRangeChange",docblock:"Handles input range change event\n@param {ReactEvent} e",modifiers:[],params:[{name:"e",type:{name:"ReactEvent"},optional:!1}],returns:null,description:"Handles input range change event"},{name:"getComputedStyleForEntropyStep",docblock:"Returns the computed style to apply to an option based on its index\n@param {number} index the index number in the list\n@param {number} valueCount the size of the list\n@returns {Object}",modifiers:[],params:[{name:"index",description:"the index number in the list",type:{name:"number"},optional:!1},{name:"valueCount",description:"the size of the list",type:{name:"number"},optional:!1}],returns:{type:{name:"Object"}},description:"Returns the computed style to apply to an option based on its index"},{name:"getValueIndex",docblock:"Returns the index in the values list of the given value\n@param {number} value\n@returns {number}",modifiers:[],params:[{name:"value",type:{name:"number"},optional:!1}],returns:{type:{name:"number"}},description:"Returns the index in the values list of the given value"},{name:"values",docblock:"Returns the list of available values\n@returns {Array<{label: string, value: number}>}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[]}},description:"Returns the list of available values"}],displayName:"Range",props:{value:{description:"",type:{name:"number"},required:!0},id:{description:"",type:{name:"string"},required:!0},onChange:{description:"",type:{name:"func"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationInternationalizationContext/AdministrationInternationalizationContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m$:()=>AdminInternationalizationContextProvider,A3:()=>withAdminInternationalization});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),apiClient=__webpack_require__("./src/shared/lib/apiClient/apiClient.js");const Internationalisation_InternationalisationService=class InternationalisationService{constructor(apiClientOptions){apiClientOptions.setResourceName("locale/settings"),this.apiClient=new apiClient.O(apiClientOptions)}async save(lang){return(await this.apiClient.create(lang)).body}},AdminInternationalizationContext=react.createContext({getCurrentLocale:()=>{},getLocale:()=>{},supportedLocales:()=>{},setLocale:()=>{},hasLocaleChanges:()=>{},findLocale:()=>{},save:()=>{},setProcessing:()=>{},isProcessing:()=>{},clearContext:()=>{}});class AdminInternationalizationContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.internalisationService=new Internationalisation_InternationalisationService(apiClientOptions)}get defaultState(){return{currentLocale:null,locale:"en-UK",processing:!0,getCurrentLocale:this.getCurrentLocale.bind(this),getLocale:this.getLocale.bind(this),setLocale:this.setLocale.bind(this),findLocale:this.findLocale.bind(this),hasLocaleChanges:this.hasLocaleChanges.bind(this),isProcessing:this.isProcessing.bind(this),setProcessing:this.setProcessing.bind(this),save:this.save.bind(this),clearContext:this.clearContext.bind(this)}}findLocale(){this.setProcessing(!0);const result=this.props.context.siteSettings.locale;this.setState({currentLocale:result}),this.setState({locale:result}),this.setProcessing(!1)}getCurrentLocale(){return this.state.currentLocale}getLocale(){return this.state.locale}async setLocale(locale){await this.setState({locale})}isProcessing(){return this.state.processing}setProcessing(processing){this.setState({processing})}hasLocaleChanges(){return this.state.locale!==this.state.currentLocale}clearContext(){const{currentLocale,locale,processing}=this.defaultState;this.setState({currentLocale,locale,processing})}async save(){this.setProcessing(!0),await this.internalisationService.save({value:this.state.locale}),this.props.context.onRefreshLocaleRequested(this.state.locale),this.findLocale()}render(){return react.createElement(AdminInternationalizationContext.Provider,{value:this.state},this.props.children)}}AdminInternationalizationContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any};(0,AppContext.L)(AdminInternationalizationContextProvider);function withAdminInternationalization(WrappedComponent){return class WithAdminInternationalization extends react.Component{render(){return react.createElement(AdminInternationalizationContext.Consumer,null,(adminInternationalizationContext=>react.createElement(WrappedComponent,{adminInternationalizationContext,...this.props})))}}}AdminInternationalizationContextProvider.__docgenInfo={description:"The Administration Internationalization context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findLocale",docblock:"Find locale from API\n@returns {string}",modifiers:[],params:[],returns:{type:{name:"string"}},description:"Find locale from API"},{name:"getCurrentLocale",docblock:"Returns the locale actually saved\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the locale actually saved"},{name:"getLocale",docblock:"Returns the locale that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the locale that have been fetch previously."},{name:"setLocale",docblock:"Handle locale changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:["async"],params:[{name:"locale",optional:!1}],returns:{type:{name:"void"}},description:"Handle locale changes."},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"setProcessing",docblock:"Handle processing change.\n@params {Boolean} processing value\n@returns {void}",modifiers:[],params:[{name:"processing",optional:!1}],returns:{type:{name:"void"}},description:"Handle processing change."},{name:"hasLocaleChanges",docblock:"Check if there are changes to apply\n@returns {Boolean}",modifiers:[],params:[],returns:{type:{name:"Boolean"}},description:"Check if there are changes to apply"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."},{name:"save",docblock:"Whenever the save has been requested",modifiers:["async"],params:[],returns:null,description:"Whenever the save has been requested"}],displayName:"AdminInternationalizationContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationMfaPolicy/AdministrationMfaPolicyContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{sO:()=>AdminMfaPolicyContextProvider,yS:()=>withAdminMfaPolicy});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js");const mfaPolicy_MfaPolicyViewModel=class MfaPolicyViewModel{constructor(settings={remember_me_for_a_month:!1}){this.policy=settings.policy,this.rememberMeForAMonth=settings.remember_me_for_a_month}};var apiClient=__webpack_require__("./src/shared/lib/apiClient/apiClient.js");const mfaPolicy_MfaPolicyService=class MfaPolicyService{constructor(apiClientOptions){apiClientOptions.setResourceName("mfa-policies/settings"),this.apiClient=new apiClient.O(apiClientOptions)}async find(){return(await this.apiClient.findAll()).body}async save(dto){await this.apiClient.create(dto)}};var MfaPolicyEnumeration=__webpack_require__("./src/shared/models/mfaPolicy/MfaPolicyEnumeration.js");const mfaPolicy_MfaPolicyDto=class MfaPolicyDto{constructor(settings={rememberMeForAMonth:!1}){this.policy=settings.policy||MfaPolicyEnumeration.F.OPTIN,this.remember_me_for_a_month=settings.rememberMeForAMonth}},AdminMfaPolicyContext=react.createContext({getCurrentSettings:()=>{},getSettings:()=>{},setSettings:()=>{},hasSettingsChanges:()=>{},findSettings:()=>{},setProcessing:()=>{},isProcessing:()=>{},clearContext:()=>{},save:()=>{}});class AdminMfaPolicyContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState;const apiClientOptions=props.context.getApiClientOptions();this.mfaPolicyService=new mfaPolicy_MfaPolicyService(apiClientOptions)}get defaultState(){return{settings:new mfaPolicy_MfaPolicyViewModel,currentSettings:new mfaPolicy_MfaPolicyViewModel,processing:!0,getCurrentSettings:this.getCurrentSettings.bind(this),getSettings:this.getSettings.bind(this),setSettings:this.setSettings.bind(this),findSettings:this.findSettings.bind(this),hasSettingsChanges:this.hasSettingsChanges.bind(this),isProcessing:this.isProcessing.bind(this),setProcessing:this.setProcessing.bind(this),clearContext:this.clearContext.bind(this),save:this.save.bind(this)}}async findSettings(callback=()=>{}){this.setProcessing(!0);const result=await this.mfaPolicyService.find(),currentSettings=new mfaPolicy_MfaPolicyViewModel(result);this.setState({currentSettings}),this.setState({settings:currentSettings},callback),this.setProcessing(!1)}async save(){this.setProcessing(!0);const newSettings=new mfaPolicy_MfaPolicyDto(this.state.settings);await this.mfaPolicyService.save(newSettings),await this.findSettings()}getCurrentSettings(){return this.state.currentSettings}getSettings(){return this.state.settings}setSettings(key,value,callback=()=>{}){const newSettings=Object.assign({},this.state.settings,{[key]:value});this.setState({settings:newSettings},callback)}isProcessing(){return this.state.processing}setProcessing(processing){this.setState({processing})}hasSettingsChanges(){return JSON.stringify(this.state.currentSettings)!==JSON.stringify(this.state.settings)}clearContext(){const{currentSettings,settings,processing}=this.defaultState;this.setState({currentSettings,settings,processing})}render(){return react.createElement(AdminMfaPolicyContext.Provider,{value:this.state},this.props.children)}}AdminMfaPolicyContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any,t:prop_types_default().any,actionFeedbackContext:prop_types_default().object};(0,AppContext.L)(AdminMfaPolicyContextProvider);function withAdminMfaPolicy(WrappedComponent){return class WithAdminMfaPolicy extends react.Component{render(){return react.createElement(AdminMfaPolicyContext.Consumer,null,(adminMfaPolicyContext=>react.createElement(WrappedComponent,{adminMfaPolicyContext,...this.props})))}}}AdminMfaPolicyContextProvider.__docgenInfo={description:"The Administration mfa policy context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findSettings",docblock:"Find the self registration settings\n@return {Promise<void>}",modifiers:["async"],params:[{name:"callback",optional:!0}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find the self registration settings"},{name:"save",docblock:"Whenever the save has been requested",modifiers:["async"],params:[],returns:null,description:"Whenever the save has been requested"},{name:"getCurrentSettings",docblock:"Returns the setting actually saved inside DB\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the setting actually saved inside DB"},{name:"getSettings",docblock:"Returns the settings that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the settings that have been fetch previously."},{name:"setSettings",docblock:"Handle settings changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"key",optional:!1},{name:"value",optional:!1},{name:"callback",optional:!0}],returns:{type:{name:"void"}},description:"Handle settings changes."},{name:"isProcessing",docblock:"Returns true when the data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true when the data is under processing"},{name:"setProcessing",docblock:"Handle processing change.\n@params {Boolean} processing value\n@returns {void}",modifiers:[],params:[{name:"processing",optional:!1}],returns:{type:{name:"void"}},description:"Handle processing change."},{name:"hasSettingsChanges",docblock:"Check if there are changes to apply\n@returns {Boolean}",modifiers:[],params:[],returns:{type:{name:"Boolean"}},description:"Check if there are changes to apply"},{name:"clearContext",docblock:"Puts the state to its default in order to avoid keeping the data users didn't want to save.",modifiers:[],params:[],returns:null,description:"Puts the state to its default in order to avoid keeping the data users didn't want to save."}],displayName:"AdminMfaPolicyContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"any"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1}}}},"./src/react-extension/contexts/Administration/AdministrationUserPassphrasePoliciesContext/AdministrationUserPassphrasePoliciesContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>AdministrationUserPassphrasePoliciesContext_AdministrationUserPassphrasePoliciesContext,pE:()=>withAdminUserPassphrasePolicies});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),entity=__webpack_require__("./src/shared/models/entity/abstract/entity.js");class UserPassphrasePoliciesEntity extends entity.A{constructor(userPassphrasePoliciesDto,options={}){super(entitySchema.A.validate(UserPassphrasePoliciesEntity.ENTITY_NAME,userPassphrasePoliciesDto,UserPassphrasePoliciesEntity.getSchema()),options)}static getSchema(){return{type:"object",required:["entropy_minimum","external_dictionary_check"],properties:{id:{type:"string",format:"uuid"},entropy_minimum:{type:"integer",minimum:50,maximum:224},external_dictionary_check:{type:"boolean"},created:{type:"string",format:"date-time"},created_by:{type:"string",format:"uuid"},modified:{type:"string",format:"date-time"},modified_by:{type:"string",format:"uuid"}}}}static get ENTITY_NAME(){return"UserPassphrasePolicies"}static createFromDefault(data={}){const dto=Object.assign({entropy_minimum:50,external_dictionary_check:!0},data);return new UserPassphrasePoliciesEntity(dto)}}const userPassphrasePoliciesEntity=UserPassphrasePoliciesEntity;class UserPassphrasePoliciesViewModel{constructor(settings={}){this.external_dictionary_check=settings?.external_dictionary_check,this.entropy_minimum=settings?.entropy_minimum}static getSchema(){const baseEntitySchema=userPassphrasePoliciesEntity.getSchema();return{type:"object",required:["entropy_minimum","external_dictionary_check"],properties:{entropy_minimum:baseEntitySchema.properties.entropy_minimum,external_dictionary_check:baseEntitySchema.properties.external_dictionary_check}}}static fromEntityDto(entityDto){const data={entropy_minimum:parseInt(entityDto?.entropy_minimum,10)||50,external_dictionary_check:Boolean(entityDto?.external_dictionary_check)};return new UserPassphrasePoliciesViewModel(data)}static isDataDifferent(a,b){return["entropy_minimum","external_dictionary_check"].some((key=>a[key]!==b[key]))}toEntityDto(){return{entropy_minimum:this.entropy_minimum,external_dictionary_check:this.external_dictionary_check}}cloneWithMutation(field,value){const clone={...this,[field]:value};return new UserPassphrasePoliciesViewModel(clone)}validate(){const schema=UserPassphrasePoliciesViewModel.getSchema();try{entitySchema.A.validate(this.constructor.name,this,schema)}catch(e){return e}return new entityValidationError.A}}const userPassphrasePolicies_UserPassphrasePoliciesViewModel=UserPassphrasePoliciesViewModel,AdministrationUserPassphrasePoliciesContext=react.createContext({getSettings:()=>{},setSettings:()=>{},findSettings:()=>{},isProcessing:()=>{},validateData:()=>{},save:()=>{},getErrors:()=>{},hasSettingsChanges:()=>{}});class AdministrationUserPassphrasePoliciesContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{processing:!1,errors:null,hasBeenValidated:!1,isDataModified:!1,settings:new userPassphrasePolicies_UserPassphrasePoliciesViewModel,findSettings:this.findSettings.bind(this),getSettings:this.getSettings.bind(this),setSettings:this.setSettings.bind(this),isProcessing:this.isProcessing.bind(this),validateData:this.validateData.bind(this),save:this.save.bind(this),getErrors:this.getErrors.bind(this),hasSettingsChanges:this.hasSettingsChanges.bind(this)}}async findSettings(){this.setState({processing:!0});const result=await this.props.context.port.request("passbolt.user-passphrase-policies.find"),settings=userPassphrasePolicies_UserPassphrasePoliciesViewModel.fromEntityDto(result);this.setState({settings,currentSettings:settings,processing:!1})}getSettings(){return this.state.settings}setSettings(key,value){const settings=this.state.settings.cloneWithMutation(key,value),isDataModified=userPassphrasePolicies_UserPassphrasePoliciesViewModel.isDataDifferent(settings,this.state.currentSettings);if(!this.state.hasBeenValidated)return void this.setState({settings,isDataModified});const errors=settings.validate();this.setState({errors,settings,isDataModified})}isProcessing(){return this.state.processing}validateData(){const validattionError=this.state.settings.validate(),hasErrors=validattionError.hasErrors(),errors=hasErrors?validattionError:null;return this.setState({errors,hasBeenValidated:!0}),!hasErrors}async save(){this.setState({processing:!0});try{const settingsDto=this.state.settings.toEntityDto(),result=await this.props.context.port.request("passbolt.user-passphrase-policies.save",settingsDto),settings=userPassphrasePolicies_UserPassphrasePoliciesViewModel.fromEntityDto(result);this.setState({settings,currentSettings:settings,processing:!1,isDataModified:!1})}finally{this.setState({processing:!1})}}getErrors(){return this.state.errors}hasSettingsChanges(){return this.state.isDataModified}render(){return react.createElement(AdministrationUserPassphrasePoliciesContext.Provider,{value:this.state},this.props.children)}}AdministrationUserPassphrasePoliciesContextProvider.propTypes={context:prop_types_default().any,children:prop_types_default().any,t:prop_types_default().any};const AdministrationUserPassphrasePoliciesContext_AdministrationUserPassphrasePoliciesContext=(0,AppContext.L)((0,es.CI)("common")(AdministrationUserPassphrasePoliciesContextProvider));function withAdminUserPassphrasePolicies(WrappedComponent){return class WithAdminUserPassphrasePolicies extends react.Component{render(){return react.createElement(AdministrationUserPassphrasePoliciesContext.Consumer,null,(adminUserPassphrasePoliciesContext=>react.createElement(WrappedComponent,{adminUserPassphrasePoliciesContext,...this.props})))}}}AdministrationUserPassphrasePoliciesContextProvider.__docgenInfo={description:"The Administration User passphrase Policies context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"findSettings",docblock:"Find the User Passphrase Policies\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Find the User Passphrase Policies"},{name:"getSettings",docblock:"Returns the settings that have been fetch previously.\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Returns the settings that have been fetch previously."},{name:"setSettings",docblock:"Set the givent field with the given value.",modifiers:[],params:[{name:"key",optional:!1},{name:"value",optional:!1}],returns:null,description:"Set the givent field with the given value."},{name:"isProcessing",docblock:"Returns true if data is under processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if data is under processing"},{name:"validateData",docblock:"runs the current data validation\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"runs the current data validation"},{name:"save",docblock:"Saves the data on the API",modifiers:["async"],params:[],returns:null,description:"Saves the data on the API"},{name:"getErrors",docblock:"Returns the latest validation errors available\n@returns {EntityValidationError|null}",modifiers:[],params:[],returns:{type:{name:"union",elements:[{name:"EntityValidationError"}]}},description:"Returns the latest validation errors available"},{name:"hasSettingsChanges",docblock:"Returns true if the data has changed\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the data has changed"}],displayName:"AdministrationUserPassphrasePoliciesContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/AnnouncementContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>AnnouncementContextProvider,w2:()=>withAnnouncement});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),uuid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");const AnnouncementContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({announcements:[],show:()=>{},close:()=>{}});class AnnouncementContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{announcements:[],show:(Announcement,AnnouncementProps)=>{const announcementKey=(0,uuid__WEBPACK_IMPORTED_MODULE_1__.A)();return this.setState({announcements:[...this.state.announcements,{key:announcementKey,Announcement,AnnouncementProps}]}),announcementKey},close:async announcementKey=>await this.setState({announcements:this.state.announcements.filter((announcement=>announcementKey!==announcement.key))})}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(AnnouncementContext.Provider,{value:this.state},this.props.children)}}function withAnnouncement(WrappedComponent){return class WithAnnouncement extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(AnnouncementContext.Consumer,null,(announcementContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{announcementContext,...this.props})))}}}AnnouncementContextProvider.displayName="AnnouncementContextProvider",AnnouncementContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().any},AnnouncementContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"}],displayName:"AnnouncementContextProvider",props:{children:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/ContextualMenuContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>ContextualMenuContextProvider,t6:()=>withContextualMenu});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const ContextualMenuContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({ContextualMenu:null,show:()=>{},hide:()=>{}});class ContextualMenuContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{contextualMenus:[],show:(ContextualMenuComponent,componentProps)=>this.setState({contextualMenus:[...this.state.contextualMenus,{ContextualMenuComponent,componentProps}]}),hide:index=>this.setState({contextualMenus:this.state.contextualMenus.filter(((_,contextualMenuIndex)=>contextualMenuIndex!==index))})}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContextualMenuContext.Provider,{value:this.state},this.props.children)}}function withContextualMenu(WrappedComponent){return class WithContextualMenu extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContextualMenuContext.Consumer,null,(contextualMenuContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{contextualMenuContext,...this.props})))}}}ContextualMenuContextProvider.displayName="ContextualMenuContextProvider",ContextualMenuContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any},ContextualMenuContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"}],displayName:"ContextualMenuContextProvider",props:{children:{description:"",type:{name:"any"},required:!1}}}},"./src/shared/context/ResourceTypesLocalStorageContext/ResourceTypesLocalStorageContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__,KH:()=>withResourceTypesLocalStorage});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__),_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_models_entity_resourceType_resourceTypesCollection__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypesCollection.js");const ResourceTypesLocalStorageContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({get:()=>{},resourceTypes:null,updateLocalStorage:()=>{}});class ResourceTypesLocalStorageContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.runningLocalStorageUpdatePromise=null,this.initEventHandlers()}get defaultState(){return{get:this.get.bind(this),resourceTypes:null,updateLocalStorage:this.updateLocalStorage.bind(this)}}initEventHandlers(){this.handleStorageChange=this.handleStorageChange.bind(this)}componentDidMount(){this.props.context.storage.onChanged.addListener(this.handleStorageChange)}componentWillUnmount(){this.props.context.storage.onChanged.removeListener(this.handleStorageChange)}handleStorageChange(changes){changes.resourceTypes&&this.set(changes.resourceTypes.newValue)}set(resourceTypes){const resourceTypesCollection=new _models_entity_resourceType_resourceTypesCollection__WEBPACK_IMPORTED_MODULE_2__.A(resourceTypes);this.setState({resourceTypes:resourceTypesCollection})}get(){return null===this.state.resourceTypes?(this.loadLocalStorage(),null):this.state.resourceTypes}async loadLocalStorage(){const storageData=await this.props.context.storage.local.get(["resourceTypes"]);storageData.resourceTypes?this.set(storageData.resourceTypes):this.updateLocalStorage()}async updateLocalStorage(){null===this.runningLocalStorageUpdatePromise?(this.runningLocalStorageUpdatePromise=this.props.context.port.request("passbolt.resource-type.get-or-find-all"),await this.runningLocalStorageUpdatePromise,this.runningLocalStorageUpdatePromise=null):await this.runningLocalStorageUpdatePromise}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResourceTypesLocalStorageContext.Provider,{value:this.state},this.props.children)}}ResourceTypesLocalStorageContextProvider.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_3___default().any,children:prop_types__WEBPACK_IMPORTED_MODULE_3___default().any};const __WEBPACK_DEFAULT_EXPORT__=(0,_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__.L)(ResourceTypesLocalStorageContextProvider);function withResourceTypesLocalStorage(WrappedComponent){return class withResourceTypesLocalStorage extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResourceTypesLocalStorageContext.Consumer,null,(resourceTypesLocalStorageContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{resourceTypesLocalStorageContext,resourceTypes:resourceTypesLocalStorageContext.get(),...this.props})))}}}ResourceTypesLocalStorageContextProvider.__docgenInfo={description:"The resource types local storage context provider",methods:[{name:"defaultState",docblock:"Returns the default component state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Returns the default component state"},{name:"initEventHandlers",docblock:"Initialize the component event handlers",modifiers:[],params:[],returns:null,description:"Initialize the component event handlers"},{name:"handleStorageChange",docblock:"Handles update of the resource types in the local storage.",modifiers:[],params:[{name:"changes",optional:!1}],returns:null,description:"Handles update of the resource types in the local storage."},{name:"set",docblock:"Set resourceTypes.\n@param {Array<Object>} resourceTypes The resource types to set.\n@private",modifiers:[],params:[{name:"resourceTypes",description:"The resource types to set.",type:{name:"Array",elements:[{name:"Object"}]},optional:!1}],returns:null,description:"Set resourceTypes."},{name:"get",docblock:"Get the resource types from the local storage and/or init them if not the case already.\n@returns {ResourceTypesCollection|null}",modifiers:[],params:[],returns:{type:{name:"union",elements:[{name:"ResourceTypesCollection"}]}},description:"Get the resource types from the local storage and/or init them if not the case already."},{name:"loadLocalStorage",docblock:"Load the resource types from the local storage if it is available.\nIf the local storage is not yet initialised, then it asks for its initialisation.\n@returns {Promise<void>}\n@private",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Load the resource types from the local storage if it is available.\nIf the local storage is not yet initialised, then it asks for its initialisation."},{name:"updateLocalStorage",docblock:"Forces the update of the resource types in the local storage.\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Forces the update of the resource types in the local storage."}],displayName:"ResourceTypesLocalStorageContextProvider",props:{context:{description:"",type:{name:"any"},required:!1},children:{description:"",type:{name:"any"},required:!1}}}}}]);