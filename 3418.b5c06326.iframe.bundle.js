/*! For license information please see 3418.b5c06326.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[3418],{"./src/img/svg/arrow_down.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgArrowDown(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:11,height:12,fill:"none",viewBox:"0 0 11 12"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M5.42 1.335v9.33M10.08 6.005l-4.66 4.66-4.67-4.66"})))}},"./src/img/svg/arrow_up.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgArrowUp(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:11,height:12,fill:"none",viewBox:"0 0 11 12"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M5.42 1.335v9.33M10.08 6.005l-4.66-4.67-4.67 4.67"})))}},"./src/img/svg/circle_off.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgCircleOff(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:64,height:64,fill:"none",viewBox:"0 0 64 64"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"m5.333 5.333 53.334 53.333M22.267 7.173A26.667 26.667 0 0 1 56.8 41.733M50.88 50.88a26.7 26.7 0 1 1-37.76-37.76"})))}},"./src/img/svg/edit.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgEdit(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:18,height:18,fill:"none",viewBox:"0 0 18 18"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M9 2.25H3.75a1.5 1.5 0 0 0-1.5 1.5v10.5a1.5 1.5 0 0 0 1.5 1.5h10.5a1.5 1.5 0 0 0 1.5-1.5V9"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{stroke:"var(--icon-color)",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M13.781 1.969a1.591 1.591 0 0 1 2.25 2.25L9 11.25 6 12l.75-3z"})))}},"./src/react-extension/components/Common/ContextualMenu/ContextualMenuWrapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class ContextualMenuWrapper extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.createRefs(),this.bindCallbacks()}get defaultState(){return{positionY:this.props.top}}bindCallbacks(){this.handleDocumentClickEvent=this.handleDocumentClickEvent.bind(this),this.handleDocumentContextualMenuEvent=this.handleDocumentContextualMenuEvent.bind(this),this.handleDocumentDragStartEvent=this.handleDocumentDragStartEvent.bind(this),this.handleDocumentScrollEvent=this.handleDocumentScrollEvent.bind(this),this.isWindowExceeded=this.isWindowExceeded.bind(this)}createRefs(){this.elementRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef()}componentDidMount(){this.adjustPositionY(),document.addEventListener("click",this.handleDocumentClickEvent,{capture:!0}),document.addEventListener("contextmenu",this.handleDocumentContextualMenuEvent,{capture:!0}),document.addEventListener("dragstart",this.handleDocumentDragStartEvent,{capture:!0}),document.addEventListener("scroll",this.handleDocumentScrollEvent,{capture:!0})}componentWillUnmount(){document.removeEventListener("click",this.handleDocumentClickEvent,{capture:!0}),document.removeEventListener("contextmenu",this.handleDocumentContextualMenuEvent,{capture:!0}),document.removeEventListener("dragstart",this.handleDocumentDragStartEvent,{capture:!0}),document.removeEventListener("scroll",this.handleDocumentScrollEvent,{capture:!0})}handleDocumentScrollEvent(){this.props.hide()}handleDocumentClickEvent(event){this.elementRef.current.contains(event.target)||(event.stopPropagation(),this.props.hide())}handleDocumentContextualMenuEvent(event){this.elementRef.current.contains(event.target)||this.props.hide()}handleDocumentDragStartEvent(){this.props.hide()}isWindowExceeded(){const contextMenuHeight=this.elementRef.current?.offsetHeight;return this.props.top+contextMenuHeight>window.innerHeight}adjustPositionY(){this.isWindowExceeded()&&(this.setState({positionY:window.innerHeight-this.elementRef.current.offsetHeight}),this.elementRef.current.style.zIndex=1e3)}getStyle(){return{position:"absolute",display:"block",left:this.props.left,top:this.state.positionY}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{ref:this.elementRef,className:`contextual-menu ${this.props.className} ${this.isWindowExceeded()?"floating":""}`,style:this.getStyle()},this.props.children)}}ContextualMenuWrapper.defaultProps={className:""},ContextualMenuWrapper.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any,left:prop_types__WEBPACK_IMPORTED_MODULE_1___default().number,hide:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func,top:prop_types__WEBPACK_IMPORTED_MODULE_1___default().number,className:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string};const __WEBPACK_DEFAULT_EXPORT__=ContextualMenuWrapper;ContextualMenuWrapper.__docgenInfo={description:"The ContextualMenuWrapper has for aim to handle common contextual menus common behavior.\nYou can use it in your component as following\n\n<ContextualMenuWrapper\n  hide={callback_func} // Function to call when the contextual menu request to close itself\n  left={100} // Left position in absolute to display the contextual menu\n  top={100}> // Top position in absolute to display the contextual menu\n  <div>\n    Your contextual menu content\n  </div>\n</ContextualMenuWrapper>",methods:[{name:"defaultState",docblock:null,modifiers:["get"],params:[],returns:null},{name:"bindCallbacks",docblock:"Bind class methods callback",modifiers:[],params:[],returns:null,description:"Bind class methods callback"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"handleDocumentScrollEvent",docblock:"Handle scroll event on document. Hide the component if any.",modifiers:[],params:[],returns:null,description:"Handle scroll event on document. Hide the component if any."},{name:"handleDocumentClickEvent",docblock:"Handle click events on document. Hide the component if the click occurred outside of the component.\n@param {ReactEvent} event The event",modifiers:[],params:[{name:"event",description:"The event",type:{name:"ReactEvent"},optional:!1}],returns:null,description:"Handle click events on document. Hide the component if the click occurred outside of the component."},{name:"handleDocumentContextualMenuEvent",docblock:"Handle contextual menu events on document. Hide the component if the click occurred outside of the component.\nDon't hide it if a contextual menu event occurred on the FoldersList component, this component props will be\nupdated with new datA.\n@param {ReactEvent} event The event",modifiers:[],params:[{name:"event",description:"The event",type:{name:"ReactEvent"},optional:!1}],returns:null,description:"Handle contextual menu events on document. Hide the component if the click occurred outside of the component.\nDon't hide it if a contextual menu event occurred on the FoldersList component, this component props will be\nupdated with new datA."},{name:"handleDocumentDragStartEvent",docblock:"Handle drag start event on document. Hide the component if any.",modifiers:[],params:[],returns:null,description:"Handle drag start event on document. Hide the component if any."},{name:"isWindowExceeded",docblock:"Returns true if the height of the contextual menu given its position exceeds the window.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the height of the contextual menu given its position exceeds the window."},{name:"adjustPositionY",docblock:"Adjust the vertical position of the contextual menuu if its height at its position execeeds the window.",modifiers:[],params:[],returns:null,description:"Adjust the vertical position of the contextual menuu if its height at its position execeeds the window."},{name:"getStyle",docblock:"Get the contextual menu style.",modifiers:[],params:[],returns:null,description:"Get the contextual menu style."}],displayName:"ContextualMenuWrapper",props:{className:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"any"},required:!1},left:{description:"",type:{name:"number"},required:!1},hide:{description:"",type:{name:"func"},required:!1},top:{description:"",type:{name:"number"},required:!1}}}},"./src/react-extension/contexts/ContextualMenuContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>ContextualMenuContextProvider,t6:()=>withContextualMenu,wp:()=>ContextualMenuContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const ContextualMenuContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({ContextualMenu:null,show:()=>{},hide:()=>{}});class ContextualMenuContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState}get defaultState(){return{contextualMenus:[],show:(ContextualMenuComponent,componentProps)=>this.setState({contextualMenus:[...this.state.contextualMenus,{ContextualMenuComponent,componentProps}]}),hide:index=>this.setState({contextualMenus:this.state.contextualMenus.filter(((_,contextualMenuIndex)=>contextualMenuIndex!==index))})}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContextualMenuContext.Provider,{value:this.state},this.props.children)}}function withContextualMenu(WrappedComponent){return class WithContextualMenu extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContextualMenuContext.Consumer,null,(contextualMenuContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{contextualMenuContext,...this.props})))}}}ContextualMenuContextProvider.displayName="ContextualMenuContextProvider",ContextualMenuContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any},ContextualMenuContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"}],displayName:"ContextualMenuContextProvider",props:{children:{description:"",type:{name:"any"},required:!1}}}},"./src/shared/components/Table/CellChecbox.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class CellCheckbox extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(event,this.value)}get value(){return this.props.value}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input checkbox"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"checkbox",className:"for-grid",id:`checkbox_multiple_select_checkbox_${this.value.id}`,checked:this.props.checked,readOnly:!0,onClick:this.handleClick}))}}CellCheckbox.propTypes={value:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object.isRequired,checked:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool.isRequired,onClick:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CellCheckbox);CellCheckbox.__docgenInfo={description:"This component represents a table cell button",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellCheckbox",props:{value:{description:"",type:{name:"object"},required:!0},checked:{description:"",type:{name:"bool"},required:!0},onClick:{description:"",type:{name:"func"},required:!1}}}},"./src/shared/components/Table/CellDate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),_utils_dateUtils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/utils/dateUtils.js");class CellDate extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){if(!this.props.value)return null;const displayedDate=(0,_utils_dateUtils__WEBPACK_IMPORTED_MODULE_1__.kD)(this.props.value,this.props.t,this.props.locale);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{title:this.props.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,displayedDate))}}CellDate.propTypes={value:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,locale:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,t:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CellDate);CellDate.__docgenInfo={description:"This component represents a table date cell",methods:[],displayName:"CellDate",props:{value:{description:"",type:{name:"string"},required:!1},locale:{description:"",type:{name:"string"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/shared/components/Table/CellHeaderCheckbox.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class CellHeaderCheckbox extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"input checkbox"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"checkbox",className:"for-grid",name:"select all",disabled:this.props.disabled,checked:this.props.checked,onChange:this.props.onChange}))}}CellHeaderCheckbox.propTypes={checked:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool.isRequired,onChange:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func,disabled:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool};const __WEBPACK_DEFAULT_EXPORT__=CellHeaderCheckbox;CellHeaderCheckbox.__docgenInfo={description:"This component represents a cell header checkbox",methods:[],displayName:"CellHeaderCheckbox",props:{checked:{description:"",type:{name:"bool"},required:!0},onChange:{description:"",type:{name:"func"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1}}}},"./src/shared/components/Table/CellHeaderDefault.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class CellHeaderDefault extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"cell-header-text"},this.props.label)}}CellHeaderDefault.propTypes={label:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired};const __WEBPACK_DEFAULT_EXPORT__=(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CellHeaderDefault);CellHeaderDefault.__docgenInfo={description:"This component represents a cell header default",methods:[],displayName:"CellHeaderDefault",props:{label:{description:"",type:{name:"string"},required:!0}}}},"./src/shared/components/Table/GridTable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Table_GridTable});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react_list=__webpack_require__("./node_modules/react-list/react-list.js"),react_list_default=__webpack_require__.n(react_list);class CellDefault extends react.Component{get value(){return this.props.value}render(){return react.createElement("div",{title:this.value},react.createElement("span",null,this.value))}}CellDefault.propTypes={value:prop_types_default().string.isRequired};const Table_CellDefault=(0,react.memo)(CellDefault);CellDefault.__docgenInfo={description:"This component represents a table cell default",methods:[{name:"value",docblock:"Get the value\n@return {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the value"}],displayName:"CellDefault",props:{value:{description:"",type:{name:"string"},required:!0}}};var ColumnModel=__webpack_require__("./src/shared/models/column/ColumnModel.js");class CellWrapper extends react.Component{get column(){return this.props.column}get value(){return this.props.value}get propsCell(){const props=this.column.cellRenderer?.props||{};return props.value=this.value,"checkbox"===this.column.id&&(props.checked=this.props.isSelected),props}get columnWidthStyle(){return this.column?.width?{width:`${this.column.width}px`}:null}render(){const Cell=this.column.cellRenderer?.component||Table_CellDefault;return react.createElement("td",{className:`cell-${this.column.id}`,style:this.columnWidthStyle},react.createElement(Cell,this.propsCell))}}CellWrapper.propTypes={value:prop_types_default().any,column:prop_types_default().instanceOf(ColumnModel.Ay).isRequired,isSelected:prop_types_default().bool};const Table_CellWrapper=CellWrapper;CellWrapper.__docgenInfo={description:"This component represents a table cell wrapper",methods:[{name:"column",docblock:"Get column\n@return {ColumnModel}",modifiers:["get"],params:[],returns:{type:{name:"ColumnModel"}},description:"Get column"},{name:"value",docblock:"Get value\n@return {*|string}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"mixed"},{name:"string"}]}},description:"Get value"},{name:"propsCell",docblock:"Get props for custom cell\n@return {{checked: boolean, value: (*|string)}|{value: (*|string)}}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get props for custom cell"},{name:"columnWidthStyle",docblock:"Get the column width style\n@return {{width: string} | null}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get the column width style"}],displayName:"CellWrapper",props:{value:{description:"",type:{name:"any"},required:!1},column:{description:"",type:{name:"instanceOf",value:"ColumnModel"},required:!0},isSelected:{description:"",type:{name:"bool"},required:!1}}};var rowsSettingEntity=__webpack_require__("./src/shared/models/entity/rowsSetting/rowsSettingEntity.js");const TableContext=react.createContext({columns:[],tableWidth:null,tableviewWidth:null,isDraggingColumn:!1,isSelectAllChecked:()=>{},isRowSelected:()=>{},isSortedColumn:()=>{},isSortedAsc:()=>{},canMoveColumn:()=>{},onSortChange:()=>{},onResizeColumn:()=>{},onReorderColumns:()=>{},onStartDraggingColumn:()=>{},onEndDraggingColumn:()=>{},onChangeColumns:()=>{}});class TableContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.createRefs()}get defaultState(){return{columns:this.sanitizeColumnsFromProps,tableWidth:null,tableviewWidth:null,isDraggingColumn:!1,isSelectAllChecked:this.isSelectAllChecked.bind(this),isRowSelected:this.isRowSelected.bind(this),isSortedColumn:this.isSortedColumn.bind(this),isSortedAsc:this.isSortedAsc.bind(this),canMoveColumn:this.canMoveColumn.bind(this),onSortChange:this.handleSortByColumnClick.bind(this),onResizeColumn:this.handleResizeColumn.bind(this),onReorderColumns:this.handleReorderColumns.bind(this),onStartDraggingColumn:this.handleStartDraggingColumns.bind(this),onEndDraggingColumn:this.handleEndDraggingColumns.bind(this),onChangeColumns:this.handleChangeColumns.bind(this)}}createRefs(){this.tableviewRef=react.createRef()}componentDidMount(){this.prepareTableColumns(this.state.columns)}isNotDefaultColumn(columns){return columns.some((column=>column.width!==column.defaultWidth))}get sanitizeColumnsFromProps(){const columns=[...this.props.columns];return columns.some((column=>column.width<0))&&columns.forEach((column=>column.width=column.defaultWidth)),columns}prepareTableColumns(){const tableWidth=this.getTableWidth(this.state.columns);if(this.isNotDefaultColumn(this.state.columns)){const tableviewWidth=this.tableviewRef.current.clientWidth;this.setState({tableWidth,tableviewWidth})}else this.setColumnsWidthFromActualWidth(this.state.columns)}componentDidUpdate(prevProps){if(prevProps.columns.length>this.props.columns.length)this.removeColumn();else if(prevProps.columns.length<this.props.columns.length)this.addColumns();else if(prevProps.columns===this.props.columns||this.isNotDefaultColumn(this.state.columns)){if(prevProps.columns!==this.props.columns){const columns=this.props.columns;this.setState({columns},(()=>this.recomputeTableWidth(columns)))}}else this.setColumnsWidthFromActualWidth(this.state.columns)}removeColumn(){const columns=this.state.columns.filter((column=>this.props.columns.some((defaultColumn=>defaultColumn.id===column.id))));this.setState({columns},(()=>this.recomputeTableWidth(columns)))}recomputeTableWidth(columns){this.setState({tableviewWidth:this.tableviewRef.current.clientWidth,tableWidth:this.getTableWidth(columns)})}addColumns(){const columns=[...this.state.columns],columnIndexToAdd=[];this.props.columns.forEach(((column,index)=>{this.state.columns.every((item=>column.id!==item.id))&&columnIndexToAdd.push(index)})),columnIndexToAdd.forEach((index=>{columns.splice(index,0,this.props.columns[index])})),this.setState({columns},(()=>this.recomputeTableWidth(columns)))}async handleSortByColumnClick(propertyName){this.props.onSortChange?.(propertyName)}handleReorderColumns(fromIndex,toIndex){const columns=[...this.state.columns],column=columns.splice(fromIndex,1)[0];columns.splice(toIndex,0,column),this.setState({columns})}handleResizeColumn(index,width){const columns=[...this.state.columns];columns[index].width=width;const tableWidth=this.getTableWidth(columns);this.setState({columns,tableWidth})}handleChangeColumns(){const columns=this.state.columns.map(((column,index)=>({id:column.id,label:column.label,width:column.width,position:index})));this.props.onChange(columns)}getTableWidth(columns){return columns.filter((c=>!c.excludeFromWidthComputation)).reduce(((sum,col)=>sum+col.width),0)+this.getColumnsPaddingWidth(columns)}getColumnWidthNoResizable(columns){return columns.filter((c=>!c.excludeFromWidthComputation&&!c.resizable)).reduce(((sum,col)=>sum+parseFloat(col.width)),0)}getColumnsPaddingWidth(columns){return 8*columns.filter((c=>!c.excludeFromWidthComputation)).length+20}setColumnsWidthFromActualWidth(columns){const actualWidth=this.getTableWidth(columns),tableviewWidth=this.tableviewRef.current.clientWidth,fixedWidth=this.getColumnWidthNoResizable(columns)+this.getColumnsPaddingWidth(columns);if(actualWidth>fixedWidth&&tableviewWidth>fixedWidth){const ratio=(tableviewWidth-fixedWidth)/(actualWidth-fixedWidth);columns.forEach((column=>{column.resizable&&(column.width=Math.floor(column.width*ratio))}));const tableWidth=this.getTableWidth(columns);this.setState({columns,tableWidth,tableviewWidth})}}isRowSelected(rowId){return this.props.selectedRowsIds?.some((selectedRow=>rowId===selectedRow))}isSelectAllChecked(){return this.props.rows.length===this.props.selectedRowsIds?.length}isSortedColumn(columnName){return this.props.sorter.propertyName===columnName}isSortedAsc(){return this.props.sorter.asc}canMoveColumn(columnIndex,moveX){const columnMovable=column=>column.draggable,canBeMovedBefore=columnIndex>this.state.columns.findIndex(columnMovable)&&moveX<0,canBeMovedAfter=columnIndex<this.state.columns.reduce(((lastColumnIndex,column,index)=>columnMovable(column)?index:lastColumnIndex),-1)&&moveX>0;return canBeMovedBefore||canBeMovedAfter}handleStartDraggingColumns(){this.setState({isDraggingColumn:!0})}handleEndDraggingColumns(){this.setState({isDraggingColumn:!1})}render(){return react.createElement(TableContext.Provider,{value:this.state},react.createElement("div",{ref:this.tableviewRef,className:`tableview ${this.props.rowsSetting?.height?this.props.rowsSetting.height:rowsSettingEntity.a4}`},this.props.children))}}function withTable(WrappedComponent){return class withTable extends react.Component{render(){return react.createElement(TableContext.Consumer,null,(tableContext=>react.createElement(WrappedComponent,{tableContext,...this.props})))}}}TableContextProvider.propTypes={columns:prop_types_default().array.isRequired,rows:prop_types_default().array.isRequired,rowsSetting:prop_types_default().object,sorter:prop_types_default().object,selectedRowsIds:prop_types_default().array,onSortChange:prop_types_default().func,onChange:prop_types_default().func,children:prop_types_default().any},TableContextProvider.__docgenInfo={description:"This component represents a  table",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"isNotDefaultColumn",docblock:"Returns true if there is at least 1 column width that is not set with the default width.\n@param {array} columns\n@returns {boolean}",modifiers:[],params:[{name:"columns",type:{name:"array"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if there is at least 1 column width that is not set with the default width."},{name:"sanitizeColumnsFromProps",docblock:"Sanitize columns from props to prevent negative width due to wrong calculation\nIf one column width is negative, fallback to default width for all columns\n@returns {*[]}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"mixed"}]}},description:"Sanitize columns from props to prevent negative width due to wrong calculation\nIf one column width is negative, fallback to default width for all columns"},{name:"prepareTableColumns",docblock:"Prepare table columns",modifiers:[],params:[],returns:null,description:"Prepare table columns"},{name:"removeColumn",docblock:"Remove a column",modifiers:[],params:[],returns:null,description:"Remove a column"},{name:"recomputeTableWidth",docblock:"Recompute the table width and set the state with the computed values.\n@param {*} columns",modifiers:[],params:[{name:"columns",type:{name:"mixed"},optional:!1}],returns:null,description:"Recompute the table width and set the state with the computed values."},{name:"addColumns",docblock:"Add columns",modifiers:[],params:[],returns:null,description:"Add columns"},{name:"handleSortByColumnClick",docblock:"Handle the change of sorter ( on property or direction )\n@param propertyName The name of the property to sort on",modifiers:["async"],params:[{name:"propertyName",description:"The name of the property to sort on",optional:!1}],returns:null,description:"Handle the change of sorter ( on property or direction )"},{name:"handleReorderColumns",docblock:"Handle reorder columns\n@param fromIndex\n@param toIndex",modifiers:[],params:[{name:"fromIndex",optional:!1},{name:"toIndex",optional:!1}],returns:null,description:"Handle reorder columns"},{name:"handleResizeColumn",docblock:"Handle resize column\n@param {number} index The index of the column to resize\n@param {number} width The width to apply\n@return {Promise<void>}",modifiers:[],params:[{name:"index",description:"The index of the column to resize",type:{name:"number"},optional:!1},{name:"width",description:"The width to apply",type:{name:"number"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle resize column"},{name:"handleChangeColumns",docblock:"Handle change columns",modifiers:[],params:[],returns:null,description:"Handle change columns"},{name:"getTableWidth",docblock:"Get the total width for the table in order to have only one column resizing\n@param {array} columns\n@return {number}",modifiers:[],params:[{name:"columns",type:{name:"array"},optional:!1}],returns:{type:{name:"number"}},description:"Get the total width for the table in order to have only one column resizing"},{name:"getColumnWidthNoResizable",docblock:"Get the sum of columns widths no resizable from default\n@param {array} columns\n@return {number}",modifiers:[],params:[{name:"columns",type:{name:"array"},optional:!1}],returns:{type:{name:"number"}},description:"Get the sum of columns widths no resizable from default"},{name:"getColumnsPaddingWidth",docblock:"Get the columns padding widths\n@param {array} columns\n@return {number}",modifiers:[],params:[{name:"columns",type:{name:"array"},optional:!1}],returns:{type:{name:"number"}},description:"Get the columns padding widths"},{name:"setColumnsWidthFromActualWidth",docblock:"Set the columns width based on actual width of the tableview width to maintain the same proportionality\n@param columns",modifiers:[],params:[{name:"columns",optional:!1}],returns:null,description:"Set the columns width based on actual width of the tableview width to maintain the same proportionality"},{name:"isRowSelected",docblock:"Returns true if the given item is selected\n@param rowId A row id",modifiers:[],params:[{name:"rowId",description:"A row id",optional:!1}],returns:null,description:"Returns true if the given item is selected"},{name:"isSelectAllChecked",docblock:"Is select all checked",modifiers:[],params:[],returns:null,description:"Is select all checked"},{name:"isSortedColumn",docblock:"Check if the grid is sorted for a given column\n@param columnName The column name",modifiers:[],params:[{name:"columnName",description:"The column name",optional:!1}],returns:null,description:"Check if the grid is sorted for a given column"},{name:"isSortedAsc",docblock:"Check if the sort is ascendant.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the sort is ascendant."},{name:"canMoveColumn",docblock:"If column can be moved\n@param columnIndex\n@param moveX\n@return {boolean}",modifiers:[],params:[{name:"columnIndex",optional:!1},{name:"moveX",optional:!1}],returns:{type:{name:"boolean"}},description:"If column can be moved"},{name:"handleStartDraggingColumns",docblock:"On start dragging column",modifiers:[],params:[],returns:null,description:"On start dragging column"},{name:"handleEndDraggingColumns",docblock:"On end dragging column",modifiers:[],params:[],returns:null,description:"On end dragging column"}],displayName:"TableContextProvider",props:{columns:{description:"",type:{name:"array"},required:!0},rows:{description:"",type:{name:"array"},required:!0},rowsSetting:{description:"",type:{name:"object"},required:!1},sorter:{description:"",type:{name:"object"},required:!1},selectedRowsIds:{description:"",type:{name:"array"},required:!1},onSortChange:{description:"",type:{name:"func"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},children:{description:"",type:{name:"any"},required:!1}}};var getPropValue=__webpack_require__("./src/react-extension/lib/Object/getPropValue.js");class Row extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this),this.handleContextMenu=this.handleContextMenu.bind(this),this.handleDragStart=this.handleDragStart.bind(this),this.handleDragEnd=this.handleDragEnd.bind(this)}handleClick(event){event.preventDefault(),event.stopPropagation(),this.props.onClick(event,this.item)}handleContextMenu(event){event.preventDefault(),this.props.onContextMenu(event,this.item)}handleDragStart(event){this.props.onDragStart(event,this.item,this.isItemSelected)}handleDragEnd(event){this.props.onDragEnd(event)}get columns(){return this.props.tableContext.columns}get item(){return this.props.item}get isItemSelected(){return this.props.tableContext.isRowSelected(this.item.id)}getColumnValue(column,item){return column.getValue?column.getValue(item):(0,getPropValue.A)(item,column.field)}render(){const isSelected=this.isItemSelected;return react.createElement("tr",{id:this.item.id,draggable:Boolean(this.props.onDragStart),className:`${this.props.className} ${isSelected?"selected":""}`,onClick:this.handleClick,onContextMenu:this.handleContextMenu,onDragStart:this.handleDragStart,onDragEnd:this.handleDragEnd},this.columns.map((column=>react.createElement(Table_CellWrapper,{key:column.id,column,isSelected,value:this.getColumnValue(column,this.item)}))))}}Row.propTypes={tableContext:prop_types_default().any,item:prop_types_default().object.isRequired,className:prop_types_default().string,onClick:prop_types_default().func,onContextMenu:prop_types_default().func,onDragStart:prop_types_default().func,onDragEnd:prop_types_default().func};const Table_Row=withTable(Row);Row.__docgenInfo={description:"This component represents a table row",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"handleClick",docblock:"Handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle click"},{name:"handleContextMenu",docblock:"Handle context menu\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle context menu"},{name:"handleDragStart",docblock:"Handle drag start\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle drag start"},{name:"handleDragEnd",docblock:"Handle drag end\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle drag end"},{name:"columns",docblock:"Get column\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get column"},{name:"item",docblock:"Get item\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get item"},{name:"isItemSelected",docblock:"Is item selected\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Is item selected"},{name:"getColumnValue",docblock:"Returns the column value to pass to the CellWrapper.\nIt uses the method `getValue` of the column if it exists.\nOtherwise use the item's field value associated to the column.\n@param {Object} column\n@param {Object} item\n@returns {any}",modifiers:[],params:[{name:"column",type:{name:"Object"},optional:!1},{name:"item",type:{name:"Object"},optional:!1}],returns:{type:{name:"any"}},description:"Returns the column value to pass to the CellWrapper.\nIt uses the method `getValue` of the column if it exists.\nOtherwise use the item's field value associated to the column."}],displayName:"Row",props:{tableContext:{description:"",type:{name:"any"},required:!1},item:{description:"",type:{name:"object"},required:!0},className:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1},onContextMenu:{description:"",type:{name:"func"},required:!1},onDragStart:{description:"",type:{name:"func"},required:!1},onDragEnd:{description:"",type:{name:"func"},required:!1}}};var CellHeaderDefault=__webpack_require__("./src/shared/components/Table/CellHeaderDefault.js"),arrow_down=__webpack_require__("./src/img/svg/arrow_down.svg"),arrow_up=__webpack_require__("./src/img/svg/arrow_up.svg");class CellHeaderWrapper extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks(),this.createRefs()}get defaultState(){return{mouseXPosition:0,move:0,columnToResizeWidth:0,resizing:!1}}bindCallbacks(){this.handleSortByColumnClick=this.handleSortByColumnClick.bind(this),this.handleReorderColumnMouseMoveEvent=this.handleReorderColumnMouseMoveEvent.bind(this),this.handleReorderColumnMouseUpEvent=this.handleReorderColumnMouseUpEvent.bind(this),this.handleResizeColumnMouseDown=this.handleResizeColumnMouseDown.bind(this),this.handleResizeColumnMouseMoveEvent=this.handleResizeColumnMouseMoveEvent.bind(this),this.handleResizeColumnMouseUpEvent=this.handleResizeColumnMouseUpEvent.bind(this),this.handleResizeDefaultByColumnDoubleClick=this.handleResizeDefaultByColumnDoubleClick.bind(this),this.startDragging=this.startDragging.bind(this)}createRefs(){this.columnRef=react.createRef()}handleReorderColumnMouseDownEvent(event){const mouseXPosition=event.clientX;this.setState({mouseXPosition}),this.updatePreviousAndNextColumnWidth(this.columnRef.current.previousSibling?.offsetWidth,this.columnRef.current.nextSibling?.offsetWidth),this.columnRef.current.addEventListener("mousemove",this.startDragging,{once:!0}),document.addEventListener("mousemove",this.handleReorderColumnMouseMoveEvent,{capture:!0}),document.addEventListener("mouseup",this.handleReorderColumnMouseUpEvent,{capture:!0,once:!0})}startDragging(){this.props.tableContext.onStartDraggingColumn()}handleReorderColumnMouseMoveEvent(event){const dx=event.clientX-this.state.mouseXPosition-this.state.move;this.props.tableContext.canMoveColumn(this.props.index,dx)?(this.columnRef.current.style.translate=`${dx}px`,this.previousColumnWidth&&dx<-this.previousColumnWidth/2?(this.props.tableContext.onReorderColumns(this.props.index,this.props.index-1),this.updateColumnPosition(-this.previousColumnWidth,dx),this.updatePreviousAndNextColumnWidth(this.columnRef.current.previousSibling?.offsetWidth,this.previousColumnWidth)):this.nextColumnWidth&&dx>this.nextColumnWidth/2&&(this.props.tableContext.onReorderColumns(this.props.index,this.props.index+1),this.updateColumnPosition(this.nextColumnWidth,dx),this.updatePreviousAndNextColumnWidth(this.nextColumnWidth,this.columnRef.current.nextSibling?.offsetWidth))):this.columnRef.current.style.translate="0px"}handleReorderColumnMouseUpEvent(){this.columnRef.current.style.translate=null,this.updatePreviousAndNextColumnWidth(null,null),this.columnRef.current.removeEventListener("mousemove",this.startDragging),document.removeEventListener("mousemove",this.handleReorderColumnMouseMoveEvent,{capture:!0}),this.props.tableContext.onEndDraggingColumn(),this.setState({mouseXPosition:0,move:0}),this.handleChangeColumn()}handleChangeColumn(){this.props.tableContext.onChangeColumns()}handleSortByColumnClick(event){event.stopPropagation(),this.props.tableContext.onSortChange(this.column.field)}updateColumnPosition(columnPermutedWidth,dx){const move=this.state.move+columnPermutedWidth;this.columnRef.current.style.translate=dx-columnPermutedWidth+"px",this.setState({move})}updatePreviousAndNextColumnWidth(previousColumnWidth,nextColumnWidth){this.previousColumnWidth=previousColumnWidth,this.nextColumnWidth=nextColumnWidth}async handleResizeColumnMouseDown(event){event.stopPropagation();const columnToResizeWidth=this.column.width,mouseXPosition=event.clientX;this.setState({resizing:!0,mouseXPosition,columnToResizeWidth}),document.addEventListener("mousemove",this.handleResizeColumnMouseMoveEvent,{capture:!0}),document.addEventListener("mouseup",this.handleResizeColumnMouseUpEvent,{capture:!0,once:!0})}handleResizeColumnMouseMoveEvent(event){const dx=event.clientX-this.state.mouseXPosition,width=this.state.columnToResizeWidth+dx>50?this.state.columnToResizeWidth+dx:50;this.props.tableContext.onResizeColumn(this.props.index,width)}handleResizeColumnMouseUpEvent(){document.removeEventListener("mousemove",this.handleResizeColumnMouseMoveEvent,{capture:!0}),this.setState({resizing:null,mouseXPosition:0,columnToResizeWidth:0}),this.handleChangeColumn()}handleResizeDefaultByColumnDoubleClick(){this.props.tableContext.onResizeColumn(this.props.index,this.column.defaultWidth),this.handleChangeColumn()}isSortedColumn(columnName){return this.props.tableContext.isSortedColumn(columnName)}isSortedAsc(){return this.props.tableContext.isSortedAsc()}get column(){return this.props.column}get propsCellHeader(){const props=this.column.headerCellRenderer?.props||{};return"checkbox"===this.column.id?props.checked=this.props.tableContext.isSelectAllChecked():props.label=props.label||this.column.label,props}get columnWidthStyle(){return this.column?.width?{width:`${this.column.width}px`}:null}render(){const CellHeader=this.column.headerCellRenderer?.component||CellHeaderDefault.A;return react.createElement("th",{key:this.column.id,className:`cell-${this.column.id} selections ${this.column.draggable?"draggable":""} ${this.column.sortable?"sortable":""}`,style:this.columnWidthStyle,ref:this.columnRef,onMouseDown:event=>this.column.draggable?this.handleReorderColumnMouseDownEvent(event):void 0},!this.column.sortable&&react.createElement("div",{className:"cell-header"},react.createElement(CellHeader,this.propsCellHeader)),this.column.sortable&&react.createElement("button",{className:"no-border",type:"button",onClick:this.handleSortByColumnClick},react.createElement("div",{className:"cell-header"},react.createElement(CellHeader,this.propsCellHeader),react.createElement("span",{className:"cell-header-icon-sort"},this.isSortedColumn(this.column.field)&&this.isSortedAsc()&&react.createElement(arrow_down.A,null),this.isSortedColumn(this.column.field)&&!this.isSortedAsc()&&react.createElement(arrow_up.A,null)))),this.column.resizable&&react.createElement("div",{className:"resizer "+(this.state.resizing?"resizing":""),onMouseDown:this.handleResizeColumnMouseDown,onDoubleClick:this.handleResizeDefaultByColumnDoubleClick}))}}CellHeaderWrapper.propTypes={tableContext:prop_types_default().any,column:prop_types_default().instanceOf(ColumnModel.Ay).isRequired,index:prop_types_default().number.isRequired};const Table_CellHeaderWrapper=withTable(CellHeaderWrapper);CellHeaderWrapper.__docgenInfo={description:"This component represents a table cell header wrapper",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"handleReorderColumnMouseDownEvent",docblock:"Handle the drag start on the column\n@param event The DOM event\n@returns {Promise<void>}",modifiers:[],params:[{name:"event",description:"The DOM event",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the drag start on the column"},{name:"startDragging",docblock:"Start dragging",modifiers:[],params:[],returns:null,description:"Start dragging"},{name:"handleReorderColumnMouseMoveEvent",docblock:"Handle the reorder column mouse move event\n@param event The DOM event",modifiers:[],params:[{name:"event",description:"The DOM event",optional:!1}],returns:null,description:"Handle the reorder column mouse move event"},{name:"handleReorderColumnMouseUpEvent",docblock:"Handle the reorder column mouse up event",modifiers:[],params:[],returns:null,description:"Handle the reorder column mouse up event"},{name:"handleChangeColumn",docblock:"Handle change column",modifiers:[],params:[],returns:null,description:"Handle change column"},{name:"handleSortByColumnClick",docblock:"Handle the change of sorter ( on property or direction )\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle the change of sorter ( on property or direction )"},{name:"updateColumnPosition",docblock:"Update the column position\n@param columnPermutedWidth\n@param dx",modifiers:[],params:[{name:"columnPermutedWidth",optional:!1},{name:"dx",optional:!1}],returns:null,description:"Update the column position"},{name:"updatePreviousAndNextColumnWidth",docblock:"Update the width of the previous and next column\n@param previousColumnWidth\n@param nextColumnWidth",modifiers:[],params:[{name:"previousColumnWidth",optional:!1},{name:"nextColumnWidth",optional:!1}],returns:null,description:"Update the width of the previous and next column"},{name:"handleResizeColumnMouseDown",docblock:"Handle Mouse down event to prepare the resize\n@param event",modifiers:["async"],params:[{name:"event",optional:!1}],returns:null,description:"Handle Mouse down event to prepare the resize"},{name:"handleResizeColumnMouseMoveEvent",docblock:"Handle Mouse move on document to resize a column\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle Mouse move on document to resize a column"},{name:"handleResizeColumnMouseUpEvent",docblock:"Handle Mouse up on document to end the resize",modifiers:[],params:[],returns:null,description:"Handle Mouse up on document to end the resize"},{name:"handleResizeDefaultByColumnDoubleClick",docblock:"Handle resize default by column double click",modifiers:[],params:[],returns:null,description:"Handle resize default by column double click"},{name:"isSortedColumn",docblock:"Check if the grid is sorted for a given column\n@param columnName The column name",modifiers:[],params:[{name:"columnName",description:"The column name",optional:!1}],returns:null,description:"Check if the grid is sorted for a given column"},{name:"isSortedAsc",docblock:"Check if the sort is ascendant.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the sort is ascendant."},{name:"column",docblock:"Get column\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get column"},{name:"propsCellHeader",docblock:"Get props for custom cell\n@return {object}",modifiers:["get"],params:[],returns:{type:{name:"object"}},description:"Get props for custom cell"},{name:"columnWidthStyle",docblock:"Get the column width style by column name\n@return {{width: string} | null}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get the column width style by column name"}],displayName:"CellHeaderWrapper",props:{tableContext:{description:"",type:{name:"any"},required:!1},column:{description:"",type:{name:"instanceOf",value:"ColumnModel"},required:!0},index:{description:"",type:{name:"number"},required:!0}}};class RowHeader extends react.Component{get columns(){return this.props.tableContext.columns}get isDragging(){return this.props.tableContext.isDraggingColumn}render(){return react.createElement("tr",{className:""+(this.isDragging?"dragging":"")},this.columns.map(((column,index)=>react.createElement(Table_CellHeaderWrapper,{key:column.id,column,index}))))}}RowHeader.propTypes={tableContext:prop_types_default().any};const Table_RowHeader=withTable(RowHeader);RowHeader.__docgenInfo={description:"This component represents a table row header",methods:[{name:"columns",docblock:"Get columns\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get columns"},{name:"isDragging",docblock:null,modifiers:["get"],params:[],returns:null}],displayName:"RowHeader",props:{tableContext:{description:"",type:{name:"any"},required:!1}}};class TableHead extends react.Component{get tableStyleWidth(){return{width:`${this.props.tableContext.tableWidth}px`}}render(){return react.createElement("div",{className:"tableview-header"},react.createElement("table",{style:this.tableStyleWidth},react.createElement("thead",null,react.createElement(Table_RowHeader,null))))}}TableHead.propTypes={tableContext:prop_types_default().any};const Table_TableHead=withTable(TableHead);TableHead.__docgenInfo={description:"This component represents a table head",methods:[{name:"tableStyleWidth",docblock:"Get table style width\n@return {{width: string}}",modifiers:["get"],params:[],returns:{},description:"Get table style width"}],displayName:"TableHead",props:{tableContext:{description:"",type:{name:"any"},required:!1}}};class TableBody extends react.Component{get tableBodyStyle(){return{MozUserSelect:"none",WebkitUserSelect:"none",msUserSelect:"none",width:`${this.props.tableContext.tableWidth}px`}}render(){return react.createElement("table",{style:this.tableBodyStyle},react.createElement("tbody",{ref:this.props.tableBodyRef},this.props.items))}}TableBody.propTypes={tableContext:prop_types_default().any,items:prop_types_default().array.isRequired,tableBodyRef:prop_types_default().any};const Table_TableBody=withTable(TableBody);TableBody.__docgenInfo={description:"This component represents a table body",methods:[{name:"tableBodyStyle",docblock:"Get table style width\n@return {{width: string}}",modifiers:["get"],params:[],returns:{},description:"Get table style width"}],displayName:"TableBody",props:{tableContext:{description:"",type:{name:"any"},required:!1},items:{description:"",type:{name:"array"},required:!0},tableBodyRef:{description:"",type:{name:"any"},required:!1}}};class GridTable extends react.Component{renderItem(index,key){const item=this.props.rows[index],isRowInactive=this.props.isRowInactive?.(item);return react.createElement(Table_Row,{key,item,className:isRowInactive?"inactive":"",onClick:this.props.onRowClick,onContextMenu:this.props.onRowContextMenu,onDragStart:this.props.onRowDragStart,onDragEnd:this.props.onRowDragEnd})}renderTable(items,ref){return react.createElement(Table_TableBody,{items,tableBodyRef:ref})}render(){const hasRows=null!==this.props.rows;return react.createElement(TableContextProvider,{columns:this.props.columns,rows:this.props.rows,rowsSetting:this.props.rowsSetting,selectedRowsIds:this.props.selectedRowsIds,sorter:this.props.sorter,onSortChange:this.props.onSortChange,onChange:this.props.onChange},react.createElement(Table_TableHead,null),hasRows&&react.createElement("div",{className:"tableview-content"},react.createElement(react_list_default(),{itemRenderer:(index,key)=>this.renderItem(index,key),itemsRenderer:(items,ref)=>this.renderTable(items,ref),length:this.props.rows.length,pageSize:20,minSize:20,type:"uniform",ref:this.props.rowsRef})))}}GridTable.propTypes={columns:prop_types_default().array.isRequired,rows:prop_types_default().array.isRequired,rowsSetting:prop_types_default().object,sorter:prop_types_default().object,selectedRowsIds:prop_types_default().array,isRowInactive:prop_types_default().func,onSortChange:prop_types_default().func,onRowClick:prop_types_default().func,onRowContextMenu:prop_types_default().func,onRowDragStart:prop_types_default().func,onRowDragEnd:prop_types_default().func,onChange:prop_types_default().func,rowsRef:prop_types_default().any};const Table_GridTable=GridTable;GridTable.__docgenInfo={description:"This component represents a grid table",methods:[{name:"renderItem",docblock:"Render item rows\n@param index\n@param key\n@return {JSX.Element}",modifiers:[],params:[{name:"index",optional:!1},{name:"key",optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Render item rows"},{name:"renderTable",docblock:"Render table for rows\n@param items\n@param ref\n@return {JSX.Element}",modifiers:[],params:[{name:"items",optional:!1},{name:"ref",optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Render table for rows"}],displayName:"GridTable",props:{columns:{description:"",type:{name:"array"},required:!0},rows:{description:"",type:{name:"array"},required:!0},rowsSetting:{description:"",type:{name:"object"},required:!1},sorter:{description:"",type:{name:"object"},required:!1},selectedRowsIds:{description:"",type:{name:"array"},required:!1},isRowInactive:{description:"",type:{name:"func"},required:!1},onSortChange:{description:"",type:{name:"func"},required:!1},onRowClick:{description:"",type:{name:"func"},required:!1},onRowContextMenu:{description:"",type:{name:"func"},required:!1},onRowDragStart:{description:"",type:{name:"func"},required:!1},onRowDragEnd:{description:"",type:{name:"func"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},rowsRef:{description:"",type:{name:"any"},required:!1}}}},"./src/shared/models/column/ColumnCheckboxModel.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _ColumnModel__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/column/ColumnModel.js");class ColumnCheckboxModel extends _ColumnModel__WEBPACK_IMPORTED_MODULE_0__.Ay{constructor(columnDto={}){columnDto.id=_ColumnModel__WEBPACK_IMPORTED_MODULE_0__.nN.CHECKBOX,columnDto.field=_ColumnModel__WEBPACK_IMPORTED_MODULE_0__.uH.CHECKBOX,columnDto.width=columnDto.width||20,columnDto.defaultWidth=20,columnDto.resizable=!1,columnDto.draggable=!1,columnDto.sortable=!1,columnDto.getValue=value=>value,super(columnDto)}}const __WEBPACK_DEFAULT_EXPORT__=ColumnCheckboxModel},"./src/shared/models/column/ColumnModifiedModel.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _ColumnModel__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/column/ColumnModel.js");class ColumnModifiedModel extends _ColumnModel__WEBPACK_IMPORTED_MODULE_0__.Ay{constructor(columnDto={}){columnDto.id=_ColumnModel__WEBPACK_IMPORTED_MODULE_0__.nN.MODIFIED,columnDto.field=_ColumnModel__WEBPACK_IMPORTED_MODULE_0__.uH.MODIFIED,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const __WEBPACK_DEFAULT_EXPORT__=ColumnModifiedModel}}]);