/*! For license information please see react-extension-components-Common-Loading-LoadingBar-LoadingBar-test-stories.d6d5dd1c.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[3247],{"./src/react-extension/components/Common/Loading/LoadingBar/LoadingBar.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LoadingBar_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);class LoadingBar extends react.Component{constructor(props){super(props),this.bindHandlers()}bindHandlers(){this.handleProgressEnd=this.handleProgressEnd.bind(this)}handleProgressEnd(){this.props.onProgressCompleted()}render(){return react.createElement("div",{className:"update-loading-bar"},react.createElement("div",{className:"progress-bar"},react.createElement("span",{className:"progress",onTransitionEnd:this.handleProgressEnd,style:{width:`${this.props.progress}%`||0}})))}}LoadingBar.propTypes={progress:prop_types_default().number,onProgressCompleted:prop_types_default().func};const LoadingBar_LoadingBar=LoadingBar;LoadingBar.__docgenInfo={description:"",methods:[{name:"bindHandlers",docblock:"Binds component handlers",modifiers:[],params:[],returns:null,description:"Binds component handlers"},{name:"handleProgressEnd",docblock:"Handles the progress end",modifiers:[],params:[],returns:null,description:"Handles the progress end"}],displayName:"LoadingBar",props:{progress:{description:"",type:{name:"number"},required:!1},onProgressCompleted:{description:"",type:{name:"func"},required:!1}}};const LoadingBar_test_stories={title:"Foundations/Loading",component:LoadingBar_LoadingBar},Initial=(args=>react.createElement(LoadingBar_LoadingBar,args)).bind({});Initial.args={progress:50,onProgressCompleted:jest.fn()};const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:"args => <LoadingBar {...args} />",...Initial.parameters?.docs?.source}}}}}]);