/*! For license information please see 1968.14b40003.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1968],{"./src/react-extension/components/UserGroup/DeleteUserGroup/DeleteUserGroupWithConflicts.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),_contexts_LoadingContext__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/react-extension/contexts/LoadingContext.js"),react_i18next__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),_Common_Select_Select__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/react-extension/components/Common/Select/Select.js");class DeleteUserGroupWithConflicts extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props,context){super(props,context),this.initializeProperties(),this.state=this.defaultState,this.initEventHandlers()}initializeProperties(){this.foldersErrors=this.getFoldersErrors(),this.resourcesErrors=this.getResourcesErrors(),this.acosPermissionsOptions=this.getAcosPermissionsOptionsMap()}get defaultState(){return{processing:!1,owners:this.populateDefaultOwners()}}initEventHandlers(){this.handleCloseClick=this.handleCloseClick.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleOnChangeOwner=this.handleOnChangeOwner.bind(this)}getFoldersErrors(){const errors=this.props.context.deleteGroupWithConflictsDialogProps.errors;return(errors.folders&&errors.folders.sole_owner||[]).sort(((folderA,folderB)=>folderA.name.localeCompare(folderB.name)))}getResourcesErrors(){const errors=this.props.context.deleteGroupWithConflictsDialogProps.errors;return(errors.resources&&errors.resources.sole_owner||[]).sort(((resourcesA,resourcesB)=>resourcesA.metadata.name.localeCompare(resourcesB.metadata.name)))}getAcosPermissionsOptionsMap(){const acoPermissionsOptionsMap={};return this.resourcesErrors.forEach((resourceError=>{acoPermissionsOptionsMap[resourceError.id]=this.getAcoPermissionsOptions(resourceError)})),this.foldersErrors.forEach((folderError=>{acoPermissionsOptionsMap[folderError.id]=this.getAcoPermissionsOptions(folderError)})),acoPermissionsOptionsMap}getAcoPermissionsOptions(acoError){let acoPermissionsOptions=acoError.permissions;return acoPermissionsOptions=this.filterOutGroupToDeleteFromPermissions(acoPermissionsOptions),acoPermissionsOptions=this.decoratePermissionWithAcoEntity(acoPermissionsOptions),acoPermissionsOptions=this.sortPermissionsAlphabeticallyByAcoName(acoPermissionsOptions),acoPermissionsOptions}filterOutGroupToDeleteFromPermissions(permissions){return permissions.filter((permission=>permission.aro_foreign_key!==this.groupToDelete.id))}decoratePermissionWithAcoEntity(permissions){return permissions.forEach((permission=>{"Group"===permission.aro?permission.group=this.getGroup(permission.aro_foreign_key):permission.user=this.getUser(permission.aro_foreign_key)})),permissions}sortPermissionsAlphabeticallyByAcoName(permissions){return permissions.sort(((permissionA,permissionB)=>{const permissionAAcoName="Group"===permissionA.aro?permissionA.group.name:this.getUserFullName(permissionA.user),permissionBAcoName="Group"===permissionB.aro?permissionB.group.name:this.getUserFullName(permissionB.user);return permissionAAcoName.localeCompare(permissionBAcoName)}))}getUser(id){return this.props.context.users.find((user=>user.id===id))}getGroup(id){return this.props.context.groups.find((group=>group.id===id))}getUserFullName(user){return`${user.profile.first_name} ${user.profile.last_name}`}async handleFormSubmit(event){event.preventDefault(),this.state.processing||await this.delete()}handleCloseClick(){this.props.onClose(),this.props.context.setContext({deleteUserWithConflictsDialogProps:null})}handleOnChangeOwner(event,id){const permissionId=event.target.value,owners=this.state.owners;Object.assign(owners,{[id]:permissionId}),this.setState({owners})}createPermissionOwnersTransfer(){if(null!=this.state.owners){const owners=[];for(const[key,value]of Object.entries(this.state.owners))owners.push({id:value,aco_foreign_key:key});return owners}return null}createUserDeleteTransfer(){return{owners:this.createPermissionOwnersTransfer()}}async delete(){this.setState({processing:!0});try{const groupDeleteTransfer=this.createUserDeleteTransfer();this.props.loadingContext.add(),await this.props.context.port.request("passbolt.groups.delete",this.groupToDelete.id,groupDeleteTransfer),this.props.loadingContext.remove(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The group has been deleted successfully")),this.props.onClose(),this.props.context.setContext({deleteUserWithConflictsDialogProps:null})}catch(error){this.props.loadingContext.remove(),"UserAbortsOperationError"===error.name||(console.error(error),this.handleError(error)),this.setState({processing:!1})}}handleError(error){const errorDialogProps={error};this.props.dialogContext.open(_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_4__.A,errorDialogProps)}hasAllInputDisabled(){return this.state.processing}populateDefaultOwners(){const owners={};return this.hasResourcesConflict()&&this.resourcesErrors.forEach((resourceError=>{const resourceDefaultOwner=this.acosPermissionsOptions[resourceError.id][0];resourceDefaultOwner&&(owners[resourceError.id]=resourceDefaultOwner.id)})),this.hasFolderConflict()&&this.foldersErrors.forEach((folderError=>{const folderDefaultOwner=this.acosPermissionsOptions[folderError.id][0];folderDefaultOwner&&(owners[folderError.id]=folderDefaultOwner.id)})),owners}get groupToDelete(){return this.props.context.deleteGroupWithConflictsDialogProps.group}hasFolderConflict(){return this.foldersErrors&&this.foldersErrors.length>0}hasResourcesConflict(){return this.resourcesErrors&&this.resourcesErrors.length>0}getAcoPermissionsList(id){const getLabel=permission=>"User"===permission.aro&&this.getUserOptionLabel(permission.user)||"Group"===permission.aro&&permission.group.name;return this.acosPermissionsOptions[id]?.map((permission=>({value:permission.id,label:getLabel(permission)})))||[]}getUserOptionLabel(user){return`${user.profile.first_name} ${user.profile.last_name} (${user.username})`}get translate(){return this.props.t}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_2__.A,{title:this.translate("You cannot delete this group!"),onClose:this.handleCloseClick,disabled:this.state.processing,className:"delete-group-dialog"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:this.handleFormSubmit,noValidate:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content intro"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"You are about to delete the group ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",{className:"dialog-variable"},{groupName:this.groupToDelete.name}),".")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"This group is the sole owner of some content. You need to transfer the ownership to others to continue."))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"ownership-transfer"},this.hasFolderConflict()&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Folders")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{className:"ownership-transfer-items"},this.foldersErrors.map((folderError=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{key:folderError.id},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"select-wrapper input required "+(this.state.processing?"disabled":"")},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:"transfer_folder_owner"},folderError.name," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"(Folder) new owner:")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Select_Select__WEBPACK_IMPORTED_MODULE_10__.A,{className:"form-element",value:this.state.owners[folderError.id],items:this.getAcoPermissionsList(folderError.id),onChange:event=>this.handleOnChangeOwner(event,folderError.id)}))))))),this.hasResourcesConflict()&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Passwords")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{className:"ownership-transfer-items"},this.resourcesErrors.map((resourceError=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{key:resourceError.id},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"select-wrapper input required "+(this.state.processing?"disabled":"")},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:"transfer_resource_owner"},resourceError.metadata.name," (",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Password"),") ",react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"new owner"),":"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Select_Select__WEBPACK_IMPORTED_MODULE_10__.A,{className:"form-element",value:this.state.owners[resourceError.id],items:this.getAcoPermissionsList(resourceError.id),onChange:event=>this.handleOnChangeOwner(event,resourceError.id)})))))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__.A,{disabled:this.hasAllInputDisabled(),onClick:this.handleCloseClick}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__.A,{disabled:this.hasAllInputDisabled(),processing:this.state.processing,value:this.translate("Delete"),warning:!0}))))}}DeleteUserGroupWithConflicts.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,onClose:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func,actionFeedbackContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,loadingContext:prop_types__WEBPACK_IMPORTED_MODULE_11___default().any,t:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__.L)((0,_contexts_LoadingContext__WEBPACK_IMPORTED_MODULE_8__.$A)((0,_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__.ot)((0,_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_5__.z9)((0,react_i18next__WEBPACK_IMPORTED_MODULE_9__.CI)("common")(DeleteUserGroupWithConflicts)))));DeleteUserGroupWithConflicts.__docgenInfo={description:"This component allows user to delete a group with conflict to reassign ownership of folders, resources",methods:[{name:"initializeProperties",docblock:"Initialize properties",modifiers:[],params:[],returns:null,description:"Initialize properties"},{name:"defaultState",docblock:null,modifiers:["get"],params:[],returns:null},{name:"initEventHandlers",docblock:null,modifiers:[],params:[],returns:null},{name:"getFoldersErrors",docblock:"Get the folders errors if any\n@returns {array} The list of folders errors\n- The list is sorted alphabetically by folder name",modifiers:[],params:[],returns:{description:"The list of folders errors\n- The list is sorted alphabetically by folder name",type:{name:"array"}},description:"Get the folders errors if any"},{name:"getResourcesErrors",docblock:"Get the resources errors if any\n@returns {array} The list of resources errors\n- The list is sorted alphabetically by resource name",modifiers:[],params:[],returns:{description:"The list of resources errors\n- The list is sorted alphabetically by resource name",type:{name:"array"}},description:"Get the resources errors if any"},{name:"getAcosPermissionsOptionsMap",docblock:"Get a map of permissions options that can potentially be elevated as owner for each aco (resources/folders).\n@returns {object}",modifiers:[],params:[],returns:{type:{name:"object"}},description:"Get a map of permissions options that can potentially be elevated as owner for each aco (resources/folders)."},{name:"getAcoPermissionsOptions",docblock:"Get the permissions options that can potentially be elevated as owner for the given aco error (resource/group).\n@param {object} acoError\n@returns {array} An array of permissions\n- The permissions options are sorted alphabetically by associated user full name or group.\n- The permission associated to the group we want to delete is removed from this list.\n- The permission associated user or group is attached to each permission.",modifiers:[],params:[{name:"acoError",type:{name:"object"},optional:!1}],returns:{description:"An array of permissions\n- The permissions options are sorted alphabetically by associated user full name or group.\n- The permission associated to the group we want to delete is removed from this list.\n- The permission associated user or group is attached to each permission.",type:{name:"array"}},description:"Get the permissions options that can potentially be elevated as owner for the given aco error (resource/group)."},{name:"filterOutGroupToDeleteFromPermissions",docblock:"Filter out the user to delete from the list of permissions.\n@param {array} permissions\n@returns {array}",modifiers:[],params:[{name:"permissions",type:{name:"array"},optional:!1}],returns:{type:{name:"array"}},description:"Filter out the user to delete from the list of permissions."},{name:"decoratePermissionWithAcoEntity",docblock:"Decorate a list of permissions with their associated user or group.\n@param {array} permissions\n@returns {array}",modifiers:[],params:[{name:"permissions",type:{name:"array"},optional:!1}],returns:{type:{name:"array"}},description:"Decorate a list of permissions with their associated user or group."},{name:"sortPermissionsAlphabeticallyByAcoName",docblock:"Sort a list of permissions by their aco name (fullname for user, name for group)\n@param {array} permissions\n@returns {array}",modifiers:[],params:[{name:"permissions",type:{name:"array"},optional:!1}],returns:{type:{name:"array"}},description:"Sort a list of permissions by their aco name (fullname for user, name for group)"},{name:"getUser",docblock:"Get a user by id\n@param {string} id\n@returns {object}",modifiers:[],params:[{name:"id",type:{name:"string"},optional:!1}],returns:{type:{name:"object"}},description:"Get a user by id"},{name:"getGroup",docblock:"Get a group by id\n@param {string} id\n@returns {object}",modifiers:[],params:[{name:"id",type:{name:"string"},optional:!1}],returns:{type:{name:"object"}},description:"Get a group by id"},{name:"getUserFullName",docblock:"Get a user full name\n@param {object} user\n@returns {string}",modifiers:[],params:[{name:"user",type:{name:"object"},optional:!1}],returns:{type:{name:"string"}},description:"Get a user full name"},{name:"handleFormSubmit",docblock:"Handle form submit event.\n@params {ReactEvent} The react event\n@return {Promise}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"Promise"}},description:"Handle form submit event."},{name:"handleCloseClick",docblock:"Handle close button click.",modifiers:[],params:[],returns:null,description:"Handle close button click."},{name:"handleOnChangeOwner",docblock:"Handle onChange owner select event\n@param event\n@param id the id of the folder or resource",modifiers:[],params:[{name:"event",optional:!1},{name:"id",description:"the id of the folder or resource",optional:!1}],returns:null,description:"Handle onChange owner select event"},{name:"createPermissionOwnersTransfer",docblock:"create the permission owners for folder and resource transfer to send it as format expected\n@returns {[{id: id of the permission, aco_foreign_key: id of the folder or resource}]}",modifiers:[],params:[],returns:null,description:"create the permission owners for folder and resource transfer to send it as format expected"},{name:"createUserDeleteTransfer",docblock:"create the user delete transfer permission\n@returns {{owners: {id: id, of, the, permission, aco_foreign_key: id, folder, or, resource}[]}}",modifiers:[],params:[],returns:{},description:"create the user delete transfer permission"},{name:"delete",docblock:"Save the changes.",modifiers:["async"],params:[],returns:null,description:"Save the changes."},{name:"handleError",docblock:null,modifiers:[],params:[{name:"error",optional:!1,type:null}],returns:null},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is processing"},{name:"populateDefaultOwners",docblock:"populate default owner of folders and resources\n@returns { folderId: permissionId,... , resourceId: permissionId,... }",modifiers:[],params:[],returns:null,description:"populate default owner of folders and resources"},{name:"groupToDelete",docblock:"Get the group to delete\n@returns {null}",modifiers:["get"],params:[],returns:{},description:"Get the group to delete"},{name:"hasFolderConflict",docblock:"has folders conflict\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"has folders conflict"},{name:"hasResourcesConflict",docblock:"has resources conflict\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"has resources conflict"},{name:"getAcoPermissionsList",docblock:"Get aco permission\n@param id\n@returns {*}",modifiers:[],params:[{name:"id",optional:!1}],returns:{type:{name:"mixed"}},description:"Get aco permission"},{name:"getUserOptionLabel",docblock:"Get the user label displayed as option\n@param {object} user",modifiers:[],params:[{name:"user",type:{name:"object"},optional:!1}],returns:null,description:"Get the user label displayed as option"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DeleteUserGroupWithConflicts",props:{context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},loadingContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}}}]);