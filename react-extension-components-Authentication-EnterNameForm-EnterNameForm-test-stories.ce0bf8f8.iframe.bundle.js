/*! For license information please see react-extension-components-Authentication-EnterNameForm-EnterNameForm-test-stories.ce0bf8f8.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1647],{"./src/react-extension/components/Authentication/EnterNameForm/EnterNameForm.test.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Initial:()=>Initial,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EnterNameForm_test_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),ApiTriageContext=__webpack_require__("./src/react-extension/contexts/ApiTriageContext.js"),FormSubmitButton=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class EnterNameForm extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.createInputRefs(),this.bindEventHandlers()}componentDidMount(){this.setState({loading:!1},(()=>{this.firstnameRef.current.focus()}))}get defaultState(){return{loading:!0,processing:!1,firstname:"",firstnameError:null,lastname:"",lastnameError:null,hasAlreadyBeenValidated:!1}}bindEventHandlers(){this.handleInputChange=this.handleInputChange.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleFirstnameInputOnKeyUp=this.handleFirstnameInputOnKeyUp.bind(this),this.handleLastnameInputOnKeyUp=this.handleLastnameInputOnKeyUp.bind(this)}createInputRefs(){this.firstnameRef=react.createRef(),this.lastnameRef=react.createRef()}handleInputChange(event){const target=event.target,value=target.value,name=target.name;this.setState({[name]:value})}handleFirstnameInputOnKeyUp(){if(this.state.hasAlreadyBeenValidated){const state=this.validateFirstnameInput();this.setState(state)}}handleLastnameInputOnKeyUp(){if(this.state.hasAlreadyBeenValidated){const state=this.validateLastnameInput();this.setState(state)}}async handleFormSubmit(event){if(event.preventDefault(),await this.setState({hasAlreadyBeenValidated:!0}),!this.state.processing){if(await this.toggleProcessing(),await this.validate(),this.hasValidationError())return await this.toggleProcessing(),void this.focusFirstFieldError();await this.props.apiTriageContext.onRegistrationRequested(this.state.firstname,this.state.lastname)}}async toggleProcessing(){const prev=this.state.processing;return this.setState({processing:!prev})}async validate(){return await Promise.all([this.validateFirstnameInput(),this.validateLastnameInput()]),this.hasValidationError()}async validateFirstnameInput(){let firstnameError=null;return this.state.firstname.trim().length||(firstnameError=this.translate("A first name is required.")),this.setState({firstnameError})}async validateLastnameInput(){let lastnameError=null;return this.state.lastname.trim().length||(lastnameError=this.translate("A last name is required.")),this.setState({lastnameError})}focusFirstFieldError(){this.state.firstnameError?this.firstnameRef.current.focus():this.state.lastnameError&&this.lastnameRef.current.focus()}hasValidationError(){return null!==this.state.firstnameError||null!==this.state.lastnameError}hasAllInputDisabled(){return this.state.processing||this.state.loading}get translate(){return this.props.t}render(){return react.createElement("div",{className:"enter-name"},react.createElement("h1",null,react.createElement(es.x6,null,"New here? Enter your name to get started.")),react.createElement("form",{acceptCharset:"utf-8",onSubmit:this.handleFormSubmit,noValidate:!0},react.createElement("div",{className:`input text required ${this.state.firstnameError?"error":""} ${this.hasAllInputDisabled()?"disabled":""}`},react.createElement("label",{htmlFor:"firstname"},react.createElement(es.x6,null,"First name")),react.createElement("input",{id:"firstname-input",type:"text",name:"firstname",ref:this.firstnameRef,value:this.state.firstname,onKeyUp:this.handleFirstnameInputOnKeyUp,onChange:this.handleInputChange,disabled:this.hasAllInputDisabled(),placeholder:this.translate("First name"),required:"required"}),this.state.firstnameError&&react.createElement("div",{className:"error-message"},this.state.firstnameError)),react.createElement("div",{className:`input text required ${this.state.lastnameError?"error":""} ${this.hasAllInputDisabled()?"disabled":""}`},react.createElement("label",{htmlFor:"lastname"},react.createElement(es.x6,null,"Last name")),react.createElement("input",{id:"lastname-input",type:"text",name:"lastname",ref:this.lastnameRef,value:this.state.lastname,onKeyUp:this.handleLastnameInputOnKeyUp,onChange:this.handleInputChange,disabled:this.hasAllInputDisabled(),placeholder:this.translate("Last name"),required:"required"}),this.state.lastnameError&&react.createElement("div",{className:"error-message"},this.state.lastnameError)),react.createElement("div",{className:"form-actions"},react.createElement(FormSubmitButton.A,{disabled:this.hasAllInputDisabled(),big:!0,fullWidth:!0,processing:this.state.processing,value:this.translate("Sign up")}),react.createElement("a",{href:`${this.props.context.trustedDomain}/auth/login?locale=${this.props.context.locale}`,rel:"noopener noreferrer"},react.createElement(es.x6,null,"I already have an account")))))}}EnterNameForm.propTypes={apiTriageContext:prop_types_default().object,context:prop_types_default().any,t:prop_types_default().func};const EnterNameForm_EnterNameForm=(0,AppContext.L)((0,ApiTriageContext.id)((0,es.CI)("common")(EnterNameForm)));EnterNameForm.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get default state"},{name:"bindEventHandlers",docblock:"Bind event handlers\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind event handlers"},{name:"createInputRefs",docblock:"Create references\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Create references"},{name:"handleInputChange",docblock:"Handle form input changes.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:[],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form input changes."},{name:"handleFirstnameInputOnKeyUp",docblock:"Handle firstname input keyUp event.",modifiers:[],params:[],returns:null,description:"Handle firstname input keyUp event."},{name:"handleLastnameInputOnKeyUp",docblock:"Handle firstname input keyUp event.",modifiers:[],params:[],returns:null,description:"Handle firstname input keyUp event."},{name:"handleFormSubmit",docblock:"Handle form submit event.\n@params {ReactEvent} The react event\n@returns {void}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"void"}},description:"Handle form submit event."},{name:"toggleProcessing",docblock:"Toggle processing state\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle processing state"},{name:"validate",docblock:"Validate the form.\n@returns {Promise<boolean>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"boolean"}]}},description:"Validate the form."},{name:"validateFirstnameInput",docblock:"Validate the firstname input.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Validate the firstname input."},{name:"validateLastnameInput",docblock:"Validate the firstname input.\n@returns {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Validate the firstname input."},{name:"focusFirstFieldError",docblock:"Focus the first field of the form which is in error state.\n@returns {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Focus the first field of the form which is in error state."},{name:"hasValidationError",docblock:"Return true if the form has some validation error\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Return true if the form has some validation error"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is loading or processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is loading or processing"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"EnterNameForm",props:{apiTriageContext:{description:"",type:{name:"object"},required:!1},context:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};const EnterNameForm_test_stories={title:"Components/Authentication/EnterNameForm",component:EnterNameForm_EnterNameForm},Initial=(args=>react.createElement("div",{id:"container",className:"container page login"},react.createElement("div",{className:"content"},react.createElement("div",{className:"login-form"},react.createElement(react_router.MemoryRouter,{initialEntries:["/"]},react.createElement(react_router.Route,{component:routerProps=>react.createElement(EnterNameForm_EnterNameForm,{...args,...routerProps})})))))).bind({});Initial.parameters={css:"ext_authentication"};const __namedExportsOrder=["Initial"];Initial.parameters={...Initial.parameters,docs:{...Initial.parameters?.docs,source:{originalSource:'args => <div id="container" className="container page login">\n    <div className="content">\n      <div className="login-form">\n        <MemoryRouter initialEntries={[\'/\']}>\n          <Route component={routerProps => <EnterNameForm {...args} {...routerProps} />} />\n        </MemoryRouter>\n      </div>\n    </div>\n  </div>',...Initial.parameters?.docs?.source}}}}}]);