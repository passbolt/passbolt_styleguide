/*
	Generic buttons
*/
button,
.button {
    font-size: 1.5rem;
    padding: .8rem 1.6rem;
    line-height: 2rem;
    position: relative;
    display: flex;
    flex-direction: row;
    gap: .8rem;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    outline: 0;
    cursor: pointer;
    text-align: center;
    text-decoration: none; // Needed when apply button style on <a>
    border: none;
    box-shadow: inset 0 0 0 1px var(--Action-button-Action-button-border); // use box shadow to have correct size instead of border (border is not inside the element)
    color: var(--Text-and-icons-Main-text);
    background: var(--Action-button-Action-button-background);
    border-radius: var(--Button-border-radius);
    box-sizing: border-box;
    min-width: 7rem;

    svg:first-child {
      width: 1.6rem;
      height: 1.6rem;
    }

    /* hover */
    &:hover {
        box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow), inset 0 0 0 1px var(--Action-button-Action-button-border);
        color: var(--Text-and-icons-Main-text);
        text-decoration: none;
        border: none;
    }

    /* focus */
    &:focus {
        box-shadow: inset 0 0 0 1px var(--Action-button-Action-button-border);
        color: var(--Text-and-icons-Main-text);
        text-decoration: none;
        border: none;
    }

    /* focus visible (display with keyboard navigation) */
    &:focus-visible {
      box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
      color: var(--Text-and-icons-Main-text);
      text-decoration: none;
      border: none;
    }

    /* active */
    &:active {
        box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow), inset 0 0 0 1px var(--Action-button-Action-button-border);
        color: var(--Text-and-icons-Main-text);
        text-decoration: none;
        border: none;
    }

    /* disabled */
    &.disabled, &:disabled {
        cursor: default;
        background: var(--Action-button-Action-button-background);
        box-shadow: inset 0 0 0 1px var(--Action-button-Action-button-border);
        opacity: .5;
        outline: 0;
    }

    /* button-action */
    &-action {
      /* button-action-contextual */
      &-contextual {
        box-shadow: inset 0 0 0 1px var(--Context-buttons-Context-button-border); // use box shadow to have correct size instead of border (border is not inside the element)
        background: var(--Context-buttons-Context-button-background);

        /* hover */
        &:hover {
          box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow), inset 0 0 0 1px var(--Context-buttons-Context-button-border);
        }

        /* focus */
        &:focus {
          box-shadow: inset 0 0 0 1px var(--Context-buttons-Context-button-border);
        }

        /* focus visible (display with keyboard navigation) */
        &:focus-visible {
          box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
        }

        /* active */
        &:active {
          box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow), inset 0 0 0 1px var(--Context-buttons-Context-button-border);
        }

        /* disabled */
        &.disabled, &:disabled {
          box-shadow: inset 0 0 0 1px var(--Context-buttons-Context-button-border); // use box shadow to have correct size instead of border (border is not inside the element)
          background: var(--Context-buttons-Context-button-background);
        }
      }

      /* button-action-icon */
      &-icon {
        min-width: inherit;
        width: 4.8rem;
        height: 3.6rem;
        padding: .8rem var(--Icon-action-button-padding);
        // info button
        &.info {
          &:active, &.active {
            box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow), inset 0 0 0 1px var(--Action-button-Active-action-button-border);
            background: var(--Action-button-Active-action-button-background);
          }

          /* focus visible (display with keyboard navigation) */
          &:focus-visible {
            box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
          }
        }
      }

      /* button-action-filtered */
      &-filtered.button {
        background: var(--Action-button-Active-action-button-background);
        box-shadow: inset 0 0 0 .1rem var(--Action-button-Active-action-button-border);
        padding: .8rem .8rem .8rem 1.6rem;
        cursor: inherit;

        .divider {
          display: flex;
          height: 2rem;
          box-shadow: inset .1rem 0 0 var(--Action-button-Active-action-button-border), -.1rem 0 0 var(--Action-button-Active-action-button-border);

          button {
            margin-left: .8rem;
            padding: 0;

            svg {
              width: 1.8rem;
              height: 1.8rem;
            }
          }
        }
      }
    }

    /* button-icon */
    &-icon {
        min-width: inherit;
        width: 4.8rem;
        height: 3.6rem;
        padding: .8rem var(--Icon-field-button-padding);
        background: var(--Field-Field-button-background);
        box-shadow: inset 0 0 0 1px var(--Field-Field-button-border);

        /* hover */
        &:hover {
          box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow), inset 0 0 0 1px var(--Field-Field-button-border);
        }

        /* focus visible (display with keyboard navigation) */
        &:focus-visible {
          box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
        }

        /* active */
        &:active {
          box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow), inset 0 0 0 1px var(--Field-Field-button-border);
        }

        /* disabled */
        &.disabled, &:disabled {
          background: var(--Field-Field-button-background);
          box-shadow: inset 0 0 0 1px var(--Field-Field-button-border);
        }

        svg {
          width: 2rem;
          height: 2rem;
        }
    }

    &-transparent {
        min-width: inherit;
        background: transparent;
        box-shadow: none;

        &.back {
          padding: .8rem var(--Icon-field-button-padding);
          svg {
            width: 2rem;
            height: 2rem;
          }
        }

        &.inline {
          padding: .2rem;

          &-menu {
            &-horizontal {
              padding: .2rem .4rem;
            }

            &-vertical {
              padding: .4rem;
            }
          }
        }

        &.infield {
          padding: .5rem var(--Infield-boxless-padding);
          border-radius: var(--Token-radius);
          svg {
            width: 2rem;
            height: 2rem;
          }
        }

        /* focus */
        &:focus {
          box-shadow: none;
        }

        /* hover */
        &:hover {
            box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow);
        }


        /* focus visible (display with keyboard navigation) */
        &:focus-visible {
          box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
        }

        /* active */
        &:active {
            box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow);
        }

        /* disabled */
        &:disabled, &.disabled {
            background: transparent;
            box-shadow: none;
        }
    }

    /* processing state */
    &.processing {
        color: transparent;
        min-height: 3rem; //1.4rem (svg default height) + 1.6rem (total default vertical padding)

        /* hover */
        &:hover {
          box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow), inset 0 0 0 1px var(--Action-button-Action-button-border);
        }

        /* focus */
        &:focus {
          box-shadow: inset 0 0 0 1px var(--Action-button-Action-button-border);
        }

        /* focus visible (display with keyboard navigation) */
        &:focus-visible {
          box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
        }

        /* active */
        &:active {
          box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow), inset 0 0 0 1px var(--Action-button-Action-button-border);
        }


        /* disabled */
        &.disabled, &:disabled {
            opacity: 1;
            box-shadow: inset 0 0 0 1px var(--Action-button-Action-button-border); // use box shadow to have correct size instead of border (border is not inside the element)
        }

        .svg-icon.spinner {
            position: absolute;
            --spinner-color: var(--Spinner-Spinner-foreground);
            --spinner-background: var(--Spinner-Spinner-background);

            // Add opacity to the SVG
            #background {
              opacity: 1;
            }
        }

        &.large-spinner {
          background: var(--Workspace-Workspace-button-background);

          .svg-icon.spinner {
            width: 2.4rem;
            height: 2.4rem;
          }
        }
    }

    /* primary */
    &.primary {
        background: var(--Login-Login-button-background);
        color: var(--Primary-button-Primary-button-text);
        box-shadow: none;

        &-create {
          background: var(--Primary-button-Primary-button-background);
          color: var(--Primary-button-Primary-button-text);
        }

        &-form {
          border-radius: var(--Login-button-radius);
          padding: .8rem 2.4rem;
          font-size: 1.8rem;
          font-weight: 700;
        }

        svg {
          --icon-color: var(--Primary-button-Primary-button-text);
          --icon-background: var(--Primary-button-Primary-button-text);

          &.spinner.svg-icon #background {
            opacity: .25;
          }
        }

        &.processing {
            color: transparent;

            .svg-icon.spinner {
              --spinner-color: var(--Spinner-Button-spinner-foreground);
              --spinner-background: var(--Spinner-Button-spinner-background);
            }
        }

        &:hover {
          box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow);
        }

        /* focus visible (display with keyboard navigation) */
        &:focus-visible {
          box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
        }

        &:active {
          box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow);
        }

        /* disabled */
        &.disabled, &:disabled {
          box-shadow: none;
        }
    }

    /* warning */
    &.warning {
        background: var(--Palette-Contrast-3);
        border-radius: var(--Login-button-radius);
        color: var(--Primary-button-Primary-button-text);
        padding: .8rem 2.4rem;
        font-size: 1.8rem;
        font-weight: 700;
        box-shadow: none;

        svg {
          --icon-color: var(--Primary-button-Primary-button-text);
          --icon-background: var(--Primary-button-Primary-button-text);
          --spinner-color: var(--Spinner-Button-spinner-foreground);
          --spinner-background: var(--Spinner-Button-spinner-background);

          &.spinner.svg-icon #background {
            opacity: .25;
          }
        }

        &.processing {
            color: transparent;

            .svg-icon.spinner {
              --spinner-color: var(--Spinner-Button-spinner-foreground);
              --spinner-background: var(--Spinner-Button-spinner-background);
            }
        }

        &:hover {
          box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow);
        }

        /* focus visible (display with keyboard navigation) */
        &:focus-visible {
          box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
        }

        &:active {
          box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow);
        }

        /* disabled */
        &.disabled, &:disabled {
          box-shadow: none;
        }
    }

  /* attention */
  &.attention {
      background: var(--Palette-Contrast-2);
      border-radius: var(--Login-button-radius);
      color: var(--Primary-button-Primary-button-text);
      padding: .8rem 2.4rem;
      font-size: 1.8rem;
      font-weight: 700;
      box-shadow: none;

      svg {
        --icon-color: var(--Primary-button-Primary-button-text);
        --icon-background: var(--Primary-button-Primary-button-text);
        --spinner-color: var(--Spinner-Button-spinner-foreground);
        --spinner-background: var(--Spinner-Button-spinner-background);

        &.spinner.svg-icon #background {
          opacity: .25;
        }
      }

      &.processing {
        color: transparent;

        .svg-icon.spinner {
          --spinner-color: var(--Spinner-Button-spinner-foreground);
          --spinner-background: var(--Spinner-Button-spinner-background);
        }
      }

      &:hover {
        box-shadow: inset .1rem .1rem 0 0 var(--States-Hover-Highlight), inset -.1rem -.1rem 0 0 var(--States-Hover-Shadow);
      }

      /* focus visible (display with keyboard navigation) */
      &:focus-visible {
        box-shadow: 0 0 .4rem var(--States-Focus), inset 0 0 0 .1rem var(--States-Focus);
      }

      &:active {
        box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow);
      }

      /* disabled */
      &.disabled, &:disabled {
        box-shadow: none;
      }
  }
}

/* sizes */
.button.medium {
  font-size: 1.6rem;
  line-height: 2.4rem;
  padding: .8rem 2.4rem;
}
.button.big {
  font-size: 1.8rem;
  line-height: 3.2rem;
  padding: .8rem 3.2rem;
}
.button.full-width {
    width:100%;
}

/* toggle selected */
.button-toggle.selected {
    box-shadow: inset -.1rem -.1rem 0 0 var(--States-Active-Highlight), inset .1rem .1rem 0 0 var(--States-Active-Shadow), inset 0 0 0 1px var(--Field-Field-button-border);
    background: var(--Field-Field-button-background);
    text-decoration: none;
    border: none;
}

/* group */
.button-group {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: .6rem;

    &--nowrap {
      & > .button {
          white-space: nowrap;
      }
    }

    & > * {
      min-width: inherit;
      max-width: 50%;
      flex-grow: 1;
      &:last-child {
        flex: 0;
      }
    }
}