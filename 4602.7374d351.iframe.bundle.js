/*! For license information please see 4602.7374d351.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[4602],{"./src/react-extension/components/Common/ContextualMenu/ContextualMenuWrapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);class ContextualMenuWrapper extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.createRefs(),this.bindCallbacks()}get defaultState(){return{positionY:this.props.top}}bindCallbacks(){this.handleDocumentClickEvent=this.handleDocumentClickEvent.bind(this),this.handleDocumentContextualMenuEvent=this.handleDocumentContextualMenuEvent.bind(this),this.handleDocumentDragStartEvent=this.handleDocumentDragStartEvent.bind(this),this.handleDocumentScrollEvent=this.handleDocumentScrollEvent.bind(this)}createRefs(){this.elementRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef()}componentDidMount(){this.adjustPositionY(),document.addEventListener("click",this.handleDocumentClickEvent,{capture:!0}),document.addEventListener("contextmenu",this.handleDocumentContextualMenuEvent,{capture:!0}),document.addEventListener("dragstart",this.handleDocumentDragStartEvent,{capture:!0}),document.addEventListener("scroll",this.handleDocumentScrollEvent,{capture:!0})}componentWillUnmount(){document.removeEventListener("click",this.handleDocumentClickEvent,{capture:!0}),document.removeEventListener("contextmenu",this.handleDocumentContextualMenuEvent,{capture:!0}),document.removeEventListener("dragstart",this.handleDocumentDragStartEvent,{capture:!0}),document.removeEventListener("scroll",this.handleDocumentScrollEvent,{capture:!0})}handleDocumentScrollEvent(){this.props.hide()}handleDocumentClickEvent(event){this.elementRef.current.contains(event.target)||(event.stopPropagation(),this.props.hide())}handleDocumentContextualMenuEvent(event){this.elementRef.current.contains(event.target)||this.props.hide()}handleDocumentDragStartEvent(){this.props.hide()}adjustPositionY(){const contextMenuHeight=this.elementRef.current.offsetHeight;this.props.top+contextMenuHeight>window.innerHeight&&(this.setState({positionY:window.innerHeight-contextMenuHeight}),this.elementRef.current.style.zIndex=1e3)}getStyle(){return{position:"absolute",display:"block",left:this.props.left,top:this.state.positionY}}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",{ref:this.elementRef,className:`contextual-menu ${this.props.className}`,style:this.getStyle()},this.props.children)}}ContextualMenuWrapper.defaultProps={className:""},ContextualMenuWrapper.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any,left:prop_types__WEBPACK_IMPORTED_MODULE_1___default().number,hide:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func,top:prop_types__WEBPACK_IMPORTED_MODULE_1___default().number,className:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string};const __WEBPACK_DEFAULT_EXPORT__=ContextualMenuWrapper;ContextualMenuWrapper.__docgenInfo={description:"The ContextualMenuWrapper has for aim to handle common contextual menus common behavior.\nYou can use it in your component as following\n\n<ContextualMenuWrapper\n  hide={callback_func} // Function to call when the contextual menu request to close itself\n  left={100} // Left position in absolute to display the contextual menu\n  top={100}> // Top position in absolute to display the contextual menu\n  <div>\n    Your contextual menu content\n  </div>\n</ContextualMenuWrapper>",methods:[{name:"defaultState",docblock:null,modifiers:["get"],params:[],returns:null},{name:"bindCallbacks",docblock:"Bind class methods callback",modifiers:[],params:[],returns:null,description:"Bind class methods callback"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"handleDocumentScrollEvent",docblock:"Handle scroll event on document. Hide the component if any.",modifiers:[],params:[],returns:null,description:"Handle scroll event on document. Hide the component if any."},{name:"handleDocumentClickEvent",docblock:"Handle click events on document. Hide the component if the click occurred outside of the component.\n@param {ReactEvent} event The event",modifiers:[],params:[{name:"event",description:"The event",type:{name:"ReactEvent"},optional:!1}],returns:null,description:"Handle click events on document. Hide the component if the click occurred outside of the component."},{name:"handleDocumentContextualMenuEvent",docblock:"Handle contextual menu events on document. Hide the component if the click occurred outside of the component.\nDon't hide it if a contextual menu event occurred on the FoldersList component, this component props will be\nupdated with new datA.\n@param {ReactEvent} event The event",modifiers:[],params:[{name:"event",description:"The event",type:{name:"ReactEvent"},optional:!1}],returns:null,description:"Handle contextual menu events on document. Hide the component if the click occurred outside of the component.\nDon't hide it if a contextual menu event occurred on the FoldersList component, this component props will be\nupdated with new datA."},{name:"handleDocumentDragStartEvent",docblock:"Handle drag start event on document. Hide the component if any.",modifiers:[],params:[],returns:null,description:"Handle drag start event on document. Hide the component if any."},{name:"adjustPositionY",docblock:null,modifiers:[],params:[],returns:null},{name:"getStyle",docblock:"Get the contextual menu style.",modifiers:[],params:[],returns:null,description:"Get the contextual menu style."}],displayName:"ContextualMenuWrapper",props:{className:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"any"},required:!1},left:{description:"",type:{name:"number"},required:!1},hide:{description:"",type:{name:"func"},required:!1},top:{description:"",type:{name:"number"},required:!1}}}},"./src/react-extension/components/Common/Progress/DisplayProgress/DisplayProgress.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_contexts_ProgressContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/react-extension/contexts/ProgressContext.js"),react_i18next__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/shared/components/Icons/Icon.js");class DisplayProgress extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.infiniteTimerUpdateIntervalId=null,this.state=this.defaultState}get defaultState(){return{infiniteTimer:0}}componentDidMount(){this.startInfiniteTimerUpdateProgress()}startInfiniteTimerUpdateProgress(){this.isInfiniteProgressMode()&&(this.infiniteTimerUpdateIntervalId=setInterval((()=>{const infiniteTimer=this.state.infiniteTimer+2;this.setState({infiniteTimer})}),500))}componentDidUpdate(){!this.isInfiniteProgressMode()&&this.infiniteTimerUpdateIntervalId&&this.resetInterval()}componentWillUnmount(){this.resetInterval()}isInfiniteProgressMode(){return!this.props.progressContext.progressDialogProps.goals}resetInterval(){this.infiniteTimerUpdateIntervalId&&(clearInterval(this.infiniteTimerUpdateIntervalId),this.infiniteTimerUpdateIntervalId=null)}calculateProgress(){return this.props.progressContext.progressDialogProps?.goals>0?this.calculateGoalsProgress():this.calculateInfiniteProgress()}calculateInfiniteProgress(){return 100-100/Math.pow(1.1,this.state.infiniteTimer)}calculateGoalsProgress(){const completed=this.props.progressContext.progressDialogProps.completed||0;let progress=Math.round(100*completed/this.props.progressContext.progressDialogProps.goals);return progress>100&&(progress=100),progress}render(){const progress=this.calculateProgress(),progressBarStyle={width:`${progress}%`};return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-wrapper progress-dialog"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-header"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"dialog-title-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,this.props.progressContext.progressDialogProps.title||react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_2__.x6,null,"Please wait...")))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"dialog-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_2__.x6,null,"Take a deep breath and enjoy being in the present moment...")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"progress-bar-wrapper"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"progress-bar"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"progress "+(100===progress?"completed":""),style:progressBarStyle})),!this.isInfiniteProgressMode()&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"progress-details"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"progress-step-label"},this.props.progressContext.progressDialogProps.message||react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_2__.x6,null,"Please wait...")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"progress-percent"},progress,"%")))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",className:"disabled processing"},"Submit",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shared_components_Icons_Icon__WEBPACK_IMPORTED_MODULE_3__.A,{name:"spinner"}))))))}}DisplayProgress.propTypes={progressContext:prop_types__WEBPACK_IMPORTED_MODULE_4___default().any};const __WEBPACK_DEFAULT_EXPORT__=(0,_contexts_ProgressContext__WEBPACK_IMPORTED_MODULE_1__.E0)((0,react_i18next__WEBPACK_IMPORTED_MODULE_2__.CI)("common")(DisplayProgress));DisplayProgress.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Returns the component default state\n@return {object}",modifiers:["get"],params:[],returns:{type:{name:"object"}},description:"Returns the component default state"},{name:"startInfiniteTimerUpdateProgress",docblock:"Start the infinite timer update.\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Start the infinite timer update."},{name:"isInfiniteProgressMode",docblock:"Check if the component should display an infinite progress bar.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the component should display an infinite progress bar."},{name:"resetInterval",docblock:"Reset interval",modifiers:[],params:[],returns:null,description:"Reset interval"},{name:"calculateProgress",docblock:"Calculate the progress\n@return {number}",modifiers:[],params:[],returns:{type:{name:"number"}},description:"Calculate the progress"},{name:"calculateInfiniteProgress",docblock:"Calculate the infinite progress\n@return {number}",modifiers:[],params:[],returns:{type:{name:"number"}},description:"Calculate the infinite progress"},{name:"calculateGoalsProgress",docblock:"Calculate the progress based on the goals\n@return {number}",modifiers:[],params:[],returns:{type:{name:"number"}},description:"Calculate the progress based on the goals"}],displayName:"DisplayProgress",props:{progressContext:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/components/Resource/DeleteResource/DeleteResource.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__),_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),_contexts_ResourceWorkspaceContext__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/react-extension/contexts/ResourceWorkspaceContext.js"),react_i18next__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class DeleteResource extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.getDefaultState(),this.initEventHandlers()}getDefaultState(){return{processing:!1}}initEventHandlers(){this.handleCloseClick=this.handleCloseClick.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this)}get resources(){return this.props.resources}async handleFormSubmit(event){event.preventDefault(),this.state.processing||await this.delete()}handleCloseClick(){this.props.onClose()}async handleSaveSuccess(){await this.props.actionFeedbackContext.displaySuccess(this.translate("The resource has been deleted successfully.",{count:this.resources.length})),this.props.onClose()}handleSaveError(error){"UserAbortsOperationError"===error.name||(console.error(error),this.handleError(error)),this.setState({processing:!1})}async delete(){this.setState({processing:!0});try{const resourcesIds=this.resources.map((resource=>resource.id));await this.props.context.port.request("passbolt.resources.delete-all",resourcesIds),await this.handleSaveSuccess()}catch(error){this.handleSaveError(error)}}handleError(error){const errorDialogProps={error};this.props.dialogContext.open(_Common_Error_NotifyError_NotifyError__WEBPACK_IMPORTED_MODULE_4__.A,errorDialogProps)}hasAllInputDisabled(){return this.state.processing}hasMultipleResources(){return this.resources.length>1}get translate(){return this.props.t}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Dialog_DialogWrapper_DialogWrapper__WEBPACK_IMPORTED_MODULE_2__.A,{title:this.translate("Delete resource?",{count:this.resources.length}),onClose:this.handleCloseClick,disabled:this.state.processing,className:"delete-password-dialog"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:this.handleFormSubmit,noValidate:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"form-content"},!this.hasMultipleResources()&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Are you sure you want to delete the resource ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",{className:"dialog-variable"},{resourceName:this.resources[0].metadata.name}),"?")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Once the resource is deleted, it will be removed permanently and will not be recoverable."))),this.hasMultipleResources()&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_i18next__WEBPACK_IMPORTED_MODULE_9__.x6,null,"Please confirm you really want to delete the resources. After clicking ok, the resources will be deleted permanently."))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"submit-wrapper clearfix"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormCancelButton__WEBPACK_IMPORTED_MODULE_7__.A,{disabled:this.hasAllInputDisabled(),onClick:this.handleCloseClick}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Common_Inputs_FormSubmitButton_FormSubmitButton__WEBPACK_IMPORTED_MODULE_6__.A,{disabled:this.hasAllInputDisabled(),processing:this.state.processing,value:this.translate("Delete"),warning:!0}))))}}DeleteResource.propTypes={context:prop_types__WEBPACK_IMPORTED_MODULE_10___default().any,onClose:prop_types__WEBPACK_IMPORTED_MODULE_10___default().func,actionFeedbackContext:prop_types__WEBPACK_IMPORTED_MODULE_10___default().any,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_10___default().any,resourceWorkspaceContext:prop_types__WEBPACK_IMPORTED_MODULE_10___default().any,resources:prop_types__WEBPACK_IMPORTED_MODULE_10___default().array,t:prop_types__WEBPACK_IMPORTED_MODULE_10___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,_shared_context_AppContext_AppContext__WEBPACK_IMPORTED_MODULE_1__.L)((0,_contexts_ResourceWorkspaceContext__WEBPACK_IMPORTED_MODULE_8__.Qw)((0,_contexts_ActionFeedbackContext__WEBPACK_IMPORTED_MODULE_3__.ot)((0,_contexts_DialogContext__WEBPACK_IMPORTED_MODULE_5__.z9)((0,react_i18next__WEBPACK_IMPORTED_MODULE_9__.CI)("common")(DeleteResource)))));DeleteResource.__docgenInfo={description:"This component allows user to delete a tag of the resources",methods:[{name:"getDefaultState",docblock:null,modifiers:[],params:[],returns:null},{name:"initEventHandlers",docblock:null,modifiers:[],params:[],returns:null},{name:"resources",docblock:"get the resources\n@returns {[]|null}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"tuple",elements:[]}]}},description:"get the resources"},{name:"handleFormSubmit",docblock:"Handle form submit event.\n@params {ReactEvent} The react event\n@return {Promise}",modifiers:["async"],params:[{name:"event",optional:!1}],returns:{type:{name:"Promise"}},description:"Handle form submit event."},{name:"handleCloseClick",docblock:"Handle close button click.",modifiers:[],params:[],returns:null,description:"Handle close button click."},{name:"handleSaveSuccess",docblock:"Handle save operation success.",modifiers:["async"],params:[],returns:null,description:"Handle save operation success."},{name:"handleSaveError",docblock:"Handle save operation error.\n@param {object} error The returned error",modifiers:[],params:[{name:"error",description:"The returned error",type:{name:"object"},optional:!1}],returns:null,description:"Handle save operation error."},{name:"delete",docblock:"Save the changes.",modifiers:["async"],params:[],returns:null,description:"Save the changes."},{name:"handleError",docblock:"handle error and display error dialog\n@param error",modifiers:[],params:[{name:"error",optional:!1}],returns:null,description:"handle error and display error dialog"},{name:"hasAllInputDisabled",docblock:"Should input be disabled? True if state is processing\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Should input be disabled? True if state is processing"},{name:"hasMultipleResources",docblock:"has multiple resources\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"has multiple resources"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DeleteResource",props:{context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1},resources:{description:"",type:{name:"array"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Resource/DisplayResourcesList/DisplayResourcesList.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayResourcesList_DisplayResourcesList});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),ResourceWorkspaceContext=__webpack_require__("./src/react-extension/contexts/ResourceWorkspaceContext.js"),dist=__webpack_require__("./node_modules/debounce-promise/dist/index.js"),dist_default=__webpack_require__.n(dist),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ContextualMenuWrapper=__webpack_require__("./src/react-extension/components/Common/ContextualMenu/ContextualMenuWrapper.js"),EditResource=__webpack_require__("./src/react-extension/components/Resource/EditResource/EditResource.js"),ShareDialog=__webpack_require__("./src/react-extension/components/Share/ShareDialog.js"),DeleteResource=__webpack_require__("./src/react-extension/components/Resource/DeleteResource/DeleteResource.js"),sanitizeUrl=__webpack_require__("./src/react-extension/lib/Sanitize/sanitizeUrl.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),clipBoard=__webpack_require__("./src/shared/lib/Browser/clipBoard.js"),uiActionEnumeration=__webpack_require__("./src/shared/services/rbacs/uiActionEnumeration.js"),RbacContext=__webpack_require__("./src/shared/context/Rbac/RbacContext.js"),ProgressContext=__webpack_require__("./src/react-extension/contexts/ProgressContext.js"),TotpCodeGeneratorService=__webpack_require__("./src/shared/services/otp/TotpCodeGeneratorService.js"),HandleTotpWorkflowMode=__webpack_require__("./src/react-extension/components/Resource/HandleTotpWorkflow/HandleTotpWorkflowMode.js"),WorkflowContext=__webpack_require__("./src/react-extension/contexts/WorkflowContext.js"),HandleTotpWorkflow=__webpack_require__("./src/react-extension/components/Resource/HandleTotpWorkflow/HandleTotpWorkflow.js"),PasswordExpirySettingsContext=__webpack_require__("./src/react-extension/contexts/PasswordExpirySettingsContext.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),PasswordExpiryDialog=__webpack_require__("./src/react-extension/components/Resource/PasswordExpiryDialog/PasswordExpiryDialog.js"),ResourceTypesLocalStorageContext=__webpack_require__("./src/shared/context/ResourceTypesLocalStorageContext/ResourceTypesLocalStorageContext.js"),resourceTypesCollection=__webpack_require__("./src/shared/models/entity/resourceType/resourceTypesCollection.js");class DisplayResourcesListContextualMenu extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleEditClickEvent=this.handleEditClickEvent.bind(this),this.handleShareClickEvent=this.handleShareClickEvent.bind(this),this.handleUsernameClickEvent=this.handleUsernameClickEvent.bind(this),this.handleUriClickEvent=this.handleUriClickEvent.bind(this),this.handlePermalinkClickEvent=this.handlePermalinkClickEvent.bind(this),this.handlePasswordClickEvent=this.handlePasswordClickEvent.bind(this),this.handleTotpClickEvent=this.handleTotpClickEvent.bind(this),this.handleDeleteClickEvent=this.handleDeleteClickEvent.bind(this),this.handleGoToResourceUriClick=this.handleGoToResourceUriClick.bind(this),this.handleSetExpiryDateClick=this.handleSetExpiryDateClick.bind(this),this.handleMarkAsExpiredClick=this.handleMarkAsExpiredClick.bind(this)}handleEditClickEvent(){this.isStandaloneTotpResource?this.props.workflowContext.start(HandleTotpWorkflow.A,{mode:HandleTotpWorkflowMode._.EDIT_STANDALONE_TOTP}):this.props.dialogContext.open(EditResource.A,{resource:this.resource}),this.props.hide()}handleShareClickEvent(){const resourcesIds=[this.resource.id];this.props.context.setContext({shareDialogProps:{resourcesIds}}),this.props.dialogContext.open(ShareDialog.A),this.props.hide()}async handleUsernameClickEvent(){await clipBoard.A.copy(this.resource.metadata.username,this.props.context.port),this.props.actionFeedbackContext.displaySuccess(this.translate("The username has been copied to clipboard")),this.props.hide()}async handleUriClickEvent(){await clipBoard.A.copy(this.resource.metadata.uris[0],this.props.context.port),this.props.actionFeedbackContext.displaySuccess(this.translate("The uri has been copied to clipboard")),this.props.hide()}async handlePermalinkClickEvent(){const permalink=`${this.props.context.userSettings.getTrustedDomain()}/app/passwords/view/${this.resource.id}`;await clipBoard.A.copy(permalink,this.props.context.port),this.props.actionFeedbackContext.displaySuccess(this.translate("The permalink has been copied to clipboard")),this.props.hide()}decryptResourceSecret(){return this.props.context.port.request("passbolt.secret.find-by-resource-id",this.resource.id)}async copyPasswordToClipboard(plaintextSecretDto){const password=plaintextSecretDto.password;if(!password)throw new TypeError(this.translate("The password is empty."));await clipBoard.A.copy(password,this.props.context.port)}async handlePasswordClickEvent(){let plaintextSecretDto;this.props.hide(),this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret()}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}this.props.progressContext.close(),plaintextSecretDto?.password?.length?(await this.copyPasswordToClipboard(plaintextSecretDto),this.props.resourceWorkspaceContext.onResourceCopied(),this.props.actionFeedbackContext.displaySuccess(this.translate("The secret has been copied to clipboard"))):await this.props.actionFeedbackContext.displayError(this.translate("The password is empty and cannot be copied to clipboard."))}async handleTotpClickEvent(){let plaintextSecretDto,code;this.props.hide(),this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret()}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}if(this.props.progressContext.close(),plaintextSecretDto)if(plaintextSecretDto.totp){try{code=TotpCodeGeneratorService.l.generate(plaintextSecretDto.totp)}catch(error){return void await this.props.actionFeedbackContext.displayError(this.translate("Unable to copy the TOTP"))}await clipBoard.A.copy(code,this.props.context.port),await this.props.resourceWorkspaceContext.onResourceCopied(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The TOTP has been copied to clipboard"))}else await this.props.actionFeedbackContext.displayError(this.translate("The TOTP is empty and cannot be copied to clipboard."))}handleDeleteClickEvent(){const resources=[this.resource];this.props.dialogContext.open(DeleteResource.A,{resources}),this.props.hide()}handleGoToResourceUriClick(){this.props.resourceWorkspaceContext.onGoToResourceUriRequested(this.resource.metadata.uris[0])}async handleMarkAsExpiredClick(){try{await this.props.context.port.request("passbolt.resources.set-expiration-date",[{id:this.resource.id,expired:(0,dateUtils.B7)(luxon.c9.utc())}]),await this.props.actionFeedbackContext.displaySuccess(this.translate("The resource has been marked as expired.",{count:1}))}catch(error){await this.props.actionFeedbackContext.displayError(this.translate("Unable to mark the resource as expired.",{count:1}))}finally{this.props.hide()}}handleSetExpiryDateClick(){this.props.dialogContext.open(PasswordExpiryDialog.A,{resources:[this.resource]}),this.props.hide()}get resource(){return this.props.resource}get safeUri(){return(0,sanitizeUrl.A)(this.resource.metadata.uris?.[0],{whiteListedProtocols:ResourceWorkspaceContext.XH,defaultProtocol:sanitizeUrl.P.HTTPS})}canUpdate(){return this.resource.permission.type>=7}canShare(){return 15===this.resource.permission.type}canCopyUsername(){return this.resource.metadata?.username&&""!==this.resource.metadata.username}canCopyPassword(){return this.isPasswordResources}get isPasswordResources(){return this.props.resourceTypes?.getFirstById(this.resource.resource_type_id)?.hasPassword()}canCopyTotp(){return this.isTotpResources}get isTotpResources(){return this.props.resourceTypes?.getFirstById(this.resource.resource_type_id)?.hasTotp()}get isStandaloneTotpResource(){return this.props.resourceTypes?.getFirstById(this.resource.resource_type_id)?.isStandaloneTotp()}canCopyUri(){return this.resource.metadata?.uris?.length>0&&""!==this.resource.metadata.uris?.[0]}get canUseTotp(){return this.props.context.siteSettings.canIUse("totpResourceTypes")}get canUsePasswordExpiry(){const passwordExpirySettings=this.props.passwordExpiryContext.getSettings();return this.props.passwordExpiryContext.isFeatureEnabled()&&passwordExpirySettings?.policy_override}get translate(){return this.props.t}render(){const canCopySecret=this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.SECRETS_COPY),canViewShare=this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.SHARE_VIEW_LIST);return react.createElement(ContextualMenuWrapper.A,{hide:this.props.hide,left:this.props.left,top:this.props.top},react.createElement("li",{key:"option-username-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"username",className:"link no-border",disabled:!this.canCopyUsername(),onClick:this.handleUsernameClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Copy username"))))))),canCopySecret&&react.createElement("li",{key:"option-copy-password-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",className:"link no-border",id:"password",disabled:!this.canCopyPassword(),onClick:this.handlePasswordClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Copy password"))))))),react.createElement("li",{key:"option-copy-uri-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"uri",className:"link no-border",disabled:!this.canCopyUri(),onClick:this.handleUriClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Copy URI"))))))),react.createElement("li",{key:"option-permalink-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{className:"link no-border",type:"button",id:"permalink",onClick:this.handlePermalinkClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Copy permalink"))))))),canCopySecret&&this.canUseTotp&&react.createElement("li",{key:"option-copy-totp-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",className:"link no-border",id:"totp",disabled:!this.canCopyTotp(),onClick:this.handleTotpClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Copy TOTP"))))))),react.createElement("li",{key:"option-open-uri-resource",className:"ready separator-after"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"open-uri",className:"link no-border",disabled:!this.safeUri,onClick:this.handleGoToResourceUriClick},react.createElement("span",null,react.createElement(es.x6,null,"Open URI in a new Tab"))))))),this.canUsePasswordExpiry&&react.createElement(react.Fragment,null,react.createElement("li",{key:"option-set-expiry-date",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"set-expiry-date",className:"link no-border",disabled:!this.canUpdate(),onClick:this.handleSetExpiryDateClick},react.createElement("span",null,react.createElement(es.x6,null,"Set expiry date"))))))),react.createElement("li",{key:"option-mark-as-expired-resource",className:"ready separator-after"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"mark-as-expired",className:"link no-border",disabled:!this.canUpdate(),onClick:this.handleMarkAsExpiredClick},react.createElement("span",null,react.createElement(es.x6,null,"Mark as expired")))))))),react.createElement("li",{key:"option-edit-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"edit",className:"link no-border",disabled:!this.canUpdate(),onClick:this.handleEditClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Edit"))))))),canViewShare&&react.createElement("li",{key:"option-share-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"share",className:"link no-border",disabled:!this.canShare(),onClick:this.handleShareClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Share"))))))),react.createElement("li",{key:"option-delete-resource",className:"ready"},react.createElement("div",{className:"row"},react.createElement("div",{className:"main-cell-wrapper"},react.createElement("div",{className:"main-cell"},react.createElement("button",{type:"button",id:"delete",className:"link no-border",disabled:!this.canUpdate(),onClick:this.handleDeleteClickEvent},react.createElement("span",null,react.createElement(es.x6,null,"Delete"))))))))}}DisplayResourcesListContextualMenu.propTypes={context:prop_types_default().any,rbacContext:prop_types_default().any,hide:prop_types_default().func,left:prop_types_default().number,top:prop_types_default().number,resourceWorkspaceContext:prop_types_default().any,resourceTypes:prop_types_default().instanceOf(resourceTypesCollection.A),dialogContext:prop_types_default().any,progressContext:prop_types_default().any,resource:prop_types_default().object,actionFeedbackContext:prop_types_default().any,workflowContext:prop_types_default().any,passwordExpiryContext:prop_types_default().object,t:prop_types_default().func};const DisplayResourcesList_DisplayResourcesListContextualMenu=(0,AppContext.L)((0,RbacContext.x6)((0,ResourceWorkspaceContext.Qw)((0,ResourceTypesLocalStorageContext.KH)((0,PasswordExpirySettingsContext.f4)((0,DialogContext.z9)((0,WorkflowContext.AV)((0,ProgressContext.E0)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(DisplayResourcesListContextualMenu))))))))));DisplayResourcesListContextualMenu.__docgenInfo={description:"",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleEditClickEvent",docblock:"handle edit resource",modifiers:[],params:[],returns:null,description:"handle edit resource"},{name:"handleShareClickEvent",docblock:"handle share resource",modifiers:[],params:[],returns:null,description:"handle share resource"},{name:"handleUsernameClickEvent",docblock:"handle username resource",modifiers:["async"],params:[],returns:null,description:"handle username resource"},{name:"handleUriClickEvent",docblock:"handle uri resource",modifiers:["async"],params:[],returns:null,description:"handle uri resource"},{name:"handlePermalinkClickEvent",docblock:"handle permalink resource",modifiers:["async"],params:[],returns:null,description:"handle permalink resource"},{name:"decryptResourceSecret",docblock:"Decrypt the resource secret\n@returns {Promise<object>} The secret in plaintext format\n@throw UserAbortsOperationError If the user cancel the operation",modifiers:[],params:[],returns:{description:"The secret in plaintext format",type:{name:"Promise",elements:[{name:"object"}]}},description:"Decrypt the resource secret"},{name:"copyPasswordToClipboard",docblock:"Copy password from dto to clipboard\nSupport original password (a simple string) and composed objects)\n\n@param {object} plaintextSecretDto The plain text secret DTO.\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"plaintextSecretDto",description:"The plain text secret DTO.",type:{name:"object"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Copy password from dto to clipboard\nSupport original password (a simple string) and composed objects)"},{name:"handlePasswordClickEvent",docblock:"handle password resource",modifiers:["async"],params:[],returns:null,description:"handle password resource"},{name:"handleTotpClickEvent",docblock:"handle copy to clipboard the totp of the selected resource",modifiers:["async"],params:[],returns:null,description:"handle copy to clipboard the totp of the selected resource"},{name:"handleDeleteClickEvent",docblock:"handle delete resource",modifiers:[],params:[],returns:null,description:"handle delete resource"},{name:"handleGoToResourceUriClick",docblock:"handle open the uri in a new tab",modifiers:[],params:[],returns:null,description:"handle open the uri in a new tab"},{name:"handleMarkAsExpiredClick",docblock:"Handle mark as expired\n@return {Promise<void>}",modifiers:["async"],params:[],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle mark as expired"},{name:"handleSetExpiryDateClick",docblock:"Handle set expiry date click.",modifiers:[],params:[],returns:null,description:"Handle set expiry date click."},{name:"resource",docblock:"the resource selected\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"the resource selected"},{name:"safeUri",docblock:"the resource safe uri\n@return {string|bool} Return safe uri or false if not safe",modifiers:["get"],params:[],returns:{description:"Return safe uri or false if not safe",type:{name:"union",elements:[{name:"string"},{name:"bool"}]}},description:"the resource safe uri"},{name:"canUpdate",docblock:"Can update the resource",modifiers:[],params:[],returns:null,description:"Can update the resource"},{name:"canShare",docblock:"Can share the resource",modifiers:[],params:[],returns:null,description:"Can share the resource"},{name:"canCopyUsername",docblock:"Can copy username\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Can copy username"},{name:"canCopyPassword",docblock:"Can copy password\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Can copy password"},{name:"isPasswordResources",docblock:"Is password resource\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is password resource"},{name:"canCopyTotp",docblock:"Can copy totp\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Can copy totp"},{name:"isTotpResources",docblock:"Is TOTP resource\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is TOTP resource"},{name:"isStandaloneTotpResource",docblock:"Is TOTP resource\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is TOTP resource"},{name:"canCopyUri",docblock:"Can copy uri\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Can copy uri"},{name:"canUseTotp",docblock:"Can use Totp\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can use Totp"},{name:"canUsePasswordExpiry",docblock:"Can use password expiry\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can use password expiry"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DisplayResourcesListContextualMenu",props:{context:{description:"",type:{name:"any"},required:!1},rbacContext:{description:"",type:{name:"any"},required:!1},hide:{description:"",type:{name:"func"},required:!1},left:{description:"",type:{name:"number"},required:!1},top:{description:"",type:{name:"number"},required:!1},resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1},resourceTypes:{description:"",type:{name:"instanceOf",value:"ResourceTypesCollection"},required:!1},dialogContext:{description:"",type:{name:"any"},required:!1},progressContext:{description:"",type:{name:"any"},required:!1},resource:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},workflowContext:{description:"",type:{name:"any"},required:!1},passwordExpiryContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};var ContextualMenuContext=__webpack_require__("./src/react-extension/contexts/ContextualMenuContext.js"),DragContext=__webpack_require__("./src/react-extension/contexts/DragContext.js");class DisplayDragResource extends react.Component{get selectedResources(){return this.props.resourceWorkspaceContext.selectedResources}isMultipleSelected(){return this.props.resourceWorkspaceContext.selectedResources.length>1}hasMoreThanThreeResourcesSelected(){return this.props.resourceWorkspaceContext.selectedResources.length>3}get numberOfResources(){return this.props.resourceWorkspaceContext.selectedResources.length>99?"99+":this.props.resourceWorkspaceContext.selectedResources.length}render(){return react.createElement("div",{className:"drag-and-drop "+(this.hasMoreThanThreeResourcesSelected()?"item-n":`item-${this.numberOfResources}`)},react.createElement("span",{className:"message"},this.selectedResources[0].metadata.name),this.isMultipleSelected()&&react.createElement("span",{className:"count"},this.numberOfResources))}}DisplayDragResource.contextType=AppContext.A,DisplayDragResource.propTypes={resourceWorkspaceContext:prop_types_default().any};const DisplayResourcesList_DisplayDragResource=(0,ResourceWorkspaceContext.Qw)(DisplayDragResource);DisplayDragResource.__docgenInfo={description:"",methods:[{name:"selectedResources",docblock:"the resource selected\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"the resource selected"},{name:"isMultipleSelected",docblock:"is multiple resources selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"is multiple resources selected"},{name:"hasMoreThanThreeResourcesSelected",docblock:"has more than three resources selected\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"has more than three resources selected"},{name:"numberOfResources",docblock:"Get the number of resources\n@returns {string|*}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"string"},{name:"mixed"}]}},description:"Get the number of resources"}],displayName:"DisplayDragResource",props:{resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1}}};var react_list=__webpack_require__("./node_modules/react-list/react-list.js"),react_list_default=__webpack_require__.n(react_list);class CellDefault extends react.Component{get value(){return this.props.value}render(){return react.createElement("div",{title:this.value},this.value)}}CellDefault.propTypes={value:prop_types_default().string.isRequired};const Table_CellDefault=(0,react.memo)(CellDefault);CellDefault.__docgenInfo={description:"This component represents a table cell default",methods:[{name:"value",docblock:"Get the value\n@return {string}",modifiers:["get"],params:[],returns:{type:{name:"string"}},description:"Get the value"}],displayName:"CellDefault",props:{value:{description:"",type:{name:"string"},required:!0}}};var ColumnModel=__webpack_require__("./src/shared/models/column/ColumnModel.js");class CellWrapper extends react.Component{get column(){return this.props.column}get value(){return this.props.value}get propsCell(){const props=this.column.cellRenderer?.props||{};return props.value=this.value,"checkbox"===this.column.id&&(props.checked=this.props.isSelected),props}get columnWidthStyle(){return this.column?.width?{width:`${this.column.width}px`}:null}render(){const Cell=this.column.cellRenderer?.component||Table_CellDefault;return react.createElement("td",{className:`cell-${this.column.id}`,style:this.columnWidthStyle},react.createElement(Cell,this.propsCell))}}CellWrapper.propTypes={value:prop_types_default().any,column:prop_types_default().instanceOf(ColumnModel.Ay).isRequired,isSelected:prop_types_default().bool};const Table_CellWrapper=CellWrapper;CellWrapper.__docgenInfo={description:"This component represents a table cell wrapper",methods:[{name:"column",docblock:"Get column\n@return {ColumnModel}",modifiers:["get"],params:[],returns:{type:{name:"ColumnModel"}},description:"Get column"},{name:"value",docblock:"Get value\n@return {*|string}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[{name:"mixed"},{name:"string"}]}},description:"Get value"},{name:"propsCell",docblock:"Get props for custom cell\n@return {{checked: boolean, value: (*|string)}|{value: (*|string)}}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get props for custom cell"},{name:"columnWidthStyle",docblock:"Get the column width style\n@return {{width: string} | null}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get the column width style"}],displayName:"CellWrapper",props:{value:{description:"",type:{name:"any"},required:!1},column:{description:"",type:{name:"instanceOf",value:"ColumnModel"},required:!0},isSelected:{description:"",type:{name:"bool"},required:!1}}};const TableContext=react.createContext({columns:[],tableWidth:null,tableviewWidth:null,isDraggingColumn:!1,isSelectAllChecked:()=>{},isRowSelected:()=>{},isSortedColumn:()=>{},isSortedAsc:()=>{},canMoveColumn:()=>{},onSortChange:()=>{},onResizeColumn:()=>{},onReorderColumns:()=>{},onStartDraggingColumn:()=>{},onEndDraggingColumn:()=>{},onChangeColumns:()=>{}});class TableContextProvider extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks(),this.createRefs()}get defaultState(){return{columns:this.sanitizeColumnsFromProps,tableWidth:null,tableviewWidth:null,isDraggingColumn:!1,isSelectAllChecked:this.isSelectAllChecked.bind(this),isRowSelected:this.isRowSelected.bind(this),isSortedColumn:this.isSortedColumn.bind(this),isSortedAsc:this.isSortedAsc.bind(this),canMoveColumn:this.canMoveColumn.bind(this),onSortChange:this.handleSortByColumnClick.bind(this),onResizeColumn:this.handleResizeColumn.bind(this),onReorderColumns:this.handleReorderColumns.bind(this),onStartDraggingColumn:this.handleStartDraggingColumns.bind(this),onEndDraggingColumn:this.handleEndDraggingColumns.bind(this),onChangeColumns:this.handleChangeColumns.bind(this)}}bindCallbacks(){this.handleWindowResizeEvent=this.handleWindowResizeEvent.bind(this),this.handleChangeColumnsDebounced=dist_default()(this.handleChangeColumns,2e3)}createRefs(){this.tableviewRef=react.createRef()}componentDidMount(){this.prepareTableColumns(),window.addEventListener("resize",this.handleWindowResizeEvent)}get sanitizeColumnsFromProps(){const columns=[...this.props.columns];return columns.some((column=>column.width<0))&&columns.forEach((column=>column.width=column.defaultWidth)),columns}prepareTableColumns(){const tableWidth=this.getTableWidth(this.state.columns);if(this.state.columns.some((column=>column.width!==column.defaultWidth))){const tableviewWidth=this.tableviewRef.current.clientWidth;this.setState({tableWidth,tableviewWidth})}else this.setColumnsWidthFromActualWidth(tableWidth)}componentDidUpdate(prevProps){prevProps.columns.length>this.props.columns.length?this.removeColumn():prevProps.columns.length<this.props.columns.length&&this.addColumn()}componentWillUnmount(){window.removeEventListener("resize",this.handleWindowResizeEvent)}removeColumn(){const columns=this.state.columns.filter((column=>this.props.columns.some((defaultColumn=>defaultColumn.id===column.id)))),tableWidth=this.getTableWidth(columns)-6;this.setState({columns,tableWidth})}addColumn(){const columns=[...this.state.columns],indexColumnToAdd=this.props.columns.findIndex((column=>this.state.columns.every((item=>column.id!==item.id))));columns.splice(indexColumnToAdd,0,this.props.columns[indexColumnToAdd]);const tableWidth=this.getTableWidth(columns)+6;this.setState({columns,tableWidth})}handleWindowResizeEvent(){this.state.tableviewWidth>0&&(this.setColumnsWidthFromActualWidth(this.state.tableviewWidth),this.handleChangeColumnsDebounced())}async handleSortByColumnClick(propertyName){this.props.onSortChange?.(propertyName)}handleReorderColumns(fromIndex,toIndex){const columns=[...this.state.columns],column=columns.splice(fromIndex,1)[0];columns.splice(toIndex,0,column),this.setState({columns})}handleResizeColumn(index,width){const columns=[...this.state.columns];columns[index].width=width;const tableWidth=this.getTableWidth(columns);this.setState({columns,tableWidth})}handleChangeColumns(){const columns=this.state.columns.map(((column,index)=>({id:column.id,label:column.label,width:column.width,position:index})));this.props.onChange(columns)}getTableWidth(columns){return columns.reduce(((sum,col)=>sum+col.width),0)+this.columnsPaddingWidth}get columnWidthNoResizable(){return this.state.columns.reduce(((sum,col)=>sum+(col.resizable?0:parseFloat(col.width))),0)}get columnsPaddingWidth(){return 6*this.state.columns.length}setColumnsWidthFromActualWidth(actualWidth){const tableviewWidth=this.tableviewRef.current.clientWidth,fixedWidth=this.columnWidthNoResizable+this.columnsPaddingWidth;if(actualWidth>fixedWidth&&tableviewWidth>fixedWidth){const ratio=(tableviewWidth-fixedWidth)/(actualWidth-fixedWidth),columns=[...this.state.columns];columns.forEach((column=>{column.resizable&&(column.width=column.width*ratio)}));const tableWidth=this.getTableWidth(columns);this.setState({columns,tableWidth,tableviewWidth})}}isRowSelected(rowId){return this.props.selectedRowsIds?.some((selectedRow=>rowId===selectedRow))}isSelectAllChecked(){return this.props.rows.length===this.props.selectedRowsIds?.length}isSortedColumn(columnName){return this.props.sorter.propertyName===columnName}isSortedAsc(){return this.props.sorter.asc}canMoveColumn(columnIndex,moveX){const columnMovable=column=>column.draggable,canBeMovedBefore=columnIndex>this.state.columns.findIndex(columnMovable)&&moveX<0,canBeMovedAfter=columnIndex<this.state.columns.reduce(((lastColumnIndex,column,index)=>columnMovable(column)?index:lastColumnIndex),-1)&&moveX>0;return canBeMovedBefore||canBeMovedAfter}handleStartDraggingColumns(){this.setState({isDraggingColumn:!0})}handleEndDraggingColumns(){this.setState({isDraggingColumn:!1})}render(){return react.createElement(TableContext.Provider,{value:this.state},react.createElement("div",{ref:this.tableviewRef,className:"tableview"},this.props.children))}}function withTable(WrappedComponent){return class withTable extends react.Component{render(){return react.createElement(TableContext.Consumer,null,(tableContext=>react.createElement(WrappedComponent,{tableContext,...this.props})))}}}TableContextProvider.propTypes={columns:prop_types_default().array.isRequired,rows:prop_types_default().array.isRequired,sorter:prop_types_default().object,selectedRowsIds:prop_types_default().array,onSortChange:prop_types_default().func,onChange:prop_types_default().func,children:prop_types_default().any},TableContextProvider.__docgenInfo={description:"This component represents a  table",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"sanitizeColumnsFromProps",docblock:"Sanitize columns from props to prevent negative width due to wrong calculation\nIf one column width is negative, fallback to default width for all columns\n@returns {*[]}",modifiers:["get"],params:[],returns:{type:{name:"Array",elements:[{name:"mixed"}]}},description:"Sanitize columns from props to prevent negative width due to wrong calculation\nIf one column width is negative, fallback to default width for all columns"},{name:"prepareTableColumns",docblock:"Prepare table columns",modifiers:[],params:[],returns:null,description:"Prepare table columns"},{name:"removeColumn",docblock:"Remove a column",modifiers:[],params:[],returns:null,description:"Remove a column"},{name:"addColumn",docblock:"Add a column",modifiers:[],params:[],returns:null,description:"Add a column"},{name:"handleWindowResizeEvent",docblock:"Handle window resize event",modifiers:[],params:[],returns:null,description:"Handle window resize event"},{name:"handleSortByColumnClick",docblock:"Handle the change of sorter ( on property or direction )\n@param propertyName The name of the property to sort on",modifiers:["async"],params:[{name:"propertyName",description:"The name of the property to sort on",optional:!1}],returns:null,description:"Handle the change of sorter ( on property or direction )"},{name:"handleReorderColumns",docblock:"Handle reorder columns\n@param fromIndex\n@param toIndex",modifiers:[],params:[{name:"fromIndex",optional:!1},{name:"toIndex",optional:!1}],returns:null,description:"Handle reorder columns"},{name:"handleResizeColumn",docblock:"Handle resize column\n@param {number} index The index of the column to resize\n@param {number} width The width to apply\n@return {Promise<void>}",modifiers:[],params:[{name:"index",description:"The index of the column to resize",type:{name:"number"},optional:!1},{name:"width",description:"The width to apply",type:{name:"number"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle resize column"},{name:"handleChangeColumns",docblock:"Handle change columns",modifiers:[],params:[],returns:null,description:"Handle change columns"},{name:"getTableWidth",docblock:"Get the total width for the table in order to have only one column resizing\n@return {number}",modifiers:[],params:[{name:"columns",optional:!1}],returns:{type:{name:"number"}},description:"Get the total width for the table in order to have only one column resizing"},{name:"columnWidthNoResizable",docblock:"Get the sum of columns widths no resizable from default\n@return {number}",modifiers:["get"],params:[],returns:{type:{name:"number"}},description:"Get the sum of columns widths no resizable from default"},{name:"columnsPaddingWidth",docblock:"Get the columns padding widths\n@return {number}",modifiers:["get"],params:[],returns:{type:{name:"number"}},description:"Get the columns padding widths"},{name:"setColumnsWidthFromActualWidth",docblock:"Set the columns width based on actual width of the tableview width to maintain the same proportionality\n@param actualWidth",modifiers:[],params:[{name:"actualWidth",optional:!1}],returns:null,description:"Set the columns width based on actual width of the tableview width to maintain the same proportionality"},{name:"isRowSelected",docblock:"Returns true if the given item is selected\n@param rowId A row id",modifiers:[],params:[{name:"rowId",description:"A row id",optional:!1}],returns:null,description:"Returns true if the given item is selected"},{name:"isSelectAllChecked",docblock:"Is select all checked",modifiers:[],params:[],returns:null,description:"Is select all checked"},{name:"isSortedColumn",docblock:"Check if the grid is sorted for a given column\n@param columnName The column name",modifiers:[],params:[{name:"columnName",description:"The column name",optional:!1}],returns:null,description:"Check if the grid is sorted for a given column"},{name:"isSortedAsc",docblock:"Check if the sort is ascendant.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the sort is ascendant."},{name:"canMoveColumn",docblock:"If column can be moved\n@param columnIndex\n@param moveX\n@return {boolean}",modifiers:[],params:[{name:"columnIndex",optional:!1},{name:"moveX",optional:!1}],returns:{type:{name:"boolean"}},description:"If column can be moved"},{name:"handleStartDraggingColumns",docblock:"On start dragging column",modifiers:[],params:[],returns:null,description:"On start dragging column"},{name:"handleEndDraggingColumns",docblock:"On end dragging column",modifiers:[],params:[],returns:null,description:"On end dragging column"}],displayName:"TableContextProvider",props:{columns:{description:"",type:{name:"array"},required:!0},rows:{description:"",type:{name:"array"},required:!0},sorter:{description:"",type:{name:"object"},required:!1},selectedRowsIds:{description:"",type:{name:"array"},required:!1},onSortChange:{description:"",type:{name:"func"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},children:{description:"",type:{name:"any"},required:!1}}};var getPropValue=__webpack_require__("./src/react-extension/lib/Object/getPropValue.js");class Row extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this),this.handleContextMenu=this.handleContextMenu.bind(this),this.handleDragStart=this.handleDragStart.bind(this),this.handleDragEnd=this.handleDragEnd.bind(this)}handleClick(event){event.preventDefault(),event.stopPropagation(),this.props.onClick(event,this.item)}handleContextMenu(event){event.preventDefault(),this.props.onContextMenu(event,this.item)}handleDragStart(event){this.props.onDragStart(event,this.item,this.isItemSelected)}handleDragEnd(event){this.props.onDragEnd(event)}get columns(){return this.props.tableContext.columns}get item(){return this.props.item}get isItemSelected(){return this.props.tableContext.isRowSelected(this.item.id)}getColumnValue(column,item){return column.getValue?column.getValue(item):(0,getPropValue.A)(item,column.field)}render(){const isSelected=this.isItemSelected;return react.createElement("tr",{id:this.item.id,draggable:"true",className:`${this.props.className} ${isSelected?"selected":""}`,onClick:this.handleClick,onContextMenu:this.handleContextMenu,onDragStart:this.handleDragStart,onDragEnd:this.handleDragEnd},this.columns.map((column=>react.createElement(Table_CellWrapper,{key:column.id,column,isSelected,value:this.getColumnValue(column,this.item)}))))}}Row.propTypes={tableContext:prop_types_default().any,item:prop_types_default().object.isRequired,className:prop_types_default().string,onClick:prop_types_default().func,onContextMenu:prop_types_default().func,onDragStart:prop_types_default().func,onDragEnd:prop_types_default().func};const Table_Row=withTable(Row);Row.__docgenInfo={description:"This component represents a table row",methods:[{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"handleClick",docblock:"Handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle click"},{name:"handleContextMenu",docblock:"Handle context menu\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle context menu"},{name:"handleDragStart",docblock:"Handle drag start\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle drag start"},{name:"handleDragEnd",docblock:"Handle drag end\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle drag end"},{name:"columns",docblock:"Get column\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get column"},{name:"item",docblock:"Get item\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get item"},{name:"isItemSelected",docblock:"Is item selected\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Is item selected"},{name:"getColumnValue",docblock:"Returns the column value to pass to the CellWrapper.\nIt uses the method `getValue` of the column if it exists.\nOtherwise use the item's field value associated to the column.\n@param {Object} column\n@param {Object} item\n@returns {any}",modifiers:[],params:[{name:"column",type:{name:"Object"},optional:!1},{name:"item",type:{name:"Object"},optional:!1}],returns:{type:{name:"any"}},description:"Returns the column value to pass to the CellWrapper.\nIt uses the method `getValue` of the column if it exists.\nOtherwise use the item's field value associated to the column."}],displayName:"Row",props:{tableContext:{description:"",type:{name:"any"},required:!1},item:{description:"",type:{name:"object"},required:!0},className:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1},onContextMenu:{description:"",type:{name:"func"},required:!1},onDragStart:{description:"",type:{name:"func"},required:!1},onDragEnd:{description:"",type:{name:"func"},required:!1}}};var Icon=__webpack_require__("./src/shared/components/Icons/Icon.js");class CellHeaderDefault extends react.Component{render(){return react.createElement("span",{className:"cell-header-text"},this.props.label)}}CellHeaderDefault.propTypes={label:prop_types_default().string.isRequired};const Table_CellHeaderDefault=(0,react.memo)(CellHeaderDefault);CellHeaderDefault.__docgenInfo={description:"This component represents a cell header default",methods:[],displayName:"CellHeaderDefault",props:{label:{description:"",type:{name:"string"},required:!0}}};class CellHeaderWrapper extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks(),this.createRefs()}get defaultState(){return{mouseXPosition:0,move:0,columnToResizeWidth:0,resizing:!1}}bindCallbacks(){this.handleSortByColumnClick=this.handleSortByColumnClick.bind(this),this.handleReorderColumnMouseMoveEvent=this.handleReorderColumnMouseMoveEvent.bind(this),this.handleReorderColumnMouseUpEvent=this.handleReorderColumnMouseUpEvent.bind(this),this.handleResizeColumnMouseDown=this.handleResizeColumnMouseDown.bind(this),this.handleResizeColumnMouseMoveEvent=this.handleResizeColumnMouseMoveEvent.bind(this),this.handleResizeColumnMouseUpEvent=this.handleResizeColumnMouseUpEvent.bind(this),this.handleResizeDefaultByColumnDoubleClick=this.handleResizeDefaultByColumnDoubleClick.bind(this),this.startDragging=this.startDragging.bind(this)}createRefs(){this.columnRef=react.createRef()}handleReorderColumnMouseDownEvent(event){const mouseXPosition=event.clientX;this.setState({mouseXPosition}),this.updatePreviousAndNextColumnWidth(this.columnRef.current.previousSibling?.offsetWidth,this.columnRef.current.nextSibling?.offsetWidth),this.columnRef.current.addEventListener("mousemove",this.startDragging,{once:!0}),document.addEventListener("mousemove",this.handleReorderColumnMouseMoveEvent,{capture:!0}),document.addEventListener("mouseup",this.handleReorderColumnMouseUpEvent,{capture:!0,once:!0})}startDragging(){this.props.tableContext.onStartDraggingColumn()}handleReorderColumnMouseMoveEvent(event){const dx=event.clientX-this.state.mouseXPosition-this.state.move;this.props.tableContext.canMoveColumn(this.props.index,dx)?(this.columnRef.current.style.translate=`${dx}px`,this.previousColumnWidth&&dx<-this.previousColumnWidth/2?(this.props.tableContext.onReorderColumns(this.props.index,this.props.index-1),this.updateColumnPosition(-this.previousColumnWidth,dx),this.updatePreviousAndNextColumnWidth(this.columnRef.current.previousSibling?.offsetWidth,this.previousColumnWidth)):this.nextColumnWidth&&dx>this.nextColumnWidth/2&&(this.props.tableContext.onReorderColumns(this.props.index,this.props.index+1),this.updateColumnPosition(this.nextColumnWidth,dx),this.updatePreviousAndNextColumnWidth(this.nextColumnWidth,this.columnRef.current.nextSibling?.offsetWidth))):this.columnRef.current.style.translate="0px"}handleReorderColumnMouseUpEvent(){this.columnRef.current.style.translate=null,this.updatePreviousAndNextColumnWidth(null,null),this.columnRef.current.removeEventListener("mousemove",this.startDragging),document.removeEventListener("mousemove",this.handleReorderColumnMouseMoveEvent,{capture:!0}),this.props.tableContext.onEndDraggingColumn(),this.setState({mouseXPosition:0,move:0}),this.handleChangeColumn()}handleChangeColumn(){this.props.tableContext.onChangeColumns()}handleSortByColumnClick(event){event.stopPropagation(),this.props.tableContext.onSortChange(this.column.field)}updateColumnPosition(columnPermutedWidth,dx){const move=this.state.move+columnPermutedWidth;this.columnRef.current.style.translate=dx-columnPermutedWidth+"px",this.setState({move})}updatePreviousAndNextColumnWidth(previousColumnWidth,nextColumnWidth){this.previousColumnWidth=previousColumnWidth,this.nextColumnWidth=nextColumnWidth}async handleResizeColumnMouseDown(event){event.stopPropagation();const columnToResizeWidth=this.column.width,mouseXPosition=event.clientX;this.setState({resizing:!0,mouseXPosition,columnToResizeWidth}),document.addEventListener("mousemove",this.handleResizeColumnMouseMoveEvent,{capture:!0}),document.addEventListener("mouseup",this.handleResizeColumnMouseUpEvent,{capture:!0,once:!0})}handleResizeColumnMouseMoveEvent(event){const dx=event.clientX-this.state.mouseXPosition,width=this.state.columnToResizeWidth+dx>50?this.state.columnToResizeWidth+dx:50;this.props.tableContext.onResizeColumn(this.props.index,width)}handleResizeColumnMouseUpEvent(){document.removeEventListener("mousemove",this.handleResizeColumnMouseMoveEvent,{capture:!0}),this.setState({resizing:null,mouseXPosition:0,columnToResizeWidth:0}),this.handleChangeColumn()}handleResizeDefaultByColumnDoubleClick(){this.props.tableContext.onResizeColumn(this.props.index,this.column.defaultWidth),this.handleChangeColumn()}isSortedColumn(columnName){return this.props.tableContext.isSortedColumn(columnName)}isSortedAsc(){return this.props.tableContext.isSortedAsc()}get column(){return this.props.column}get propsCellHeader(){const props=this.column.headerCellRenderer?.props||{};return"checkbox"===this.column.id?props.checked=this.props.tableContext.isSelectAllChecked():props.label=props.label||this.column.label,props}get columnWidthStyle(){return this.column?.width?{width:`${this.column.width}px`}:null}render(){const CellHeader=this.column.headerCellRenderer?.component||Table_CellHeaderDefault;return react.createElement("th",{key:this.column.id,className:`cell-${this.column.id} selections ${this.column.draggable?"draggable":""} ${this.column.sortable?"sortable":""}`,style:this.columnWidthStyle,ref:this.columnRef,onMouseDown:event=>this.column.draggable?this.handleReorderColumnMouseDownEvent(event):void 0},!this.column.sortable&&react.createElement("div",{className:"cell-header"},react.createElement(CellHeader,this.propsCellHeader)),this.column.sortable&&react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleSortByColumnClick},react.createElement("div",{className:"cell-header"},react.createElement(CellHeader,this.propsCellHeader),react.createElement("span",{className:"cell-header-icon-sort"},this.isSortedColumn(this.column.field)&&this.isSortedAsc()&&react.createElement(Icon.A,{name:"ascending"}),this.isSortedColumn(this.column.field)&&!this.isSortedAsc()&&react.createElement(Icon.A,{name:"descending"})))),this.column.resizable&&react.createElement("div",{className:"resizer "+(this.state.resizing?"resizing":""),onMouseDown:this.handleResizeColumnMouseDown,onDoubleClick:this.handleResizeDefaultByColumnDoubleClick}))}}CellHeaderWrapper.propTypes={tableContext:prop_types_default().any,column:prop_types_default().instanceOf(ColumnModel.Ay).isRequired,index:prop_types_default().number.isRequired};const Table_CellHeaderWrapper=withTable(CellHeaderWrapper);CellHeaderWrapper.__docgenInfo={description:"This component represents a table cell header wrapper",methods:[{name:"defaultState",docblock:"Returns the component default state",modifiers:["get"],params:[],returns:null,description:"Returns the component default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods\n@return {void}",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Bind callbacks methods"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"handleReorderColumnMouseDownEvent",docblock:"Handle the drag start on the column\n@param event The DOM event\n@returns {Promise<void>}",modifiers:[],params:[{name:"event",description:"The DOM event",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the drag start on the column"},{name:"startDragging",docblock:"Start dragging",modifiers:[],params:[],returns:null,description:"Start dragging"},{name:"handleReorderColumnMouseMoveEvent",docblock:"Handle the reorder column mouse move event\n@param event The DOM event",modifiers:[],params:[{name:"event",description:"The DOM event",optional:!1}],returns:null,description:"Handle the reorder column mouse move event"},{name:"handleReorderColumnMouseUpEvent",docblock:"Handle the reorder column mouse up event",modifiers:[],params:[],returns:null,description:"Handle the reorder column mouse up event"},{name:"handleChangeColumn",docblock:"Handle change column",modifiers:[],params:[],returns:null,description:"Handle change column"},{name:"handleSortByColumnClick",docblock:"Handle the change of sorter ( on property or direction )\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle the change of sorter ( on property or direction )"},{name:"updateColumnPosition",docblock:"Update the column position\n@param columnPermutedWidth\n@param dx",modifiers:[],params:[{name:"columnPermutedWidth",optional:!1},{name:"dx",optional:!1}],returns:null,description:"Update the column position"},{name:"updatePreviousAndNextColumnWidth",docblock:"Update the width of the previous and next column\n@param previousColumnWidth\n@param nextColumnWidth",modifiers:[],params:[{name:"previousColumnWidth",optional:!1},{name:"nextColumnWidth",optional:!1}],returns:null,description:"Update the width of the previous and next column"},{name:"handleResizeColumnMouseDown",docblock:"Handle Mouse down event to prepare the resize\n@param event",modifiers:["async"],params:[{name:"event",optional:!1}],returns:null,description:"Handle Mouse down event to prepare the resize"},{name:"handleResizeColumnMouseMoveEvent",docblock:"Handle Mouse move on document to resize a column\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle Mouse move on document to resize a column"},{name:"handleResizeColumnMouseUpEvent",docblock:"Handle Mouse up on document to end the resize",modifiers:[],params:[],returns:null,description:"Handle Mouse up on document to end the resize"},{name:"handleResizeDefaultByColumnDoubleClick",docblock:"Handle resize default by column double click",modifiers:[],params:[],returns:null,description:"Handle resize default by column double click"},{name:"isSortedColumn",docblock:"Check if the grid is sorted for a given column\n@param columnName The column name",modifiers:[],params:[{name:"columnName",description:"The column name",optional:!1}],returns:null,description:"Check if the grid is sorted for a given column"},{name:"isSortedAsc",docblock:"Check if the sort is ascendant.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Check if the sort is ascendant."},{name:"column",docblock:"Get column\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get column"},{name:"propsCellHeader",docblock:"Get props for custom cell\n@return {object}",modifiers:["get"],params:[],returns:{type:{name:"object"}},description:"Get props for custom cell"},{name:"columnWidthStyle",docblock:"Get the column width style by column name\n@return {{width: string} | null}",modifiers:["get"],params:[],returns:{type:{name:"union",elements:[]}},description:"Get the column width style by column name"}],displayName:"CellHeaderWrapper",props:{tableContext:{description:"",type:{name:"any"},required:!1},column:{description:"",type:{name:"instanceOf",value:"ColumnModel"},required:!0},index:{description:"",type:{name:"number"},required:!0}}};class RowHeader extends react.Component{get columns(){return this.props.tableContext.columns}get isDragging(){return this.props.tableContext.isDraggingColumn}render(){return react.createElement("tr",{className:""+(this.isDragging?"dragging":"")},this.columns.map(((column,index)=>react.createElement(Table_CellHeaderWrapper,{key:column.id,column,index}))))}}RowHeader.propTypes={tableContext:prop_types_default().any};const Table_RowHeader=withTable(RowHeader);RowHeader.__docgenInfo={description:"This component represents a table row header",methods:[{name:"columns",docblock:"Get columns\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get columns"},{name:"isDragging",docblock:null,modifiers:["get"],params:[],returns:null}],displayName:"RowHeader",props:{tableContext:{description:"",type:{name:"any"},required:!1}}};class TableHead extends react.Component{get tableStyleWidth(){return{width:`${this.props.tableContext.tableWidth}px`}}render(){return react.createElement("div",{className:"tableview-header"},react.createElement("table",{style:this.tableStyleWidth},react.createElement("thead",null,react.createElement(Table_RowHeader,null))))}}TableHead.propTypes={tableContext:prop_types_default().any};const Table_TableHead=withTable(TableHead);TableHead.__docgenInfo={description:"This component represents a table head",methods:[{name:"tableStyleWidth",docblock:"Get table style width\n@return {{width: string}}",modifiers:["get"],params:[],returns:{},description:"Get table style width"}],displayName:"TableHead",props:{tableContext:{description:"",type:{name:"any"},required:!1}}};class TableBody extends react.Component{get tableBodyStyle(){return{MozUserSelect:"none",WebkitUserSelect:"none",msUserSelect:"none",width:`${this.props.tableContext.tableWidth}px`}}render(){return react.createElement("table",{style:this.tableBodyStyle},react.createElement("tbody",{ref:this.props.tableBodyRef},this.props.items))}}TableBody.propTypes={tableContext:prop_types_default().any,items:prop_types_default().array.isRequired,tableBodyRef:prop_types_default().any};const Table_TableBody=withTable(TableBody);TableBody.__docgenInfo={description:"This component represents a table body",methods:[{name:"tableBodyStyle",docblock:"Get table style width\n@return {{width: string}}",modifiers:["get"],params:[],returns:{},description:"Get table style width"}],displayName:"TableBody",props:{tableContext:{description:"",type:{name:"any"},required:!1},items:{description:"",type:{name:"array"},required:!0},tableBodyRef:{description:"",type:{name:"any"},required:!1}}};class GridTable extends react.Component{renderItem(index,key){const item=this.props.rows[index];return react.createElement(Table_Row,{key,item,className:index%2==0?"even":"odd",onClick:this.props.onRowClick,onContextMenu:this.props.onRowContextMenu,onDragStart:this.props.onRowDragStart,onDragEnd:this.props.onRowDragEnd})}renderTable(items,ref){return react.createElement(Table_TableBody,{items,tableBodyRef:ref})}render(){const hasRows=null!==this.props.rows;return react.createElement(TableContextProvider,{columns:this.props.columns,rows:this.props.rows,selectedRowsIds:this.props.selectedRowsIds,sorter:this.props.sorter,onSortChange:this.props.onSortChange,onChange:this.props.onChange},react.createElement(Table_TableHead,null),hasRows&&react.createElement("div",{className:"tableview-content"},react.createElement(react_list_default(),{itemRenderer:(index,key)=>this.renderItem(index,key),itemsRenderer:(items,ref)=>this.renderTable(items,ref),length:this.props.rows.length,pageSize:20,minSize:20,type:"uniform",ref:this.props.rowsRef})))}}GridTable.propTypes={columns:prop_types_default().array.isRequired,rows:prop_types_default().array.isRequired,sorter:prop_types_default().object,selectedRowsIds:prop_types_default().array,onSortChange:prop_types_default().func,onRowClick:prop_types_default().func,onRowContextMenu:prop_types_default().func,onRowDragStart:prop_types_default().func,onRowDragEnd:prop_types_default().func,onChange:prop_types_default().func,rowsRef:prop_types_default().any};const Table_GridTable=GridTable;GridTable.__docgenInfo={description:"This component represents a grid table",methods:[{name:"renderItem",docblock:"Render item rows\n@param index\n@param key\n@return {JSX.Element}",modifiers:[],params:[{name:"index",optional:!1},{name:"key",optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Render item rows"},{name:"renderTable",docblock:"Render table for rows\n@param items\n@param ref\n@return {JSX.Element}",modifiers:[],params:[{name:"items",optional:!1},{name:"ref",optional:!1}],returns:{type:{name:"JSX.Element"}},description:"Render table for rows"}],displayName:"GridTable",props:{columns:{description:"",type:{name:"array"},required:!0},rows:{description:"",type:{name:"array"},required:!0},sorter:{description:"",type:{name:"object"},required:!1},selectedRowsIds:{description:"",type:{name:"array"},required:!1},onSortChange:{description:"",type:{name:"func"},required:!1},onRowClick:{description:"",type:{name:"func"},required:!1},onRowContextMenu:{description:"",type:{name:"func"},required:!1},onRowDragStart:{description:"",type:{name:"func"},required:!1},onRowDragEnd:{description:"",type:{name:"func"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},rowsRef:{description:"",type:{name:"any"},required:!1}}};class CellFavorite extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(this.value)}get value(){return this.props.value}render(){const isFavorite=null!==this.value.favorite&&void 0!==this.value.favorite;return react.createElement("button",{type:"button",className:"link no-border no-text "+(isFavorite?"fav":"unfav"),onClick:this.handleClick},react.createElement(Icon.A,{name:"star"}))}}CellFavorite.propTypes={value:prop_types_default().object.isRequired,onClick:prop_types_default().func};const Table_CellFavorite=(0,react.memo)(CellFavorite);CellFavorite.__docgenInfo={description:"This component represents a table cell favorite",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"Handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellFavorite",props:{value:{description:"",type:{name:"object"},required:!0},onClick:{description:"",type:{name:"func"},required:!1}}};class CellHeaderIcon extends react.Component{render(){return react.createElement(Icon.A,{name:this.props.name})}}CellHeaderIcon.propTypes={name:prop_types_default().string.isRequired};const Table_CellHeaderIcon=(0,react.memo)(CellHeaderIcon);CellHeaderIcon.__docgenInfo={description:"This component represents a cell header icon",methods:[],displayName:"CellHeaderIcon",props:{name:{description:"",type:{name:"string"},required:!0}}};class CellLink extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(this.value)}safeLink(link){return(0,sanitizeUrl.A)(link,{whiteListedProtocols:linkAuthorizedProtocols,defaultProtocol:sanitizeUrl.P.HTTPS})||""}get value(){return this.props.value}render(){const safeLink=this.safeLink(this.value);return react.createElement("div",{title:this.value},safeLink&&react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleClick},react.createElement("span",null,this.value)),!safeLink&&react.createElement("span",null,this.value))}}CellLink.propTypes={value:prop_types_default().string,onClick:prop_types_default().func};const Table_CellLink=(0,react.memo)(CellLink),linkAuthorizedProtocols=[sanitizeUrl.P.FTP,sanitizeUrl.P.FTPS,sanitizeUrl.P.HTTPS,sanitizeUrl.P.HTTP,sanitizeUrl.P.SSH];CellLink.__docgenInfo={description:"This component represents a table cell link",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"Handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle click"},{name:"safeLink",docblock:"Get safe uri of a resource\n@param {string} link The resource to get the safe uri for\n@return {string}",modifiers:[],params:[{name:"link",description:"The resource to get the safe uri for",type:{name:"string"},optional:!1}],returns:{type:{name:"string"}},description:"Get safe uri of a resource"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellLink",props:{value:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1}}};var HiddenPassword=__webpack_require__("./src/shared/components/Password/HiddenPassword.js");class CellPassword extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handlePasswordClick=this.handlePasswordClick.bind(this),this.handlePreviewPasswordButtonClick=this.handlePreviewPasswordButtonClick.bind(this)}handlePreviewPasswordButtonClick(event){event.stopPropagation(),this.props.onPreviewPasswordClick(this.value)}async handlePasswordClick(){this.props.onPasswordClick(this.value)}get value(){return this.props.value}render(){const previewedPassword=this.props.getPreviewPassword(this.value),hasPassword=this.props.hasPassword(this.value);return react.createElement(react.Fragment,null,hasPassword&&react.createElement(react.Fragment,null,react.createElement("div",{className:"secret secret-password "+(previewedPassword?"":"secret-copy"),title:previewedPassword||this.props.title},react.createElement(HiddenPassword.A,{canClick:this.props.canCopy,preview:previewedPassword,onClick:this.handlePasswordClick})),this.props.canPreview&&react.createElement("button",{type:"button",onClick:this.handlePreviewPasswordButtonClick,className:"password-view button-transparent"},react.createElement(Icon.A,{name:previewedPassword?"eye-close":"eye-open"}))))}}CellPassword.defaultProps={canPreviewSecret:!1,canCopySecret:!1},CellPassword.propTypes={value:prop_types_default().object.isRequired,title:prop_types_default().string,canPreview:prop_types_default().bool,canCopy:prop_types_default().bool,getPreviewPassword:prop_types_default().func.isRequired,onPasswordClick:prop_types_default().func,onPreviewPasswordClick:prop_types_default().func,hasPassword:prop_types_default().func};const Table_CellPassword=CellPassword;CellPassword.__docgenInfo={description:"This component represents a table cell password",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handlePreviewPasswordButtonClick",docblock:"Handle preview password button click.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle preview password button click."},{name:"handlePasswordClick",docblock:"Handle password button click.",modifiers:["async"],params:[],returns:null,description:"Handle password button click."},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellPassword",props:{canPreviewSecret:{defaultValue:{value:"false",computed:!1},required:!1},canCopySecret:{defaultValue:{value:"false",computed:!1},required:!1},value:{description:"",type:{name:"object"},required:!0},title:{description:"",type:{name:"string"},required:!1},canPreview:{description:"",type:{name:"bool"},required:!1},canCopy:{description:"",type:{name:"bool"},required:!1},getPreviewPassword:{description:"",type:{name:"func"},required:!0},onPasswordClick:{description:"",type:{name:"func"},required:!1},onPreviewPasswordClick:{description:"",type:{name:"func"},required:!1},hasPassword:{description:"",type:{name:"func"},required:!1}}};class CellButton extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(this.value)}get value(){return this.props.value}hasValue(){return Boolean(this.value)}render(){return react.createElement("div",{title:this.value},this.hasValue()&&react.createElement("button",{className:"link no-border",type:"button",onClick:this.handleClick},react.createElement("span",null,this.value)))}}CellButton.propTypes={value:prop_types_default().string,onClick:prop_types_default().func};const Table_CellButton=(0,react.memo)(CellButton);CellButton.__docgenInfo={description:"This component represents a table cell button",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"},{name:"hasValue",docblock:"Has value\n@return {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Has value"}],displayName:"CellButton",props:{value:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1}}};class CellHeaderCheckbox extends react.Component{render(){return react.createElement("div",{className:"input checkbox"},react.createElement("input",{type:"checkbox",name:"select all",checked:this.props.checked,onChange:this.props.onChange}))}}CellHeaderCheckbox.propTypes={checked:prop_types_default().bool.isRequired,onChange:prop_types_default().func};const Table_CellHeaderCheckbox=CellHeaderCheckbox;CellHeaderCheckbox.__docgenInfo={description:"This component represents a cell header checkbox",methods:[],displayName:"CellHeaderCheckbox",props:{checked:{description:"",type:{name:"bool"},required:!0},onChange:{description:"",type:{name:"func"},required:!1}}};class CellCheckbox extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleClick=this.handleClick.bind(this)}handleClick(event){event.stopPropagation(),this.props.onClick(event,this.value)}get value(){return this.props.value}render(){return react.createElement("div",{className:"input checkbox"},react.createElement("input",{type:"checkbox",id:`checkbox_multiple_select_checkbox_${this.value.id}`,checked:this.props.checked,readOnly:!0,onClick:this.handleClick}))}}CellCheckbox.propTypes={value:prop_types_default().object.isRequired,checked:prop_types_default().bool.isRequired,onClick:prop_types_default().func};const CellChecbox=(0,react.memo)(CellCheckbox);CellCheckbox.__docgenInfo={description:"This component represents a table cell button",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handleClick",docblock:"handle click\n@param event",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"}],displayName:"CellCheckbox",props:{value:{description:"",type:{name:"object"},required:!0},checked:{description:"",type:{name:"bool"},required:!0},onClick:{description:"",type:{name:"func"},required:!1}}};class ColumnCheckboxModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.CHECKBOX,columnDto.field=ColumnModel.uH.CHECKBOX,columnDto.width=columnDto.width||20,columnDto.defaultWidth=20,columnDto.resizable=!1,columnDto.draggable=!1,columnDto.sortable=!1,columnDto.getValue=value=>value,super(columnDto)}}const column_ColumnCheckboxModel=ColumnCheckboxModel;class ColumnFavoriteModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.FAVORITE,columnDto.field=ColumnModel.uH.FAVORITE,columnDto.width=columnDto.width||20,columnDto.defaultWidth=20,columnDto.resizable=!1,columnDto.draggable=!1,columnDto.sortable=!0,columnDto.getValue=value=>({id:value.id,favorite:value.favorite}),super(columnDto)}}const column_ColumnFavoriteModel=ColumnFavoriteModel;class ColumnNameModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.NAME,columnDto.field=ColumnModel.uH.METADATA_NAME,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnNameModel=ColumnNameModel;class ColumnUsernameModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.USERNAME,columnDto.field=ColumnModel.uH.METADATA_USERNAME,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnUsernameModel=ColumnUsernameModel;class ColumnPasswordModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.PASSWORD,columnDto.field=ColumnModel.uH.PASSWORD,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!1,columnDto.getValue=value=>value,super(columnDto)}}const column_ColumnPasswordModel=ColumnPasswordModel;class ColumnUriModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.URI,columnDto.field=ColumnModel.uH.METADATA_URIS,columnDto.width=columnDto.width||210,columnDto.defaultWidth=210,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnUriModel=ColumnUriModel;class ColumnModifiedModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.MODIFIED,columnDto.field=ColumnModel.uH.MODIFIED,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnModifiedModel=ColumnModifiedModel;var Totp=__webpack_require__("./src/shared/components/Totp/Totp.js");class CellTotp extends react.Component{constructor(props){super(props),this.bindCallbacks()}bindCallbacks(){this.handleTotpClick=this.handleTotpClick.bind(this),this.handlePreviewTotpButtonClick=this.handlePreviewTotpButtonClick.bind(this)}handlePreviewTotpButtonClick(event){event.stopPropagation(),this.props.onPreviewTotpClick(this.value)}async handleTotpClick(event){event?.stopPropagation(),this.props.onTotpClick(this.value)}get value(){return this.props.value}get previewedTotp(){return this.props.getPreviewTotp(this.value)}render(){const hasTotp=this.props.hasTotp(this.value);return react.createElement(react.Fragment,null,hasTotp&&react.createElement(react.Fragment,null,react.createElement("div",{className:"secret secret-totp "+(this.previewedTotp?"":"secret-copy")},this.previewedTotp&&react.createElement(Totp.A,{totp:this.previewedTotp,canClick:this.props.canCopy,onClick:this.handleTotpClick}),!this.previewedTotp&&react.createElement("button",{type:"button",className:"link no-border",onClick:this.handleTotpClick,disabled:!this.props.canCopy},react.createElement("span",null,"Copy TOTP to clipboard"))),this.props.canPreview&&react.createElement("button",{type:"button",onClick:this.handlePreviewTotpButtonClick,className:"totp-view button-transparent"},react.createElement(Icon.A,{name:this.previewedTotp?"eye-close":"eye-open"}))))}}CellTotp.defaultProps={canPreviewSecret:!1,canCopySecret:!1},CellTotp.propTypes={value:prop_types_default().object.isRequired,title:prop_types_default().string,canPreview:prop_types_default().bool,canCopy:prop_types_default().bool,getPreviewTotp:prop_types_default().func.isRequired,onTotpClick:prop_types_default().func,onPreviewTotpClick:prop_types_default().func,hasTotp:prop_types_default().func};const Table_CellTotp=CellTotp;CellTotp.__docgenInfo={description:"This component represents a table cell totp",methods:[{name:"bindCallbacks",docblock:"Initialize the bindCallback",modifiers:[],params:[],returns:null,description:"Initialize the bindCallback"},{name:"handlePreviewTotpButtonClick",docblock:"Handle preview totp button click.",modifiers:[],params:[{name:"event",optional:!1}],returns:null,description:"Handle preview totp button click."},{name:"handleTotpClick",docblock:"Handle totp button click.",modifiers:["async"],params:[{name:"event",optional:!1}],returns:null,description:"Handle totp button click."},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"},{name:"previewedTotp",docblock:"Get the preview totp\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get the preview totp"}],displayName:"CellTotp",props:{canPreviewSecret:{defaultValue:{value:"false",computed:!1},required:!1},canCopySecret:{defaultValue:{value:"false",computed:!1},required:!1},value:{description:"",type:{name:"object"},required:!0},title:{description:"",type:{name:"string"},required:!1},canPreview:{description:"",type:{name:"bool"},required:!1},canCopy:{description:"",type:{name:"bool"},required:!1},getPreviewTotp:{description:"",type:{name:"func"},required:!0},onTotpClick:{description:"",type:{name:"func"},required:!1},onPreviewTotpClick:{description:"",type:{name:"func"},required:!1},hasTotp:{description:"",type:{name:"func"},required:!1}}};class ColumnTotpModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.TOTP,columnDto.field=ColumnModel.uH.TOTP,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!1,columnDto.getValue=value=>value,super(columnDto)}}const column_ColumnTotpModel=ColumnTotpModel;class ColumnAttentionRequiredModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.ATTENTION_REQUIRED,columnDto.field=ColumnModel.uH.EXPIRED,columnDto.width=columnDto.width||20,columnDto.defaultWidth=20,columnDto.resizable=!1,columnDto.draggable=!1,columnDto.sortable=!0,super(columnDto)}}const column_ColumnAttentionRequiredModel=ColumnAttentionRequiredModel;class CellAttentionRequired extends react.Component{static isAttentionRequiredOnExpiryDate(expirationDate){if(!expirationDate)return!1;return new Date(expirationDate)<=new Date}render(){return CellAttentionRequired.isAttentionRequiredOnExpiryDate(this.props.value)?react.createElement(Icon.A,{name:"exclamation"}):null}}CellAttentionRequired.propTypes={value:prop_types_default().string};const Table_CellAttentionRequired=(0,react.memo)(CellAttentionRequired);CellAttentionRequired.__docgenInfo={description:"This component represents a table cell favorite",methods:[{name:"isAttentionRequiredOnExpiryDate",docblock:"Returns true if the given date is under the current date with the given `aboutToExpireDelay` threshold..\n@param {string} expirationDate the expiration date\n@param {number} aboutToExpireDelay the configuration expiry notification period\n@returns {boolean}\n@private",modifiers:["static"],params:[{name:"expirationDate",description:"the expiration date",type:{name:"string"},optional:!1}],returns:{type:{name:"boolean"}},description:"Returns true if the given date is under the current date with the given `aboutToExpireDelay` threshold.."}],displayName:"CellAttentionRequired",props:{value:{description:"",type:{name:"string"},required:!1}}};class ColumnExpiredModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.EXPIRED,columnDto.field=ColumnModel.uH.EXPIRED,columnDto.width=columnDto.width||145,columnDto.defaultWidth=145,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!0,super(columnDto)}}const column_ColumnExpiredModel=ColumnExpiredModel;class CellDate extends react.Component{render(){if(!this.props.value)return null;const displayedDate=(0,dateUtils.kD)(this.props.value,this.props.t,this.props.locale);return react.createElement("div",{title:this.props.value},displayedDate)}}CellDate.propTypes={value:prop_types_default().string,locale:prop_types_default().string,t:prop_types_default().func};const Table_CellDate=(0,react.memo)(CellDate);CellDate.__docgenInfo={description:"This component represents a table date cell",methods:[],displayName:"CellDate",props:{value:{description:"",type:{name:"string"},required:!1},locale:{description:"",type:{name:"string"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class CellExpiryDate extends react.Component{render(){if(!this.props.value)return null;const displayedDate=(0,dateUtils.Br)(this.props.value,this.props.t,this.props.locale);return react.createElement("div",{title:this.props.value||displayedDate},displayedDate)}}CellExpiryDate.propTypes={value:prop_types_default().string,locale:prop_types_default().string,t:prop_types_default().func};const Table_CellExpiryDate=(0,react.memo)(CellExpiryDate);CellExpiryDate.__docgenInfo={description:"This component represents a table date cell",methods:[],displayName:"CellExpiryDate",props:{value:{description:"",type:{name:"string"},required:!1},locale:{description:"",type:{name:"string"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class ColumnLocationModel extends ColumnModel.Ay{constructor(columnDto={}){columnDto.id=ColumnModel.nN.LOCATION,columnDto.field=ColumnModel.uH.LOCATION,columnDto.width=columnDto.width||210,columnDto.defaultWidth=210,columnDto.resizable=!0,columnDto.draggable=!0,columnDto.sortable=!1,super(columnDto)}}const column_ColumnLocationModel=ColumnLocationModel;var TooltipPortal=__webpack_require__("./src/react-extension/components/Common/Tooltip/TooltipPortal.js");class CellLocation extends react.Component{handleClick(event,id){event.stopPropagation(),this.props.onClick(id)}get value(){return this.props.value}get lastFolder(){return this.value[this.value.length-1]}get tooltipHierarchyFolder(){return this.value.map(((folder,index)=>react.createElement("div",{key:folder.id,className:"folder-level",style:{marginLeft:5*index+"px"}},null!==folder.folder_parent_id&&react.createElement("span",{className:"caret"},"›"),react.createElement("span",null,folder.name))))}render(){return null===this.value?null:0===this.value.length?react.createElement(TooltipPortal.A,{message:react.createElement("span",null,this.props.t("root")),direction:"auto"},react.createElement("button",{className:"link no-border",type:"button",onClick:event=>this.handleClick(event,null)},react.createElement("span",null,react.createElement(Icon.A,{name:"folder"}),react.createElement("span",null,this.props.t("root"))))):react.createElement(TooltipPortal.A,{message:this.tooltipHierarchyFolder,direction:"auto"},react.createElement("button",{className:"link no-border",type:"button",onClick:event=>this.handleClick(event,this.lastFolder.id)},react.createElement("span",null,!this.lastFolder.personal&&react.createElement(Icon.A,{name:"folder-shared"}),this.lastFolder.personal&&react.createElement(Icon.A,{name:"folder"}),this.value.map((folder=>react.createElement("span",{key:folder.id},null!==folder.folder_parent_id&&react.createElement("span",{className:"caret"},"›"),react.createElement("span",null,folder.name)))))))}}CellLocation.propTypes={value:prop_types_default().array.isRequired,onClick:prop_types_default().func,t:prop_types_default().func};const Table_CellLocation=CellLocation;CellLocation.__docgenInfo={description:"This component represents a table cell location",methods:[{name:"handleClick",docblock:"Handle click\n@param event\n@param {string | null} id The folder id",modifiers:[],params:[{name:"event",optional:!1},{name:"id",description:"The folder id",type:{name:"union",elements:[{name:"string"}]},optional:!1}],returns:null,description:"Handle click"},{name:"value",docblock:"Get the value\n@return {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get the value"},{name:"lastFolder",docblock:"Get the last folder\n@returns {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get the last folder"},{name:"tooltipHierarchyFolder",docblock:"Get the tooltip hierarchy folder message",modifiers:["get"],params:[],returns:null,description:"Get the tooltip hierarchy folder message"}],displayName:"CellLocation",props:{value:{description:"",type:{name:"array"},required:!0},onClick:{description:"",type:{name:"func"},required:!1},t:{description:"",type:{name:"func"},required:!1}}};class DisplayResourcesList extends react.Component{defaultColumns=[];constructor(props){super(props),this.state=this.getDefaultState(),this.initEventHandlers(),this.handleFavoriteClickDebounced=dist_default()(this.handleFavoriteUpdate,200),this.createRefs()}getDefaultState(){return{columns:[],previewedCellule:{columnId:null,resourceId:null},plaintextSecretDto:null}}initEventHandlers(){this.handleSelectAllChange=this.handleSelectAllChange.bind(this),this.handleResourceSelected=this.handleResourceSelected.bind(this),this.handleResourceRightClick=this.handleResourceRightClick.bind(this),this.handleResourceDragStartEvent=this.handleResourceDragStartEvent.bind(this),this.handleDragEndEvent=this.handleDragEndEvent.bind(this),this.handleCheckboxWrapperClick=this.handleCheckboxWrapperClick.bind(this),this.handleCopyPasswordClick=this.handleCopyPasswordClick.bind(this),this.handleCopyUsernameClick=this.handleCopyUsernameClick.bind(this),this.handleFavoriteClick=this.handleFavoriteClick.bind(this),this.handleSortByColumnClick=this.handleSortByColumnClick.bind(this),this.handleChangeColumnsSettings=this.handleChangeColumnsSettings.bind(this),this.handleGoToResourceUriClick=this.handleGoToResourceUriClick.bind(this),this.handlePreviewPasswordButtonClick=this.handlePreviewPasswordButtonClick.bind(this),this.handleCopyTotpClick=this.handleCopyTotpClick.bind(this),this.handlePreviewTotpButtonClick=this.handlePreviewTotpButtonClick.bind(this),this.getPreviewPassword=this.getPreviewPassword.bind(this),this.getPreviewTotp=this.getPreviewTotp.bind(this),this.isPasswordResources=this.isPasswordResources.bind(this),this.isTotpResources=this.isTotpResources.bind(this),this.handleLocationClick=this.handleLocationClick.bind(this)}initColumns(){this.defaultColumns.push(new column_ColumnCheckboxModel({cellRenderer:{component:CellChecbox,props:{onClick:this.handleCheckboxWrapperClick}},headerCellRenderer:{component:Table_CellHeaderCheckbox,props:{onChange:this.handleSelectAllChange}}})),this.defaultColumns.push(new column_ColumnFavoriteModel({cellRenderer:{component:Table_CellFavorite,props:{onClick:this.handleFavoriteClick}},headerCellRenderer:{component:Table_CellHeaderIcon,props:{name:"star"}}})),this.hasAttentionRequiredFeature&&this.defaultColumns.push(new column_ColumnAttentionRequiredModel({cellRenderer:{component:Table_CellAttentionRequired},headerCellRenderer:{component:Table_CellHeaderIcon,props:{name:"exclamation"}}})),this.defaultColumns.push(new column_ColumnNameModel({headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("Name")}}})),this.props.passwordExpiryContext.isFeatureEnabled()&&this.defaultColumns.push(new column_ColumnExpiredModel({cellRenderer:{component:Table_CellExpiryDate,props:{locale:this.props.context.locale,t:this.props.t}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("Expiry")}}})),this.defaultColumns.push(new column_ColumnUsernameModel({cellRenderer:{component:Table_CellButton,props:{onClick:this.handleCopyUsernameClick}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("Username")}}})),this.defaultColumns.push(new column_ColumnPasswordModel({cellRenderer:{component:Table_CellPassword,props:{title:this.translate("secret"),getPreviewPassword:this.getPreviewPassword,canCopy:this.canCopySecret,canPreview:this.canPreviewSecret,onPasswordClick:this.handleCopyPasswordClick,onPreviewPasswordClick:this.handlePreviewPasswordButtonClick,hasPassword:this.isPasswordResources}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("Password")}}})),this.props.context.siteSettings.canIUse("totpResourceTypes")&&this.defaultColumns.push(new column_ColumnTotpModel({cellRenderer:{component:Table_CellTotp,props:{title:this.translate("secret"),getPreviewTotp:this.getPreviewTotp,canCopy:this.canCopySecret,canPreview:this.canPreviewSecret,onTotpClick:this.handleCopyTotpClick,onPreviewTotpClick:this.handlePreviewTotpButtonClick,hasTotp:this.isTotpResources}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("TOTP")}}})),this.defaultColumns.push(new column_ColumnUriModel({cellRenderer:{component:Table_CellLink,props:{onClick:this.handleGoToResourceUriClick}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("URI")}}})),this.defaultColumns.push(new column_ColumnModifiedModel({cellRenderer:{component:Table_CellDate,props:{locale:this.props.context.locale,t:this.props.t}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("Modified")}}})),this.canUseFolders&&this.defaultColumns.push(new column_ColumnLocationModel({getValue:resource=>this.props.resourceWorkspaceContext.getHierarchyFolderCache(resource.folder_parent_id),cellRenderer:{component:Table_CellLocation,props:{onClick:this.handleLocationClick,t:this.props.t}},headerCellRenderer:{component:Table_CellHeaderDefault,props:{label:this.translate("Location")}}}))}async componentDidMount(){await this.props.passwordExpiryContext.findSettings(),this.initColumns(),null!==this.columnsResourceSetting&&this.mergeAndSortColumns()}mergeAndSortColumns(){const columnsResourceSetting=this.columnsResourceSetting.toHashTable(),columns=this.defaultColumns.map((column=>Object.assign(new ColumnModel.Ay(column),columnsResourceSetting[column.id])));columns.sort(((columnA,columnB)=>(columnA.position||0)<(columnB.position||0)?-1:1)),this.setState({columns})}componentDidUpdate(prevProps){this.handleResourceScroll();const hasColumnsResourceViewChange=this.columnsResourceSetting?.hasDifferentShowValue(prevProps.resourceWorkspaceContext.columnsResourceSetting);hasColumnsResourceViewChange&&this.mergeAndSortColumns()}shouldComponentUpdate(nextProps,nextState){const{filteredResources,selectedResources,sorter,scrollTo,columnsResourceSetting}=nextProps.resourceWorkspaceContext,hasFilteredResourcesChanged=this.props.resourceWorkspaceContext.filteredResources!==filteredResources,hasSingleSelectedResourceChanged=1===selectedResources.length&&1===this.props.resourceWorkspaceContext.selectedResources.length&&selectedResources[0].id!==this.props.resourceWorkspaceContext.selectedResources[0].id,hasSelectedResourcesLengthChanged=this.props.resourceWorkspaceContext.selectedResources.length!==selectedResources.length,hasSorterChanged=sorter!==this.props.resourceWorkspaceContext.sorter,hasResourceToScrollChange=Boolean(scrollTo.resource&&scrollTo.resource.id),hasResourcePreviewSecretChange=nextState.previewedCellule!==this.state.previewedCellule,hasResourceColumnsChange=nextState.columns!==this.state.columns,hasColumnsResourceViewChange=columnsResourceSetting?.hasDifferentShowValue(this.props.resourceWorkspaceContext.columnsResourceSetting);return(hasFilteredResourcesChanged||hasSingleSelectedResourceChanged||hasSelectedResourcesLengthChanged||hasSorterChanged)&&this.hidePreviewedCellule(),hasFilteredResourcesChanged||hasSelectedResourcesLengthChanged||hasSingleSelectedResourceChanged||hasSorterChanged||hasResourceToScrollChange||hasResourceColumnsChange||hasColumnsResourceViewChange||hasResourcePreviewSecretChange}createRefs(){this.tableviewRef=react.createRef(),this.listRef=react.createRef()}get canUseFolders(){return this.props.context.siteSettings.canIUse("folders")&&this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.FOLDERS_USE)}handleSelectAllChange(event){const operationName=event.target.checked?"all":"none";this.props.resourceWorkspaceContext.onResourceSelected[operationName]()}async handleResourceSelected(event,resource){await this.selectResource(resource,event)}handleSelectResources(resources){const selectedResources=resources;this.setState({selectedFolders:[],selectedResources},(()=>{1===resources.length&&this.props.history.push(`/app/passwords/view/${resources[0].id}`)}))}handleResourceRightClick(event,resource){this.handleSelectResources([resource]);const contextualMenuProps={left:event.pageX,top:event.pageY,resource};this.props.contextualMenuContext.show(DisplayResourcesList_DisplayResourcesListContextualMenu,contextualMenuProps)}async handleCheckboxWrapperClick(event,resource){event&&event.shiftKey?await this.props.resourceWorkspaceContext.onResourceSelected.range(resource):await this.props.resourceWorkspaceContext.onResourceSelected.multiple(resource)}handleResourceScroll(){const resourceToScroll=this.props.resourceWorkspaceContext.scrollTo.resource,hasNotEmptyRange=this.listRef.current?.getVisibleRange().some((value=>value));resourceToScroll&&hasNotEmptyRange&&(this.scrollTo(resourceToScroll.id),this.props.resourceWorkspaceContext.onResourceScrolled())}get resources(){return this.props.resourceWorkspaceContext.filteredResources}get selectedResources(){return this.props.resourceWorkspaceContext.selectedResources}get selectedResourcesIds(){return this.selectedResources.map((resource=>resource.id))}get columnsResourceSetting(){return this.props.resourceWorkspaceContext.columnsResourceSetting}get columnsFiltered(){return this.state.columns.filter((column=>"checkbox"===column.id||column.show))}getPreviewPassword(resource){return this.isCellulePreviewed("password",resource.id)?this.state.plaintextSecretDto?.password:void 0}getPreviewTotp(resource){return this.isCellulePreviewed("totp",resource.id)?this.state.plaintextSecretDto?.totp:void 0}async handleCopyUsernameClick(username){await clipBoard.A.copy(username,this.props.context.port),this.props.actionFeedbackContext.displaySuccess(this.translate("The username has been copied to clipboard"))}async handleCopyPasswordClick(resource){await this.copyPasswordToClipboard(resource.id)}async handlePreviewPasswordButtonClick(resource){await this.togglePreviewPassword(resource.id)}async handleCopyTotpClick(resource){await this.copyTotpToClipboard(resource.id)}async handlePreviewTotpButtonClick(resource){await this.togglePreviewTotp(resource.id)}async copyTotpToClipboard(resourceId){let plaintextSecretDto,code;if(this.isCellulePreviewed("totp",resourceId))plaintextSecretDto=this.state.plaintextSecretDto;else{this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}this.props.progressContext.close()}if(plaintextSecretDto)if(plaintextSecretDto.totp){try{code=TotpCodeGeneratorService.l.generate(plaintextSecretDto.totp)}catch(error){return void await this.props.actionFeedbackContext.displayError(this.translate("Unable to copy the TOTP"))}await clipBoard.A.copy(code,this.props.context.port),await this.props.resourceWorkspaceContext.onResourceCopied(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The TOTP has been copied to clipboard"))}else await this.props.actionFeedbackContext.displayError(this.translate("The TOTP is empty and cannot be copied to clipboard."))}async copyPasswordToClipboard(resourceId){let plaintextSecretDto;if(this.isCellulePreviewed("password",resourceId))plaintextSecretDto=this.state.plaintextSecretDto;else{this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}this.props.progressContext.close()}plaintextSecretDto&&(plaintextSecretDto?.password?.length?(await clipBoard.A.copy(plaintextSecretDto.password,this.props.context.port),await this.props.resourceWorkspaceContext.onResourceCopied(),await this.props.actionFeedbackContext.displaySuccess(this.translate("The password has been copied to clipboard"))):await this.props.actionFeedbackContext.displayError(this.translate("The password is empty and cannot be copied to clipboard.")))}async togglePreviewPassword(resourceId){const isPasswordPreviewedPreviewed=this.isCellulePreviewed("password",resourceId);this.hidePreviewedCellule(),isPasswordPreviewedPreviewed||(await this.previewPassword(resourceId),await this.props.resourceWorkspaceContext.onResourcePreviewed())}hidePreviewedCellule(){this.setState({previewedCellule:null,plaintextSecretDto:null})}async previewPassword(resourceId){let plaintextSecretDto;this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}if(this.props.progressContext.close(),!plaintextSecretDto)return;if(!plaintextSecretDto?.password?.length)return void await this.props.actionFeedbackContext.displayError(this.translate("The password is empty and cannot be previewed."));const previewedCellule={resourceId,columnId:"password"};this.setState({previewedCellule,plaintextSecretDto})}async togglePreviewTotp(resourceId){const isTotpPreviewedPreviewed=this.isCellulePreviewed("totp",resourceId);this.hidePreviewedCellule(),isTotpPreviewedPreviewed||(await this.previewTotp(resourceId),await this.props.resourceWorkspaceContext.onResourcePreviewed())}async previewTotp(resourceId){let plaintextSecretDto;this.props.progressContext.open(this.props.t("Decrypting secret"));try{plaintextSecretDto=await this.decryptResourceSecret(resourceId)}catch(error){"UserAbortsOperationError"!==error.name&&this.props.actionFeedbackContext.displayError(error.message)}if(this.props.progressContext.close(),!plaintextSecretDto)return;if(!plaintextSecretDto.totp)return void await this.props.actionFeedbackContext.displayError(this.translate("The TOTP is empty and cannot be previewed."));const previewedCellule={resourceId,columnId:"totp"};this.setState({previewedCellule,plaintextSecretDto})}decryptResourceSecret(resourceId){return this.props.context.port.request("passbolt.secret.find-by-resource-id",resourceId)}async handleFavoriteClick(resource){await this.handleFavoriteClickDebounced(resource)}handleFavoriteUpdate(resource){null===resource.favorite?this.favoriteResource(resource):this.unfavoriteResource(resource)}async handleSortByColumnClick(sortProperty){this.props.resourceWorkspaceContext.onSorterChanged(sortProperty)}handleChangeColumnsSettings(columns){columns.shift(),this.props.resourceWorkspaceContext.onChangeColumnsSettings(columns)}async handleResourceDragStartEvent(event,resource,isSelected){isSelected||await this.props.resourceWorkspaceContext.onResourceSelected.single(resource);const draggedItems={resources:this.props.resourceWorkspaceContext.selectedResources,folders:[]};this.props.dragContext.onDragStart(event,DisplayResourcesList_DisplayDragResource,draggedItems)}handleDragEndEvent(){this.props.dragContext.onDragEnd()}async selectResource(resource,event){const isMultipleSelection=event&&event.metaKey,isRangeSelection=event&&event.shiftKey;!event||isMultipleSelection?await this.props.resourceWorkspaceContext.onResourceSelected.multiple(resource):isRangeSelection?await this.props.resourceWorkspaceContext.onResourceSelected.range(resource):await this.props.resourceWorkspaceContext.onResourceSelected.single(resource)}async favoriteResource(resource){try{await this.props.context.port.request("passbolt.favorite.add",resource.id),this.displaySuccessNotification(this.translate("The password has been added as a favorite"))}catch(error){this.displayErrorNotification(error.message)}}async unfavoriteResource(resource){try{await this.props.context.port.request("passbolt.favorite.delete",resource.id),this.displaySuccessNotification(this.translate("The password has been removed from favorites"))}catch(error){this.displayErrorNotification(error.message)}}handleLocationClick(folderId){if(folderId)this.props.history.push(`/app/folders/view/${folderId}`);else{const filter={type:ResourceWorkspaceContext.FM.ROOT_FOLDER};this.props.history.push("/app/passwords",{filter})}}displaySuccessNotification(message){this.props.actionFeedbackContext.displaySuccess(message)}displayErrorNotification(message){this.props.actionFeedbackContext.displayError(message)}scrollTo(resourceId){const resourceIndex=this.resources.findIndex((resource=>resource.id===resourceId)),[visibleStartIndex,visibleEndIndex]=this.listRef.current.getVisibleRange();(resourceIndex<visibleStartIndex||resourceIndex>visibleEndIndex)&&this.listRef.current.scrollTo(resourceIndex-1)}handleGoToResourceUriClick(uri){this.props.resourceWorkspaceContext.onGoToResourceUriRequested(uri)}isCellulePreviewed(columnId,resourceId){return this.state.previewedCellule?.columnId===columnId&&this.state.previewedCellule?.resourceId===resourceId}isPasswordResources(resource){return this.props.resourceTypes?.getFirstById(resource.resource_type_id)?.hasPassword()}isTotpResources(resource){return this.props.resourceTypes?.getFirstById(resource.resource_type_id).hasTotp()}get hasAttentionRequiredFeature(){return this.props.passwordExpiryContext.isFeatureEnabled()}get canPreviewSecret(){return this.props.context.siteSettings.canIUse("previewPassword")&&this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.SECRETS_PREVIEW)}get canCopySecret(){return this.props.rbacContext.canIUseUiAction(uiActionEnumeration.e.SECRETS_COPY)}get isReady(){return null!==this.resources}get isGridReady(){return this.isReady&&0!==this.resources.length&&0!==this.columnsFiltered.length}get translate(){return this.props.t}render(){const isEmpty=this.isReady&&0===this.resources.length,filterType=this.props.resourceWorkspaceContext.filter.type;return react.createElement(react.Fragment,null,isEmpty&&react.createElement("div",{className:"tableview empty"},filterType===ResourceWorkspaceContext.FM.TEXT&&react.createElement("div",{className:"empty-content"},react.createElement("h2",null,react.createElement(es.x6,null,"None of your passwords matched this search.")),react.createElement("p",null,react.createElement(es.x6,null,"Try another search or use the left panel to navigate into your passwords."))),filterType===ResourceWorkspaceContext.FM.FAVORITE&&react.createElement("div",{className:"empty-content"},react.createElement("h2",null,react.createElement(es.x6,null,"None of your passwords are yet marked as favorite.")),react.createElement("p",null,react.createElement(es.x6,null,"Add stars to passwords you want to easily find later."))),filterType===ResourceWorkspaceContext.FM.GROUP&&react.createElement("div",{className:"empty-content"},react.createElement("h2",null,react.createElement(es.x6,null,"No passwords are shared with this group yet.")),react.createElement("p",null,react.createElement(es.x6,null,"Share a password with this group or wait for a team member to share one with this group."))),(filterType===ResourceWorkspaceContext.FM.FOLDER||filterType===ResourceWorkspaceContext.FM.ROOT_FOLDER)&&react.createElement("div",{className:"empty-content"},react.createElement("h2",null,react.createElement(es.x6,null,"No passwords in this folder yet.")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here."))),filterType===ResourceWorkspaceContext.FM.SHARED_WITH_ME&&react.createElement("div",{className:"empty-content"},react.createElement("h2",null,react.createElement(es.x6,null,"No passwords are shared with you yet.")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Wait for a team member to share a password with you."))),filterType===ResourceWorkspaceContext.FM.EXPIRED&&react.createElement("div",{className:"empty-content"},react.createElement("h2",null,react.createElement(es.x6,null,"No passwords have expired yet.")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Wait for a password to expire."))),(filterType===ResourceWorkspaceContext.FM.ITEMS_I_OWN||filterType===ResourceWorkspaceContext.FM.RECENTLY_MODIFIED||filterType===ResourceWorkspaceContext.FM.ALL)&&react.createElement(react.Fragment,null,react.createElement("div",{className:"empty-content"},react.createElement("h1",null,react.createElement(es.x6,null,"Welcome to passbolt!")),react.createElement("p",null,react.createElement(es.x6,null,"It does feel a bit empty here.")," ",react.createElement(es.x6,null,"Create your first password or wait for a team member to share one with you."))))),this.isGridReady&&react.createElement(Table_GridTable,{columns:this.columnsFiltered,rows:this.resources,sorter:this.props.resourceWorkspaceContext.sorter,onSortChange:this.handleSortByColumnClick,onChange:this.handleChangeColumnsSettings,onRowClick:this.handleResourceSelected,onRowContextMenu:this.handleResourceRightClick,onRowDragStart:this.handleResourceDragStartEvent,onRowDragEnd:this.handleDragEndEvent,selectedRowsIds:this.selectedResourcesIds,rowsRef:this.listRef}))}}DisplayResourcesList.propTypes={context:prop_types_default().any,rbacContext:prop_types_default().any,resourceWorkspaceContext:prop_types_default().any,resourceTypes:prop_types_default().instanceOf(resourceTypesCollection.A),actionFeedbackContext:prop_types_default().any,contextualMenuContext:prop_types_default().any,passwordExpiryContext:prop_types_default().object,progressContext:prop_types_default().any,history:prop_types_default().any,dragContext:prop_types_default().any,t:prop_types_default().func};const DisplayResourcesList_DisplayResourcesList=(0,AppContext.L)((0,react_router.y)((0,RbacContext.x6)((0,ActionFeedbackContext.ot)((0,ContextualMenuContext.t6)((0,ResourceWorkspaceContext.Qw)((0,ResourceTypesLocalStorageContext.KH)((0,PasswordExpirySettingsContext.f4)((0,DragContext.zk)((0,ProgressContext.E0)((0,es.CI)("common")(DisplayResourcesList)))))))))));DisplayResourcesList.__docgenInfo={description:"This component allows to display the filtered resources into a grid",methods:[{name:"getDefaultState",docblock:"Returns the component default state",modifiers:[],params:[],returns:null,description:"Returns the component default state"},{name:"initEventHandlers",docblock:"Initialize the component event handlers",modifiers:[],params:[],returns:null,description:"Initialize the component event handlers"},{name:"initColumns",docblock:"Init the grid columns.",modifiers:[],params:[],returns:null,description:"Init the grid columns."},{name:"mergeAndSortColumns",docblock:"Merge and sort columns",modifiers:[],params:[],returns:null,description:"Merge and sort columns"},{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"canUseFolders",docblock:"Check if the user can use folders.\n@returns {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Check if the user can use folders."},{name:"handleSelectAllChange",docblock:"Handle the All resources selection\n@param event The DOM event",modifiers:[],params:[{name:"event",description:"The DOM event",optional:!1}],returns:null,description:"Handle the All resources selection"},{name:"handleResourceSelected",docblock:"Handle the resource selection\n@param event The DOM event\n@param resource The selected resource",modifiers:["async"],params:[{name:"event",description:"The DOM event",optional:!1},{name:"resource",description:"The selected resource",optional:!1}],returns:null,description:"Handle the resource selection"},{name:"handleSelectResources",docblock:"Handle when the user selects an element in the grid.\n@param {array} resources The selected resources",modifiers:[],params:[{name:"resources",description:"The selected resources",type:{name:"array"},optional:!1}],returns:null,description:"Handle when the user selects an element in the grid."},{name:"handleResourceRightClick",docblock:"Handle the right click on a resource\n@param event\n@param resource",modifiers:[],params:[{name:"event",optional:!1},{name:"resource",optional:!1}],returns:null,description:"Handle the right click on a resource"},{name:"handleCheckboxWrapperClick",docblock:null,modifiers:["async"],params:[{name:"event",optional:!1,type:null},{name:"resource",optional:!1,type:null}],returns:null},{name:"handleResourceScroll",docblock:"Handles the initial resource scroll ( with a specific manual resource url /password/view/:id )",modifiers:[],params:[],returns:null,description:"Handles the initial resource scroll ( with a specific manual resource url /password/view/:id )"},{name:"resources",docblock:"Returns the current list of filtered resources to display",modifiers:["get"],params:[],returns:null,description:"Returns the current list of filtered resources to display"},{name:"selectedResources",docblock:"Returns the current list of selected resources",modifiers:["get"],params:[],returns:null,description:"Returns the current list of selected resources"},{name:"selectedResourcesIds",docblock:"Get selected resource ids\n@return {*}",modifiers:["get"],params:[],returns:{type:{name:"mixed"}},description:"Get selected resource ids"},{name:"columnsResourceSetting",docblock:"get columns resource setting\n@return {ColumnsResourceSettingCollection}",modifiers:["get"],params:[],returns:{type:{name:"ColumnsResourceSettingCollection"}},description:"get columns resource setting"},{name:"columnsFiltered",docblock:"Get the columns to display\n@return {[]}",modifiers:["get"],params:[],returns:{type:{name:"tuple",elements:[]}},description:"Get the columns to display"},{name:"getPreviewPassword",docblock:"Get the previewed password\n@param {object} resource The resource\n@return {string|undefined}",modifiers:[],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:{type:{name:"union",elements:[{name:"string"}]}},description:"Get the previewed password"},{name:"getPreviewTotp",docblock:"Get preview totp\n@param {object} resource The resource\n@return {object|undefined}",modifiers:[],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:{type:{name:"union",elements:[{name:"object"}]}},description:"Get preview totp"},{name:"handleCopyUsernameClick",docblock:"Handle copy username click\n@param username\n@return {Promise<void>}",modifiers:["async"],params:[{name:"username",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle copy username click"},{name:"handleCopyPasswordClick",docblock:"Handle copy password button click.\n@param {object} resource The resource",modifiers:["async"],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:null,description:"Handle copy password button click."},{name:"handlePreviewPasswordButtonClick",docblock:"Handle preview password button click.\n@param {object} resource The resource to preview the password for",modifiers:["async"],params:[{name:"resource",description:"The resource to preview the password for",type:{name:"object"},optional:!1}],returns:null,description:"Handle preview password button click."},{name:"handleCopyTotpClick",docblock:"Handle copy totp button click.\n@param {object} resource The resource",modifiers:["async"],params:[{name:"resource",description:"The resource",type:{name:"object"},optional:!1}],returns:null,description:"Handle copy totp button click."},{name:"handlePreviewTotpButtonClick",docblock:"Handle preview totp button click.\n@param {object} resource The resource to preview the totp for",modifiers:["async"],params:[{name:"resource",description:"The resource to preview the totp for",type:{name:"object"},optional:!1}],returns:null,description:"Handle preview totp button click."},{name:"copyTotpToClipboard",docblock:"Handle copy totp\n@param resource The resource\n@return {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle copy totp"},{name:"copyPasswordToClipboard",docblock:"Copy a resource secret to clipboard.\n@param {string} resourceId The target resource id\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The target resource id",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Copy a resource secret to clipboard."},{name:"togglePreviewPassword",docblock:"Toggle preview password for a given resource\n@param {string} resourceId The resource id to preview the password for\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview the password for",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle preview password for a given resource"},{name:"hidePreviewedCellule",docblock:"Hide the previewed cellule.",modifiers:[],params:[],returns:null,description:"Hide the previewed cellule."},{name:"previewPassword",docblock:"Preview password for a given resource\n@param {string} resourceId The resource id to preview the password for\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview the password for",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Preview password for a given resource"},{name:"togglePreviewTotp",docblock:"Toggle preview totp for a given resource\n@param {string} resourceId The resource id to preview the password for\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview the password for",type:{name:"string"},optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Toggle preview totp for a given resource"},{name:"previewTotp",docblock:"Preview totp\n@param {string} resourceId The resource id to preview",modifiers:["async"],params:[{name:"resourceId",description:"The resource id to preview",type:{name:"string"},optional:!1}],returns:null,description:"Preview totp"},{name:"decryptResourceSecret",docblock:"Decrypt the resource secret\n@param {string} resourceId The target resource id\n@returns {Promise<object>} The secret in plaintext format\n@throw UserAbortsOperationError If the user cancel the operation",modifiers:[],params:[{name:"resourceId",description:"The target resource id",type:{name:"string"},optional:!1}],returns:{description:"The secret in plaintext format",type:{name:"Promise",elements:[{name:"object"}]}},description:"Decrypt the resource secret"},{name:"handleFavoriteClick",docblock:null,modifiers:["async"],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"handleFavoriteUpdate",docblock:null,modifiers:[],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"handleSortByColumnClick",docblock:"Handle the resource sorter change\n@param sortProperty The resource property to sort on",modifiers:["async"],params:[{name:"sortProperty",description:"The resource property to sort on",optional:!1}],returns:null,description:"Handle the resource sorter change"},{name:"handleChangeColumnsSettings",docblock:"Handle change columns settings\n@param columns",modifiers:[],params:[{name:"columns",optional:!1}],returns:null,description:"Handle change columns settings"},{name:"handleResourceDragStartEvent",docblock:"Handle the drag start on the selected resource\n@param event The DOM event\n@param resource The selected resource\n@param isSelected is resource selected\n@returns {Promise<void>}",modifiers:["async"],params:[{name:"event",description:"The DOM event",optional:!1},{name:"resource",description:"The selected resource",optional:!1},{name:"isSelected",description:"is resource selected",optional:!1}],returns:{type:{name:"Promise",elements:[{name:"void"}]}},description:"Handle the drag start on the selected resource"},{name:"handleDragEndEvent",docblock:"Handle when the user stop dragging content.",modifiers:[],params:[],returns:null,description:"Handle when the user stop dragging content."},{name:"selectResource",docblock:"Select the resource given the selection event.\nIf no event is provided, the selection is considered as multiple\n@param resource\n@param event",modifiers:["async"],params:[{name:"resource",optional:!1},{name:"event",optional:!1}],returns:null,description:"Select the resource given the selection event.\nIf no event is provided, the selection is considered as multiple"},{name:"favoriteResource",docblock:null,modifiers:["async"],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"unfavoriteResource",docblock:null,modifiers:["async"],params:[{name:"resource",optional:!1,type:null}],returns:null},{name:"handleLocationClick",docblock:"Handle the user click on location folder from the grid.",modifiers:[],params:[{name:"folderId",optional:!1}],returns:null,description:"Handle the user click on location folder from the grid."},{name:"displaySuccessNotification",docblock:"Display success notification (toaster)\n@param message",modifiers:[],params:[{name:"message",optional:!1}],returns:null,description:"Display success notification (toaster)"},{name:"displayErrorNotification",docblock:"Display error notification (toaster)\n@param message",modifiers:[],params:[{name:"message",optional:!1}],returns:null,description:"Display error notification (toaster)"},{name:"scrollTo",docblock:"Triggers a scroll of the grid to a resource given its id, if the resource is not visible yet.\n@param {string} resourceId",modifiers:[],params:[{name:"resourceId",type:{name:"string"},optional:!1}],returns:null,description:"Triggers a scroll of the grid to a resource given its id, if the resource is not visible yet."},{name:"handleGoToResourceUriClick",docblock:"Whenever the user wants to follow a resource uri.\n@param {string} uri The uri",modifiers:[],params:[{name:"uri",description:"The uri",type:{name:"string"},optional:!1}],returns:null,description:"Whenever the user wants to follow a resource uri."},{name:"isCellulePreviewed",docblock:"Check if the password of the given resource is previewed.\n@param {string} columnId The column id.\n@param {string} resourceId The resource id.\n@returns {boolean}",modifiers:[],params:[{name:"columnId",description:"The column id.",type:{name:"string"},optional:!1},{name:"resourceId",description:"The resource id.",type:{name:"string"},optional:!1}],returns:{type:{name:"boolean"}},description:"Check if the password of the given resource is previewed."},{name:"isPasswordResources",docblock:"Is password resource\n@param resource\n@return {boolean}",modifiers:[],params:[{name:"resource",optional:!1}],returns:{type:{name:"boolean"}},description:"Is password resource"},{name:"isTotpResources",docblock:"Is TOTP resource\n@param resource\n@return {boolean}",modifiers:[],params:[{name:"resource",optional:!1}],returns:{type:{name:"boolean"}},description:"Is TOTP resource"},{name:"hasAttentionRequiredFeature",docblock:'Returns true if the "attention required" column feature is available.\n@returns {boolean}',modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:'Returns true if the "attention required" column feature is available.'},{name:"canPreviewSecret",docblock:"Can preview secret\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can preview secret"},{name:"canCopySecret",docblock:"Can copy secret\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Can copy secret"},{name:"isReady",docblock:"Is ready\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is ready"},{name:"isGridReady",docblock:"Is grid ready and not empty\n@return {boolean}",modifiers:["get"],params:[],returns:{type:{name:"boolean"}},description:"Is grid ready and not empty"},{name:"translate",docblock:"Get the translate function\n@returns {function(...[*]=)}",modifiers:["get"],params:[],returns:{},description:"Get the translate function"}],displayName:"DisplayResourcesList",props:{context:{description:"",type:{name:"any"},required:!1},rbacContext:{description:"",type:{name:"any"},required:!1},resourceWorkspaceContext:{description:"",type:{name:"any"},required:!1},resourceTypes:{description:"",type:{name:"instanceOf",value:"ResourceTypesCollection"},required:!1},actionFeedbackContext:{description:"",type:{name:"any"},required:!1},contextualMenuContext:{description:"",type:{name:"any"},required:!1},passwordExpiryContext:{description:"",type:{name:"object"},required:!1},progressContext:{description:"",type:{name:"any"},required:!1},history:{description:"",type:{name:"any"},required:!1},dragContext:{description:"",type:{name:"any"},required:!1},t:{description:"",type:{name:"func"},required:!1}}}},"./src/react-extension/components/Resource/PasswordExpiryDialog/PasswordExpiryDialog.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>PasswordExpiryDialog_PasswordExpiryDialog});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),AppContext=__webpack_require__("./src/shared/context/AppContext/AppContext.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),DialogWrapper=__webpack_require__("./src/react-extension/components/Common/Dialog/DialogWrapper/DialogWrapper.js"),FormCancelButton=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormCancelButton.js"),FormSubmitButton=__webpack_require__("./src/react-extension/components/Common/Inputs/FormSubmitButton/FormSubmitButton.js"),Icon=__webpack_require__("./src/shared/components/Icons/Icon.js"),PasswordExpirySettingsContext=__webpack_require__("./src/react-extension/contexts/PasswordExpirySettingsContext.js"),NotifyError=__webpack_require__("./src/react-extension/components/Common/Error/NotifyError/NotifyError.js"),DialogContext=__webpack_require__("./src/react-extension/contexts/DialogContext.js"),ActionFeedbackContext=__webpack_require__("./src/react-extension/contexts/ActionFeedbackContext.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),dateUtils=__webpack_require__("./src/shared/utils/dateUtils.js");const PasswordExpiryOptionEnum={AUTOMATIC:"automatic",MANUAL:"manual",NEVER:"never"};class PasswordExpiryDialogViewModel{constructor(settings={}){this.passwordExpiryDurationInDay=settings.passwordExpiryDurationInDay,this.passwordExpiryDate=settings.passwordExpiryDate,this.passwordExpiryOption=settings.passwordExpiryOption}static getSchema(){return{type:"object",required:["passwordExpiryDurationInDay","passwordExpiryDate","passwordExpiryOption"],properties:{passwordExpiryDurationInDay:{type:"integer",maximum:999,minimum:-99},passwordExpiryDate:{type:"string",pattern:/\d{4}-\d{2}-\d{2}/},passwordExpiryOption:{type:"string",enum:PasswordExpiryOptionEnum}}}}static fromEntityDto(entityDto){const passwordExpiryDurationInDay=entityDto?.default_expiry_period||90,passwordExpiryDate=luxon.c9.utc().plus({days:passwordExpiryDurationInDay}).toFormat("yyyy-MM-dd");return new PasswordExpiryDialogViewModel({passwordExpiryDurationInDay,passwordExpiryDate,passwordExpiryOption:PasswordExpiryOptionEnum.AUTOMATIC})}toDto(){return{passwordExpiryDurationInDay:this.passwordExpiryDurationInDay,passwordExpiryDate:this.passwordExpiryDate,passwordExpiryOption:this.passwordExpiryOption}}getExpiryDateToApply(){let date;switch(this.passwordExpiryOption){case PasswordExpiryOptionEnum.AUTOMATIC:date=luxon.c9.utc().plus({days:this.passwordExpiryDurationInDay});break;case PasswordExpiryOptionEnum.MANUAL:date=luxon.c9.fromFormat(this.passwordExpiryDate,"yyyy-MM-dd",{zone:"UTC"});break;case PasswordExpiryOptionEnum.NEVER:date=null;break;default:throw new Error(`Unsuppored Password Expiry dialog option '${this.passwordExpiryOption}'`)}return(0,dateUtils.B7)(date)}mapResourcesToPasswordExpiryDto(resourceList){const expiryDate=this.getExpiryDateToApply();return resourceList.map((resource=>({id:resource.id,expired:expiryDate})))}validate(){switch(this.passwordExpiryOption){case PasswordExpiryOptionEnum.AUTOMATIC:return this.validatePasswordExpiryDurationInDay();case PasswordExpiryOptionEnum.MANUAL:return this.validatePasswordExpiryDate()}return new entityValidationError.A}validatePasswordExpiryDurationInDay(){const schema=PasswordExpiryDialogViewModel.getSchema();try{entitySchema.A.validateProp("passwordExpiryDurationInDay",this.passwordExpiryDurationInDay,schema.properties.passwordExpiryDurationInDay)}catch(e){if(!(e instanceof entityValidationError.A))throw e;return e}return new entityValidationError.A}validatePasswordExpiryDate(){const schema=PasswordExpiryDialogViewModel.getSchema();try{entitySchema.A.validateProp("passwordExpiryDate",this.passwordExpiryDate,schema.properties.passwordExpiryDate)}catch(e){if(!(e instanceof entityValidationError.A))throw e;return e}return new entityValidationError.A}}const passwordExpirySettings_PasswordExpiryDialogViewModel=PasswordExpiryDialogViewModel;class PasswordExpiryDialog extends react.Component{constructor(props){super(props),this.state=this.defaultState,this.bindCallbacks()}get defaultState(){const settings=this.props.passwordExpiryContext.getSettings();return{hasBeenSubmitted:!1,processing:!1,passwordExpiryDialogViewModel:passwordExpirySettings_PasswordExpiryDialogViewModel.fromEntityDto(settings),errors:null}}bindCallbacks(){this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleDurationInDayChange=this.handleDurationInDayChange.bind(this),this.handleDuration=this.handleDurationInDayChange.bind(this),this.handleDateChange=this.handleDateChange.bind(this),this.selectExpiryOption=this.selectExpiryOption.bind(this)}handleDurationInDayChange(event){if(event.target.value.toString().length>3)return void event.preventDefault();const newExpiryDurationInDay={passwordExpiryDurationInDay:parseInt(event.target.value,10)};this.selectExpiryOption(PasswordExpiryOptionEnum.AUTOMATIC,newExpiryDurationInDay)}handleDateChange(event){const newPasswordExpiryDate={passwordExpiryDate:event.target.value};this.selectExpiryOption(PasswordExpiryOptionEnum.MANUAL,newPasswordExpiryDate)}selectExpiryOption(passwordExpiryOption,newInputFieldDate={}){const data=Object.assign({},this.state.passwordExpiryDialogViewModel.toDto(),newInputFieldDate,{passwordExpiryOption}),newState={passwordExpiryDialogViewModel:new passwordExpirySettings_PasswordExpiryDialogViewModel(data)};this.state.hasBeenSubmitted?(newState.errors=this.state.passwordExpiryDialogViewModel.validate(),this.setState(newState)):this.setState(newState)}hasAllInputDisabled(){return this.state.processing}handleError(error){this.props.dialogContext.open(NotifyError.A,{error})}displayErrors(errors){return react.createElement("span",{className:"error-message"},Object.keys(errors).map((errorKey=>react.createElement(react.Fragment,null,errors[errorKey]))))}get resourceCount(){return this.props.resources.length}async handleFormSubmit(e){e.preventDefault();const errors=this.state.passwordExpiryDialogViewModel.validate();if(this.setState({hasBeenSubmitted:!0,errors}),errors.hasErrors())return;this.setState({processing:!0});const resourceExpirationDto=this.state.passwordExpiryDialogViewModel.mapResourcesToPasswordExpiryDto(this.props.resources);try{await this.props.context.port.request("passbolt.resources.set-expiration-date",resourceExpirationDto),this.props.actionFeedbackContext.displaySuccess(this.props.t("The expiry date of the selected resource has been updated.",{count:this.props.resources.length})),this.setState({processing:!1}),this.props.onClose()}catch(e){this.handleError(e),this.setState({processing:!1})}}render(){const viewModel=this.state.passwordExpiryDialogViewModel,isDisabled=this.hasAllInputDisabled(),errors=this.state.errors;return react.createElement(DialogWrapper.A,{className:"password-expiry-dialog",title:this.props.t("Set an expiry date",{count:this.resourceCount}),onClose:this.props.onClose,disabled:isDisabled},react.createElement("form",{onSubmit:this.handleFormSubmit,noValidate:!0},react.createElement("div",{className:"form-content"},react.createElement("div",{className:"radiolist-alt"},react.createElement("div",{className:"input radio"},react.createElement("label",{htmlFor:"passwordExpiryOptionAutomatic"},react.createElement("input",{type:"radio",value:PasswordExpiryOptionEnum.AUTOMATIC,onChange:()=>this.selectExpiryOption(PasswordExpiryOptionEnum.AUTOMATIC),name:"passwordExpiryOption",checked:viewModel.passwordExpiryOption===PasswordExpiryOptionEnum.AUTOMATIC,id:"passwordExpiryOptionAutomatic",disabled:this.hasAllInputDisabled()}),react.createElement("span",null,react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Set the date automatically:")),react.createElement("span",{className:"info"},react.createElement("input",{type:"number",value:viewModel.passwordExpiryDurationInDay,id:"passwordExpiryDateAutomatic",name:"passwordExpiryDurationInDay",onChange:this.handleDurationInDayChange,disabled:this.hasAllInputDisabled(),min:"1",max:"365"}),react.createElement(es.x6,null,"days from now.")),errors?.hasError("passwordExpiryDurationInDay")&&this.displayErrors(errors.getError("passwordExpiryDurationInDay"))))),react.createElement("div",{className:"input radio"},react.createElement("label",{htmlFor:"passwordExpiryOptionManual"},react.createElement("input",{type:"radio",value:PasswordExpiryOptionEnum.MANUAL,onChange:()=>this.selectExpiryOption(PasswordExpiryOptionEnum.MANUAL),name:"passwordExpiryOption",checked:viewModel.passwordExpiryOption===PasswordExpiryOptionEnum.MANUAL,id:"passwordExpiryOptionManual",disabled:this.hasAllInputDisabled()}),react.createElement("span",null,react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Set the date manually:")),react.createElement("span",{className:"info date-wrapper"},react.createElement("div",{className:"button-inline"},react.createElement("input",{className:"fluid form-element "+(viewModel.passwordExpiryDate?"":"empty"),type:"date",value:viewModel.passwordExpiryDate,id:"passwordExpiryDateManual",name:"passwordExpiryDate",onChange:this.handleDateChange,disabled:this.hasAllInputDisabled()}),react.createElement(Icon.A,{name:"calendar"}))),errors?.hasError("passwordExpiryDate")&&this.displayErrors(errors.getError("passwordExpiryDate"))))),react.createElement("div",{className:"input radio"},react.createElement("label",{htmlFor:"passwordExpiryOptionNever"},react.createElement("input",{type:"radio",value:PasswordExpiryOptionEnum.NEVER,onChange:()=>this.selectExpiryOption(PasswordExpiryOptionEnum.NEVER),name:"passwordExpiryOption",checked:viewModel.passwordExpiryOption===PasswordExpiryOptionEnum.NEVER,id:"passwordExpiryOptionNever",disabled:this.hasAllInputDisabled()}),react.createElement("span",null,react.createElement("span",{className:"name"},react.createElement(es.x6,null,"Not set")),react.createElement("span",{className:"info"},react.createElement(es.x6,{count:this.resourceCount},"This resource does not need an expiry date."))))))),react.createElement("div",{className:"submit-wrapper clearfix"},react.createElement(FormCancelButton.A,{disabled:isDisabled,onClick:this.props.onClose}),react.createElement(FormSubmitButton.A,{disabled:isDisabled,processing:this.state.processing,value:this.props.t("Save")}))))}}PasswordExpiryDialog.propTypes={context:prop_types_default().any,onClose:prop_types_default().func,passwordExpiryContext:prop_types_default().object,dialogContext:prop_types_default().object,actionFeedbackContext:prop_types_default().object,t:prop_types_default().func,resources:prop_types_default().arrayOf(Object)};const PasswordExpiryDialog_PasswordExpiryDialog=(0,AppContext.L)((0,DialogContext.z9)((0,PasswordExpirySettingsContext.f4)((0,ActionFeedbackContext.ot)((0,es.CI)("common")(PasswordExpiryDialog)))));PasswordExpiryDialog.__docgenInfo={description:"",methods:[{name:"defaultState",docblock:"Get default state\n@returns {Object}",modifiers:["get"],params:[],returns:{type:{name:"Object"}},description:"Get default state"},{name:"bindCallbacks",docblock:"Bind callbacks methods",modifiers:[],params:[],returns:null,description:"Bind callbacks methods"},{name:"handleDurationInDayChange",docblock:"Handle duration in day input change\n@param {Event} event",modifiers:[],params:[{name:"event",type:{name:"Event"},optional:!1}],returns:null,description:"Handle duration in day input change"},{name:"handleDateChange",docblock:"Handle manual date input change\n@param {Event} event",modifiers:[],params:[{name:"event",type:{name:"Event"},optional:!1}],returns:null,description:"Handle manual date input change"},{name:"selectExpiryOption",docblock:"Change the currently selected expiration option\n@param {string} passwordExpiryOption\n@param {object} [newInputFieldDate]",modifiers:[],params:[{name:"passwordExpiryOption",type:{name:"string"},optional:!1},{name:"newInputFieldDate",optional:!0}],returns:null,description:"Change the currently selected expiration option"},{name:"hasAllInputDisabled",docblock:"Returns true if the input must be disabled.\n@returns {boolean}",modifiers:[],params:[],returns:{type:{name:"boolean"}},description:"Returns true if the input must be disabled."},{name:"handleError",docblock:"Handles error by displaying the NotifyError dialog.\n@param {Error} error",modifiers:[],params:[{name:"error",type:{name:"Error"},optional:!1}],returns:null,description:"Handles error by displaying the NotifyError dialog."},{name:"displayErrors",docblock:"Handles EntityValidationError for displaying on the UI.\n@param {object} errors",modifiers:[],params:[{name:"errors",type:{name:"object"},optional:!1}],returns:null,description:"Handles EntityValidationError for displaying on the UI."},{name:"resourceCount",docblock:"Returns the count of selected resources.\nThis is mainly used to adapt the translations accordingly.\n@returns {number}",modifiers:["get"],params:[],returns:{type:{name:"number"}},description:"Returns the count of selected resources.\nThis is mainly used to adapt the translations accordingly."},{name:"handleFormSubmit",docblock:"Handles form submission\n@param {Event} e",modifiers:["async"],params:[{name:"e",type:{name:"Event"},optional:!1}],returns:null,description:"Handles form submission"}],displayName:"PasswordExpiryDialog",props:{context:{description:"",type:{name:"any"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},passwordExpiryContext:{description:"",type:{name:"object"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1},actionFeedbackContext:{description:"",type:{name:"object"},required:!1},t:{description:"",type:{name:"func"},required:!1},resources:{description:"",type:{name:"arrayOf",value:{name:"custom",raw:"Object"}},required:!1}}}},"./src/react-extension/components/Share/SharePermissionItemSkeleton.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");class SharePermissionItemSkeleton extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{className:"row skeleton"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"avatar"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"aro"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"aro-name"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"aro-details"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"select rights"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"actions"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"shimmer"}))}}SharePermissionItemSkeleton.propTypes={};const __WEBPACK_DEFAULT_EXPORT__=SharePermissionItemSkeleton;SharePermissionItemSkeleton.__docgenInfo={description:"",methods:[],displayName:"SharePermissionItemSkeleton"}},"./src/react-extension/contexts/DragContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>dragContextProvider,CR:()=>DragContext,zk:()=>withDrag});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const DragContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({dragAndDrops:null,dragging:!1,draggedItems:null,onDragStart:()=>{},onDragEnd:()=>{}});class dragContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state=this.defaultState,this.createRefs()}createRefs(){this.elementRef=react__WEBPACK_IMPORTED_MODULE_0__.createRef()}get defaultState(){return{displayDraggedItemsComponent:[],dragging:!1,draggedItems:null,onDragStart:this.handleDragStart.bind(this),onDragEnd:this.handleDragEnd.bind(this)}}async handleDragStart(event,draggedItemComponent,draggedItems){await this.setState({displayDraggedItemsComponent:[{draggedItemComponent}],dragging:!0,draggedItems}),event.dataTransfer.setDragImage(this.elementRef.current,10,10)}async handleDragEnd(){await this.setState({displayDraggedItemsComponent:[],dragging:!1,draggedItems:null})}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(DragContext.Provider,{value:this.state},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"drag-and-drop-wrapper",ref:this.elementRef},this.state.displayDraggedItemsComponent.map(((displayDraggedItemComponent,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(displayDraggedItemComponent.draggedItemComponent,{key:index})))),this.props.children)}}function withDrag(WrappedComponent){return class withDrag extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(DragContext.Consumer,null,(dragContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{dragContext,...this.props})))}}}dragContextProvider.displayName="dragContextProvider",dragContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_1___default().any},dragContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"createRefs",docblock:"Create DOM nodes or React elements references in order to be able to access them programmatically.",modifiers:[],params:[],returns:null,description:"Create DOM nodes or React elements references in order to be able to access them programmatically."},{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"handleDragStart",docblock:"Handle drag start\n@param event\n@param draggedItemComponent\n@param draggedItems",modifiers:["async"],params:[{name:"event",optional:!1},{name:"draggedItemComponent",optional:!1},{name:"draggedItems",optional:!1}],returns:null,description:"Handle drag start"},{name:"handleDragEnd",docblock:"Handle drag end",modifiers:["async"],params:[],returns:null,description:"Handle drag end"}],displayName:"dragContextProvider",props:{children:{description:"",type:{name:"any"},required:!1}}}},"./src/react-extension/contexts/ProgressContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E0:()=>withProgress});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__),_components_Common_Progress_DisplayProgress_DisplayProgress__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/react-extension/components/Common/Progress/DisplayProgress/DisplayProgress.js"),_DialogContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-extension/contexts/DialogContext.js");const ProgressContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({progressDialogProps:null,dialogIndex:null,open:()=>{},updateMessage:()=>{},updateGoals:()=>{},close:()=>{}});class ProgressContextProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.bindCallbacks(),this.state=this.defaultState}get defaultState(){return{progressDialogProps:null,dialogIndex:null,open:this.open,updateMessage:this.updateMessage,updateGoals:this.updateGoals,close:this.close}}bindCallbacks(){this.open=this.open.bind(this),this.updateGoals=this.updateGoals.bind(this),this.updateMessage=this.updateMessage.bind(this),this.close=this.close.bind(this)}open(title,goals,message){const progressDialogProps={title,goals,message};this.setState({progressDialogProps});const dialogIndex=this.props.dialogContext.open(_components_Common_Progress_DisplayProgress_DisplayProgress__WEBPACK_IMPORTED_MODULE_1__.A);this.setState({dialogIndex})}updateMessage(message,completed=!1){const progressDialogProps={...this.state.progressDialogProps,message:message||this.state.progressDialogProps.message,completed};this.setState({progressDialogProps})}async updateGoals(goals){const progressDialogProps={...this.state.progressDialogProps,goals};this.setState({progressDialogProps})}async close(){this.props.dialogContext.close(this.state.dialogIndex);this.setState({progressDialogProps:{},dialogIndex:null})}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ProgressContext.Provider,{value:this.state},this.props.children)}}ProgressContextProvider.displayName="ProgressContextProvider",ProgressContextProvider.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_3___default().any,dialogContext:prop_types__WEBPACK_IMPORTED_MODULE_3___default().object};(0,_DialogContext__WEBPACK_IMPORTED_MODULE_2__.z9)(ProgressContextProvider);function withProgress(WrappedComponent){return class WithProgress extends react__WEBPACK_IMPORTED_MODULE_0__.Component{render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ProgressContext.Consumer,null,(progressContext=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent,{progressContext,...this.props})))}}}ProgressContextProvider.__docgenInfo={description:"The related context provider",methods:[{name:"defaultState",docblock:"Returns the default component state",modifiers:["get"],params:[],returns:null,description:"Returns the default component state"},{name:"bindCallbacks",docblock:"Bind callbacks",modifiers:[],params:[],returns:null,description:"Bind callbacks"},{name:"open",docblock:"Open the progress dialog\n@param {string} title The title\n@param {integer} goals The goals\n@param {string} message The message",modifiers:[],params:[{name:"title",description:"The title",type:{name:"string"},optional:!1},{name:"goals",description:"The goals",type:{name:"integer"},optional:!1},{name:"message",description:"The message",type:{name:"string"},optional:!1}],returns:null,description:"Open the progress dialog"},{name:"updateMessage",docblock:"Update the progress dialog message.\n@param {string} message The message\n@param {boolean} completed The progress is completed.",modifiers:[],params:[{name:"message",description:"The message",type:{name:"string"},optional:!1},{name:"completed",description:"The progress is completed.",type:{name:"boolean"},optional:!0}],returns:null,description:"Update the progress dialog message."},{name:"updateGoals",docblock:"Upate the progress dialog goals.\n@param {integer} goals the goals",modifiers:["async"],params:[{name:"goals",description:"the goals",type:{name:"integer"},optional:!1}],returns:null,description:"Upate the progress dialog goals."},{name:"close",docblock:"Close the progress dialog.",modifiers:["async"],params:[],returns:null,description:"Close the progress dialog."}],displayName:"ProgressContextProvider",props:{children:{description:"",type:{name:"any"},required:!1},dialogContext:{description:"",type:{name:"object"},required:!1}}}},"./src/shared/components/Password/HiddenPassword.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_i18next__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");class HiddenPassword extends react__WEBPACK_IMPORTED_MODULE_0__.Component{handleClick(ev){ev.stopPropagation(),this.props.onClick()}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:"link no-border",onClick:this.handleClick.bind(this),disabled:!this.props.canClick},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"password-typography"},this.props.preview&&Array.from(this.props.preview).map(((char,index)=>/\p{L}/u.test(char)?react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{key:index},char):/\p{N}/u.test(char)?react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{key:index,className:"digit"},char):react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{key:index,className:"special-char"},char))),!this.props.preview&&"Copy password to clipboard"))}}HiddenPassword.defaultProps={preview:null,canClick:!0},HiddenPassword.propTypes={preview:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,canClick:prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool,onClick:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func};const __WEBPACK_DEFAULT_EXPORT__=(0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.CI)("common")(HiddenPassword);HiddenPassword.__docgenInfo={description:"",methods:[{name:"handleClick",docblock:"Handle click on the previewed password component.\n@param ev",modifiers:[],params:[{name:"ev",optional:!1}],returns:null,description:"Handle click on the previewed password component."}],displayName:"HiddenPassword",props:{preview:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"string"},required:!1},canClick:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1},onClick:{description:"",type:{name:"func"},required:!1}}}}}]);