"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[7476],{"./node_modules/fetch-mock/esm/client.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var process=__webpack_require__("./node_modules/process/browser.js"),commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:{};function createCommonjsModule(fn,module){return fn(module={exports:{}},module.exports),module.exports}var s=1e3,m=60*s,h=60*m,d=24*h,w=7*d,y=365.25*d,ms=function(val,options){options=options||{};var type=typeof val;if("string"===type&&val.length>0)return function parse(str){if((str=String(str)).length>100)return;var match=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);if(!match)return;var n=parseFloat(match[1]);switch((match[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return n*y;case"weeks":case"week":case"w":return n*w;case"days":case"day":case"d":return n*d;case"hours":case"hour":case"hrs":case"hr":case"h":return n*h;case"minutes":case"minute":case"mins":case"min":case"m":return n*m;case"seconds":case"second":case"secs":case"sec":case"s":return n*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}(val);if("number"===type&&isFinite(val))return options.long?function fmtLong(ms){var msAbs=Math.abs(ms);if(msAbs>=d)return plural(ms,msAbs,d,"day");if(msAbs>=h)return plural(ms,msAbs,h,"hour");if(msAbs>=m)return plural(ms,msAbs,m,"minute");if(msAbs>=s)return plural(ms,msAbs,s,"second");return ms+" ms"}(val):function fmtShort(ms){var msAbs=Math.abs(ms);if(msAbs>=d)return Math.round(ms/d)+"d";if(msAbs>=h)return Math.round(ms/h)+"h";if(msAbs>=m)return Math.round(ms/m)+"m";if(msAbs>=s)return Math.round(ms/s)+"s";return ms+"ms"}(val);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(val))};function plural(ms,msAbs,n,name){var isPlural=msAbs>=1.5*n;return Math.round(ms/n)+" "+name+(isPlural?"s":"")}var common=function setup(env){function createDebug(namespace){let prevTime,enableOverride=null;function debug(...args){if(!debug.enabled)return;const self=debug,curr=Number(new Date),ms=curr-(prevTime||curr);self.diff=ms,self.prev=prevTime,self.curr=curr,prevTime=curr,args[0]=createDebug.coerce(args[0]),"string"!=typeof args[0]&&args.unshift("%O");let index=0;args[0]=args[0].replace(/%([a-zA-Z%])/g,((match,format)=>{if("%%"===match)return"%";index++;const formatter=createDebug.formatters[format];if("function"==typeof formatter){const val=args[index];match=formatter.call(self,val),args.splice(index,1),index--}return match})),createDebug.formatArgs.call(self,args);(self.log||createDebug.log).apply(self,args)}return debug.namespace=namespace,debug.useColors=createDebug.useColors(),debug.color=createDebug.selectColor(namespace),debug.extend=extend,debug.destroy=createDebug.destroy,Object.defineProperty(debug,"enabled",{enumerable:!0,configurable:!1,get:()=>null===enableOverride?createDebug.enabled(namespace):enableOverride,set:v=>{enableOverride=v}}),"function"==typeof createDebug.init&&createDebug.init(debug),debug}function extend(namespace,delimiter){const newDebug=createDebug(this.namespace+(void 0===delimiter?":":delimiter)+namespace);return newDebug.log=this.log,newDebug}function toNamespace(regexp){return regexp.toString().substring(2,regexp.toString().length-2).replace(/\.\*\?$/,"*")}return createDebug.debug=createDebug,createDebug.default=createDebug,createDebug.coerce=function coerce(val){if(val instanceof Error)return val.stack||val.message;return val},createDebug.disable=function disable(){const namespaces=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map((namespace=>"-"+namespace))].join(",");return createDebug.enable(""),namespaces},createDebug.enable=function enable(namespaces){let i;createDebug.save(namespaces),createDebug.names=[],createDebug.skips=[];const split=("string"==typeof namespaces?namespaces:"").split(/[\s,]+/),len=split.length;for(i=0;i<len;i++)split[i]&&("-"===(namespaces=split[i].replace(/\*/g,".*?"))[0]?createDebug.skips.push(new RegExp("^"+namespaces.substr(1)+"$")):createDebug.names.push(new RegExp("^"+namespaces+"$")))},createDebug.enabled=function enabled(name){if("*"===name[name.length-1])return!0;let i,len;for(i=0,len=createDebug.skips.length;i<len;i++)if(createDebug.skips[i].test(name))return!1;for(i=0,len=createDebug.names.length;i<len;i++)if(createDebug.names[i].test(name))return!0;return!1},createDebug.humanize=ms,createDebug.destroy=function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(env).forEach((key=>{createDebug[key]=env[key]})),createDebug.names=[],createDebug.skips=[],createDebug.formatters={},createDebug.selectColor=function selectColor(namespace){let hash=0;for(let i=0;i<namespace.length;i++)hash=(hash<<5)-hash+namespace.charCodeAt(i),hash|=0;return createDebug.colors[Math.abs(hash)%createDebug.colors.length]},createDebug.enable(createDebug.load()),createDebug},browser=createCommonjsModule((function(module,exports){exports.formatArgs=function formatArgs(args){if(args[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+args[0]+(this.useColors?"%c ":" ")+"+"+module.exports.humanize(this.diff),!this.useColors)return;const c="color: "+this.color;args.splice(1,0,c,"color: inherit");let index=0,lastC=0;args[0].replace(/%[a-zA-Z%]/g,(match=>{"%%"!==match&&(index++,"%c"===match&&(lastC=index))})),args.splice(lastC,0,c)},exports.save=function save(namespaces){try{namespaces?exports.storage.setItem("debug",namespaces):exports.storage.removeItem("debug")}catch(error){}},exports.load=function load(){let r;try{r=exports.storage.getItem("debug")}catch(error){}!r&&void 0!==process&&"env"in process&&(r=process.env.DEBUG);return r},exports.useColors=function useColors(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},exports.storage=function localstorage(){try{return localStorage}catch(error){}}(),exports.destroy=(()=>{let warned=!1;return()=>{warned||(warned=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),exports.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],exports.log=console.debug||console.log||(()=>{}),module.exports=common(exports);const{formatters}=module.exports;formatters.j=function(v){try{return JSON.stringify(v)}catch(error){return"[UnexpectedJSONParseError]: "+error.message}}}));browser.formatArgs,browser.save,browser.load,browser.useColors,browser.storage,browser.destroy,browser.colors,browser.log;let debugFunc,phase="default",namespace="";const newDebug=()=>{debugFunc=browser(namespace?`fetch-mock:${phase}:${namespace}`:`fetch-mock:${phase}`)};newDebug();var debug_1={debug:(...args)=>{debugFunc(...args)},setDebugNamespace:str=>{namespace=str,newDebug()},setDebugPhase:str=>{phase=str||"default",newDebug()},getDebug:namespace=>browser(`fetch-mock:${phase}:${namespace}`)};const{debug,setDebugPhase}=debug_1,FetchMock={mock:function(...args){return setDebugPhase("setup"),args.length&&this.addRoute(args),this._mock()},addRoute:function(uncompiledRoute){debug("Adding route",uncompiledRoute);const route=this.compileRoute(uncompiledRoute),clashes=this.routes.filter((({identifier,method})=>("function"==typeof identifier?identifier===route.identifier:String(identifier)===String(route.identifier))&&(!method||!route.method||method===route.method)));if(!1===this.getOption("overwriteRoutes",route)||!clashes.length)return this._uncompiledRoutes.push(uncompiledRoute),this.routes.push(route);if(!0===this.getOption("overwriteRoutes",route))return clashes.forEach((clash=>{const index=this.routes.indexOf(clash);this._uncompiledRoutes.splice(index,1,uncompiledRoute),this.routes.splice(index,1,route)})),this.routes;if(clashes.length)throw new Error("fetch-mock: Adding route with same name or matcher as existing route. See `overwriteRoutes` option.");this._uncompiledRoutes.push(uncompiledRoute),this.routes.push(route)},_mock:function(){return this.isSandbox||(this.realFetch=this.realFetch||this.global.fetch,this.global.fetch=this.fetchHandler),setDebugPhase(),this},catch:function(response){return this.fallbackResponse&&console.warn("calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response"),this.fallbackResponse=response||"ok",this._mock()},spy:function(route){return this._mock(),route?this.mock(route,this.getNativeFetch()):this.catch(this.getNativeFetch())}},defineShorthand=(methodName,underlyingMethod,shorthandOptions)=>{FetchMock[methodName]=function(matcher,response,options){return this[underlyingMethod](matcher,response,Object.assign(options||{},shorthandOptions))}},defineGreedyShorthand=(methodName,underlyingMethod)=>{FetchMock[methodName]=function(response,options){return this[underlyingMethod]({},response,options)}};defineShorthand("sticky","mock",{sticky:!0}),defineShorthand("once","mock",{repeat:1}),defineGreedyShorthand("any","mock"),defineGreedyShorthand("anyOnce","once"),["get","post","put","delete","head","patch"].forEach((method=>{defineShorthand(method,"mock",{method}),defineShorthand(`${method}Once`,"once",{method}),defineGreedyShorthand(`${method}Any`,method),defineGreedyShorthand(`${method}AnyOnce`,`${method}Once`)}));FetchMock.resetBehavior=function(options={}){(options=>{"function"==typeof options&&(console.warn("Deprecated: Passing fetch-mock reset methods\ndirectly in as handlers for before/after test runner hooks.\nWrap in an arrow function instead e.g. `() => fetchMock.restore()`"),options())})(options);const removeRoutes=(({sticky:removeStickyRoutes})=>routes=>removeStickyRoutes?[]:routes.filter((({sticky})=>sticky)))(options);return this.routes=removeRoutes(this.routes),this._uncompiledRoutes=removeRoutes(this._uncompiledRoutes),this.realFetch&&!this.routes.length&&(this.global.fetch=this.realFetch,this.realFetch=void 0),this.fallbackResponse=void 0,this},FetchMock.resetHistory=function(){return this._calls=[],this._holdingPromises=[],this.routes.forEach((route=>route.reset&&route.reset())),this},FetchMock.restore=FetchMock.reset=function(options){return this.resetBehavior(options),this.resetHistory(),this};var setUpAndTearDown=FetchMock;const{getDebug}=debug_1,responseConfigProps=["body","headers","throws","status","redirectUrl"];class ResponseBuilder{constructor(options){this.debug=getDebug("ResponseBuilder()"),this.debug("Response builder created with options",options),Object.assign(this,options)}exec(){this.debug("building response"),this.normalizeResponseConfig(),this.constructFetchOpts(),this.constructResponseBody();const realResponse=new this.fetchMock.config.Response(this.body,this.options);return[realResponse,this.buildObservableResponse(realResponse)]}sendAsObject(){return!responseConfigProps.some((prop=>this.responseConfig[prop]))||!Object.keys(this.responseConfig).every((key=>responseConfigProps.includes(key)))}normalizeResponseConfig(){"number"==typeof this.responseConfig?(this.debug("building response using status",this.responseConfig),this.responseConfig={status:this.responseConfig}):("string"==typeof this.responseConfig||this.sendAsObject())&&(this.debug("building text response from",this.responseConfig),this.responseConfig={body:this.responseConfig})}validateStatus(status){if(!status)return this.debug("No status provided. Defaulting to 200"),200;if("number"==typeof status&&parseInt(status,10)!==status&&status>=200||status<600)return this.debug("Valid status provided",status),status;throw new TypeError(`fetch-mock: Invalid status ${status} passed on response object.\nTo respond with a JSON object that has status as a property assign the object to body\ne.g. {"body": {"status: "registered"}}`)}constructFetchOpts(){this.options=this.responseConfig.options||{},this.options.url=this.responseConfig.redirectUrl||this.url,this.options.status=this.validateStatus(this.responseConfig.status),this.options.statusText=this.fetchMock.statusTextMap[String(this.options.status)],this.options.headers=new this.fetchMock.config.Headers(this.responseConfig.headers||{})}getOption(name){return this.fetchMock.getOption(name,this.route)}convertToJson(){this.getOption("sendAsJson")&&null!=this.responseConfig.body&&"object"==typeof this.body&&(this.debug("Stringifying JSON response body"),this.body=JSON.stringify(this.body),this.options.headers.has("Content-Type")||this.options.headers.set("Content-Type","application/json"))}setContentLength(){this.getOption("includeContentLength")&&"string"==typeof this.body&&!this.options.headers.has("Content-Length")&&(this.debug("Setting content-length header:",this.body.length.toString()),this.options.headers.set("Content-Length",this.body.length.toString()))}constructResponseBody(){if(this.body=this.responseConfig.body,this.convertToJson(),this.setContentLength(),this.Stream){this.debug("Creating response stream");const stream=new this.Stream.Readable;null!=this.body&&stream.push(this.body,"utf-8"),stream.push(null),this.body=stream}this.body=this.body}buildObservableResponse(response){const fetchMock=this.fetchMock;return response._fmResults={},this.debug("Wrapping Response in ES proxy for observability"),new Proxy(response,{get:(originalResponse,name)=>{if(this.responseConfig.redirectUrl){if("url"===name)return this.debug("Retrieving redirect url",this.responseConfig.redirectUrl),this.responseConfig.redirectUrl;if("redirected"===name)return this.debug("Retrieving redirected status",!0),!0}return"function"==typeof originalResponse[name]?(this.debug("Wrapping body promises in ES proxies for observability"),new Proxy(originalResponse[name],{apply:(func,thisArg,args)=>{this.debug(`Calling res.${name}`);const result=func.apply(response,args);return result.then&&(fetchMock._holdingPromises.push(result.catch((()=>null))),originalResponse._fmResults[name]=result),result}})):originalResponse[name]}})}}let URL;const absoluteUrlRX=new RegExp("^[a-z]+://","i"),protocolRelativeUrlRX=new RegExp("^//","i"),headersToArray=headers=>"function"==typeof headers.raw?Object.entries(headers.raw()):headers[Symbol.iterator]?[...headers]:Object.entries(headers),zipObject=entries=>entries.reduce(((obj,[key,val])=>Object.assign(obj,{[key]:val})),{}),normalizeUrl=url=>{if("function"==typeof url||url instanceof RegExp||/^(begin|end|glob|express|path)\:/.test(url))return url;if(absoluteUrlRX.test(url)){return new URL(url).href}if(protocolRelativeUrlRX.test(url)){return new URL(url,"http://dummy").href}{const u=new URL(url,"http://dummy");return u.pathname+u.search}};var requestUtils={setUrlImplementation:it=>{URL=it},normalizeRequest:(url,options,Request)=>{if(Request.prototype.isPrototypeOf(url)){const derivedOptions={method:url.method},body=(async request=>{try{return"body"in request?request.body.toString():request.clone().text()}catch(err){}})(url);void 0!==body&&(derivedOptions.body=body);const normalizedRequestObject={url:normalizeUrl(url.url),options:Object.assign(derivedOptions,options),request:url,signal:options&&options.signal||url.signal},headers=headersToArray(url.headers);return headers.length&&(normalizedRequestObject.options.headers=zipObject(headers)),normalizedRequestObject}if("string"==typeof url||"object"==typeof url&&"href"in url)return{url:normalizeUrl(url),options,signal:options&&options.signal};throw"object"==typeof url?new TypeError("fetch-mock: Unrecognised Request object. Read the Config and Installation sections of the docs"):new TypeError("fetch-mock: Invalid arguments passed to fetch")},normalizeUrl,getPath:url=>(absoluteUrlRX.test(url)?new URL(url):new URL(url,"http://dummy")).pathname,getQuery:url=>{const u=absoluteUrlRX.test(url)?new URL(url):new URL(url,"http://dummy");return u.search?u.search.substr(1):""},headers:{normalize:headers=>zipObject(headersToArray(headers)),toLowerCase:headers=>Object.keys(headers).reduce(((obj,k)=>(obj[k.toLowerCase()]=headers[k],obj)),{}),equal:(actualHeader,expectedHeader)=>(actualHeader=Array.isArray(actualHeader)?actualHeader:[actualHeader],expectedHeader=Array.isArray(expectedHeader)?expectedHeader:[expectedHeader],actualHeader.length===expectedHeader.length&&actualHeader.every(((val,i)=>val===expectedHeader[i])))}};const{debug:debug$1,setDebugPhase:setDebugPhase$1,getDebug:getDebug$1}=debug_1,FetchMock$1={};class AbortError extends Error{constructor(){super(...arguments),this.name="AbortError",this.message="The operation was aborted.",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}FetchMock$1.needsAsyncBodyExtraction=function({request}){return request&&this.routes.some((({usesBody})=>usesBody))},FetchMock$1.fetchHandler=function(url,options){setDebugPhase$1("handle");const debug=getDebug$1("fetchHandler()");debug("fetch called with:",url,options);const normalizedRequest=requestUtils.normalizeRequest(url,options,this.config.Request);return debug("Request normalised"),debug("  url",normalizedRequest.url),debug("  options",normalizedRequest.options),debug("  request",normalizedRequest.request),debug("  signal",normalizedRequest.signal),this.needsAsyncBodyExtraction(normalizedRequest)?(debug("Need to wait for Body to be streamed before calling router: switching to async mode"),this._extractBodyThenHandle(normalizedRequest)):this._fetchHandler(normalizedRequest)},FetchMock$1._extractBodyThenHandle=async function(normalizedRequest){return normalizedRequest.options.body=await normalizedRequest.options.body,this._fetchHandler(normalizedRequest)},FetchMock$1._fetchHandler=function({url,options,request,signal}){const{route,callLog}=this.executeRouter(url,options,request);let done;return this.recordCall(callLog),this._holdingPromises.push(new this.config.Promise((res=>done=res))),new this.config.Promise(((res,rej)=>{if(signal){debug$1("signal exists - enabling fetch abort");const abort=()=>{debug$1("aborting fetch"),rej("undefined"!=typeof DOMException?new DOMException("The operation was aborted.","AbortError"):new AbortError),done()};signal.aborted&&(debug$1("signal is already aborted - aborting the fetch"),abort()),signal.addEventListener("abort",abort)}this.generateResponse({route,url,options,request,callLog}).then(res,rej).then(done,done).then((()=>{setDebugPhase$1()}))}))},FetchMock$1.fetchHandler.isMock=!0,FetchMock$1.executeRouter=function(url,options,request){const debug=getDebug$1("executeRouter()"),callLog={url,options,request,isUnmatched:!0};if(debug("Attempting to match request to a route"),"always"===this.getOption("fallbackToNetwork"))return debug("  Configured with fallbackToNetwork=always - passing through to fetch"),{route:{response:this.getNativeFetch(),responseIsFetch:!0}};const route=this.router(url,options,request);if(route)return debug("  Matching route found"),{route,callLog:{url,options,request,identifier:route.identifier}};if(this.getOption("warnOnFallback")&&console.warn(`Unmatched ${options&&options.method||"GET"} to ${url}`),this.fallbackResponse)return debug("  No matching route found - using fallbackResponse"),{route:{response:this.fallbackResponse},callLog};if(!this.getOption("fallbackToNetwork"))throw new Error(`fetch-mock: No fallback response defined for ${options&&options.method||"GET"} to ${url}`);return debug("  Configured to fallbackToNetwork - passing through to fetch"),{route:{response:this.getNativeFetch(),responseIsFetch:!0},callLog}},FetchMock$1.generateResponse=async function({route,url,options,request,callLog={}}){const debug=getDebug$1("generateResponse()"),response=await(async({response,responseIsFetch=!1},url,options,request)=>{const debug=getDebug$1("resolve()");for(debug("Recursively resolving function and promise responses");;)if("function"==typeof response){if(debug("  Response is a function"),responseIsFetch)return request?(debug("  -> Calling fetch with Request instance"),response(request)):(debug("  -> Calling fetch with url and options"),response(url,options));debug("  -> Calling response function"),response=response(url,options,request)}else{if("function"!=typeof response.then)return debug("  Response is not a function or a promise"),debug("  -> Exiting response resolution recursion"),response;debug("  Response is a promise"),debug("  -> Resolving promise"),response=await response}})(route,url,options,request);if(response.throws&&"function"!=typeof response)throw debug("response.throws is defined - throwing an error"),response.throws;if(this.config.Response.prototype.isPrototypeOf(response))return debug("response is already a Response instance - returning it"),callLog.response=response,response;const[realResponse,finalResponse]=(options=>new ResponseBuilder(options).exec())({url,responseConfig:response,fetchMock:this,route});return callLog.response=realResponse,finalResponse},FetchMock$1.router=function(url,options,request){const route=this.routes.find(((route,i)=>(debug$1(`Trying to match route ${i}`),route.matcher(url,options,request))));if(route)return route},FetchMock$1.getNativeFetch=function(){const func=this.realFetch||this.isSandbox&&this.config.fetch;if(!func)throw new Error("fetch-mock: Falling back to network only available on global fetch-mock, or by setting config.fetch on sandboxed fetch-mock");return nativeFetch=func,"undefined"!=typeof navigator&&navigator.vendor&&"Apple Computer, Inc."===navigator.vendor?async request=>{const{method}=request;if(!["POST","PUT","PATCH"].includes(method))return nativeFetch(request);const body=await request.clone().text(),{cache,credentials,headers,integrity,mode,redirect,referrer}=request,init={body,cache,credentials,headers,integrity,mode,redirect,referrer,method};return nativeFetch(request.url,init)}:nativeFetch;var nativeFetch},FetchMock$1.recordCall=function(obj){debug$1("Recording fetch call",obj),obj&&this._calls.push(obj)};var fetchHandler=FetchMock$1,pathToRegexp_1=pathToRegexp,parse_1=parse$1,compile_1=function compile(str,options){return tokensToFunction(parse$1(str,options))},tokensToFunction_1=tokensToFunction,tokensToRegExp_1=tokensToRegExp,DEFAULT_DELIMITER="/",DEFAULT_DELIMITERS="./",PATH_REGEXP=new RegExp(["(\\\\.)","(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?"].join("|"),"g");function parse$1(str,options){for(var res,tokens=[],key=0,index=0,path="",defaultDelimiter=options&&options.delimiter||DEFAULT_DELIMITER,delimiters=options&&options.delimiters||DEFAULT_DELIMITERS,pathEscaped=!1;null!==(res=PATH_REGEXP.exec(str));){var m=res[0],escaped=res[1],offset=res.index;if(path+=str.slice(index,offset),index=offset+m.length,escaped)path+=escaped[1],pathEscaped=!0;else{var prev="",next=str[index],name=res[2],capture=res[3],group=res[4],modifier=res[5];if(!pathEscaped&&path.length){var k=path.length-1;delimiters.indexOf(path[k])>-1&&(prev=path[k],path=path.slice(0,k))}path&&(tokens.push(path),path="",pathEscaped=!1);var partial=""!==prev&&void 0!==next&&next!==prev,repeat="+"===modifier||"*"===modifier,optional="?"===modifier||"*"===modifier,delimiter=prev||defaultDelimiter,pattern=capture||group;tokens.push({name:name||key++,prefix:prev,delimiter,optional,repeat,partial,pattern:pattern?escapeGroup(pattern):"[^"+escapeString(delimiter)+"]+?"})}}return(path||index<str.length)&&tokens.push(path+str.substr(index)),tokens}function tokensToFunction(tokens){for(var matches=new Array(tokens.length),i=0;i<tokens.length;i++)"object"==typeof tokens[i]&&(matches[i]=new RegExp("^(?:"+tokens[i].pattern+")$"));return function(data,options){for(var path="",encode=options&&options.encode||encodeURIComponent,i=0;i<tokens.length;i++){var token=tokens[i];if("string"!=typeof token){var segment,value=data?data[token.name]:void 0;if(Array.isArray(value)){if(!token.repeat)throw new TypeError('Expected "'+token.name+'" to not repeat, but got array');if(0===value.length){if(token.optional)continue;throw new TypeError('Expected "'+token.name+'" to not be empty')}for(var j=0;j<value.length;j++){if(segment=encode(value[j],token),!matches[i].test(segment))throw new TypeError('Expected all "'+token.name+'" to match "'+token.pattern+'"');path+=(0===j?token.prefix:token.delimiter)+segment}}else if("string"!=typeof value&&"number"!=typeof value&&"boolean"!=typeof value){if(!token.optional)throw new TypeError('Expected "'+token.name+'" to be '+(token.repeat?"an array":"a string"));token.partial&&(path+=token.prefix)}else{if(segment=encode(String(value),token),!matches[i].test(segment))throw new TypeError('Expected "'+token.name+'" to match "'+token.pattern+'", but got "'+segment+'"');path+=token.prefix+segment}}else path+=token}return path}}function escapeString(str){return str.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function escapeGroup(group){return group.replace(/([=!:$/()])/g,"\\$1")}function flags(options){return options&&options.sensitive?"":"i"}function tokensToRegExp(tokens,keys,options){for(var strict=(options=options||{}).strict,start=!1!==options.start,end=!1!==options.end,delimiter=escapeString(options.delimiter||DEFAULT_DELIMITER),delimiters=options.delimiters||DEFAULT_DELIMITERS,endsWith=[].concat(options.endsWith||[]).map(escapeString).concat("$").join("|"),route=start?"^":"",isEndDelimited=0===tokens.length,i=0;i<tokens.length;i++){var token=tokens[i];if("string"==typeof token)route+=escapeString(token),isEndDelimited=i===tokens.length-1&&delimiters.indexOf(token[token.length-1])>-1;else{var capture=token.repeat?"(?:"+token.pattern+")(?:"+escapeString(token.delimiter)+"(?:"+token.pattern+"))*":token.pattern;keys&&keys.push(token),token.optional?token.partial?route+=escapeString(token.prefix)+"("+capture+")?":route+="(?:"+escapeString(token.prefix)+"("+capture+"))?":route+=escapeString(token.prefix)+"("+capture+")"}}return end?(strict||(route+="(?:"+delimiter+")?"),route+="$"===endsWith?"$":"(?="+endsWith+")"):(strict||(route+="(?:"+delimiter+"(?="+endsWith+"))?"),isEndDelimited||(route+="(?="+delimiter+"|"+endsWith+")")),new RegExp(route,flags(options))}function pathToRegexp(path,keys,options){return path instanceof RegExp?function regexpToRegexp(path,keys){if(!keys)return path;var groups=path.source.match(/\((?!\?)/g);if(groups)for(var i=0;i<groups.length;i++)keys.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,pattern:null});return path}(path,keys):Array.isArray(path)?function arrayToRegexp(path,keys,options){for(var parts=[],i=0;i<path.length;i++)parts.push(pathToRegexp(path[i],keys,options).source);return new RegExp("(?:"+parts.join("|")+")",flags(options))}(path,keys,options):function stringToRegexp(path,keys,options){return tokensToRegExp(parse$1(path,options),keys,options)}(path,keys,options)}function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}pathToRegexp_1.parse=parse_1,pathToRegexp_1.compile=compile_1,pathToRegexp_1.tokensToFunction=tokensToFunction_1,pathToRegexp_1.tokensToRegExp=tokensToRegExp_1;var decode=function(qs,sep,eq,options){sep=sep||"&",eq=eq||"=";var obj={};if("string"!=typeof qs||0===qs.length)return obj;var regexp=/\+/g;qs=qs.split(sep);var maxKeys=1e3;options&&"number"==typeof options.maxKeys&&(maxKeys=options.maxKeys);var len=qs.length;maxKeys>0&&len>maxKeys&&(len=maxKeys);for(var i=0;i<len;++i){var kstr,vstr,k,v,x=qs[i].replace(regexp,"%20"),idx=x.indexOf(eq);idx>=0?(kstr=x.substr(0,idx),vstr=x.substr(idx+1)):(kstr=x,vstr=""),k=decodeURIComponent(kstr),v=decodeURIComponent(vstr),hasOwnProperty(obj,k)?Array.isArray(obj[k])?obj[k].push(v):obj[k]=[obj[k],v]:obj[k]=v}return obj},stringifyPrimitive=function(v){switch(typeof v){case"string":return v;case"boolean":return v?"true":"false";case"number":return isFinite(v)?v:"";default:return""}},encode=function(obj,sep,eq,name){return sep=sep||"&",eq=eq||"=",null===obj&&(obj=void 0),"object"==typeof obj?Object.keys(obj).map((function(k){var ks=encodeURIComponent(stringifyPrimitive(k))+eq;return Array.isArray(obj[k])?obj[k].map((function(v){return ks+encodeURIComponent(stringifyPrimitive(v))})).join(sep):ks+encodeURIComponent(stringifyPrimitive(obj[k]))})).join(sep):name?encodeURIComponent(stringifyPrimitive(name))+eq+encodeURIComponent(stringifyPrimitive(obj)):""},querystring=createCommonjsModule((function(module,exports){exports.decode=exports.parse=decode,exports.encode=exports.stringify=encode})),isSubset_1=(querystring.decode,querystring.parse,querystring.encode,querystring.stringify,createCommonjsModule((function(module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var isSubset=function(_isSubset){function isSubset(_x,_x2){return _isSubset.apply(this,arguments)}return isSubset.toString=function(){return _isSubset.toString()},isSubset}((function(superset,subset){return"object"==typeof superset&&null!==superset&&"object"==typeof subset&&null!==subset&&Object.keys(subset).every((function(key){if(!superset.propertyIsEnumerable(key))return!1;var subsetItem=subset[key],supersetItem=superset[key];return!!("object"==typeof subsetItem&&null!==subsetItem?isSubset(supersetItem,subsetItem):supersetItem===subsetItem)}))}));exports.default=isSubset,module.exports=exports.default})));!function unwrapExports(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}(isSubset_1);var lodash_isequal=createCommonjsModule((function(module,exports){var argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",mapTag="[object Map]",objectTag="[object Object]",setTag="[object Set]",dataViewTag="[object DataView]",reIsHostCtor=/^\[object .+?Constructor\]$/,reIsUint=/^(?:0|[1-9]\d*)$/,typedArrayTags={};typedArrayTags["[object Float32Array]"]=typedArrayTags["[object Float64Array]"]=typedArrayTags["[object Int8Array]"]=typedArrayTags["[object Int16Array]"]=typedArrayTags["[object Int32Array]"]=typedArrayTags["[object Uint8Array]"]=typedArrayTags["[object Uint8ClampedArray]"]=typedArrayTags["[object Uint16Array]"]=typedArrayTags["[object Uint32Array]"]=!0,typedArrayTags[argsTag]=typedArrayTags["[object Array]"]=typedArrayTags["[object ArrayBuffer]"]=typedArrayTags["[object Boolean]"]=typedArrayTags["[object DataView]"]=typedArrayTags["[object Date]"]=typedArrayTags["[object Error]"]=typedArrayTags["[object Function]"]=typedArrayTags[mapTag]=typedArrayTags["[object Number]"]=typedArrayTags[objectTag]=typedArrayTags["[object RegExp]"]=typedArrayTags[setTag]=typedArrayTags["[object String]"]=typedArrayTags["[object WeakMap]"]=!1;var freeGlobal="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")(),freeExports=exports&&!exports.nodeType&&exports,freeModule=freeExports&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,freeProcess=moduleExports&&freeGlobal.process,nodeUtil=function(){try{return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}(),nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;function arraySome(array,predicate){for(var index=-1,length=null==array?0:array.length;++index<length;)if(predicate(array[index],index,array))return!0;return!1}function mapToArray(map){var index=-1,result=Array(map.size);return map.forEach((function(value,key){result[++index]=[key,value]})),result}function setToArray(set){var index=-1,result=Array(set.size);return set.forEach((function(value){result[++index]=value})),result}var uid,arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype,coreJsData=root["__core-js_shared__"],funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,maskSrcKey=(uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||""))?"Symbol(src)_1."+uid:"",nativeObjectToString=objectProto.toString,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Buffer=moduleExports?root.Buffer:void 0,Symbol=root.Symbol,Uint8Array=root.Uint8Array,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,symToStringTag=Symbol?Symbol.toStringTag:void 0,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:void 0,nativeKeys=function overArg(func,transform){return function(arg){return func(transform(arg))}}(Object.keys,Object),DataView=getNative(root,"DataView"),Map=getNative(root,"Map"),Promise=getNative(root,"Promise"),Set=getNative(root,"Set"),WeakMap=getNative(root,"WeakMap"),nativeCreate=getNative(Object,"create"),dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap),symbolProto=Symbol?Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function Hash(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function ListCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function MapCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function SetCache(values){var index=-1,length=null==values?0:values.length;for(this.__data__=new MapCache;++index<length;)this.add(values[index])}function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?function baseTimes(n,iteratee){for(var index=-1,result=Array(n);++index<n;)result[index]=iteratee(index);return result}(value.length,String):[],length=result.length;for(var key in value)!inherited&&!hasOwnProperty.call(value,key)||skipIndexes&&("length"==key||isBuff&&("offset"==key||"parent"==key)||isType&&("buffer"==key||"byteLength"==key||"byteOffset"==key)||isIndex(key,length))||result.push(key);return result}function assocIndexOf(array,key){for(var length=array.length;length--;)if(eq(array[length][0],key))return length;return-1}function baseGetTag(value){return null==value?void 0===value?"[object Undefined]":"[object Null]":symToStringTag&&symToStringTag in Object(value)?function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0}catch(e){}var result=nativeObjectToString.call(value);unmasked&&(isOwn?value[symToStringTag]=tag:delete value[symToStringTag]);return result}(value):function objectToString(value){return nativeObjectToString.call(value)}(value)}function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag}function baseIsEqual(value,other,bitmask,customizer,stack){return value===other||(null==value||null==other||!isObjectLike(value)&&!isObjectLike(other)?value!=value&&other!=other:function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other),objIsObj=(objTag=objTag==argsTag?objectTag:objTag)==objectTag,othIsObj=(othTag=othTag==argsTag?objectTag:othTag)==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other))return!1;objIsArr=!0,objIsObj=!1}if(isSameTag&&!objIsObj)return stack||(stack=new Stack),objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset)return!1;object=object.buffer,other=other.buffer;case"[object ArrayBuffer]":return!(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other)));case boolTag:case"[object Date]":case"[object Number]":return eq(+object,+other);case"[object Error]":return object.name==other.name&&object.message==other.message;case"[object RegExp]":case"[object String]":return object==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=1&bitmask;if(convert||(convert=setToArray),object.size!=other.size&&!isPartial)return!1;var stacked=stack.get(object);if(stacked)return stacked==other;bitmask|=2,stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);return stack.delete(object),result;case"[object Symbol]":if(symbolValueOf)return symbolValueOf.call(object)==symbolValueOf.call(other)}return!1}(object,other,objTag,bitmask,customizer,equalFunc,stack);if(!(1&bitmask)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;return stack||(stack=new Stack),equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}if(!isSameTag)return!1;return stack||(stack=new Stack),function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=1&bitmask,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial)return!1;var index=objLength;for(;index--;){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key)))return!1}var stacked=stack.get(object);if(stacked&&stack.get(other))return stacked==other;var result=!0;stack.set(object,other),stack.set(other,object);var skipCtor=isPartial;for(;++index<objLength;){var objValue=object[key=objProps[index]],othValue=other[key];if(customizer)var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);if(!(void 0===compared?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=!1;break}skipCtor||(skipCtor="constructor"==key)}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;objCtor==othCtor||!("constructor"in object)||!("constructor"in other)||"function"==typeof objCtor&&objCtor instanceof objCtor&&"function"==typeof othCtor&&othCtor instanceof othCtor||(result=!1)}return stack.delete(object),stack.delete(other),result}(object,other,bitmask,customizer,equalFunc,stack)}(value,other,bitmask,customizer,baseIsEqual,stack))}function baseIsNative(value){return!(!isObject(value)||function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}(value))&&(isFunction(value)?reIsNative:reIsHostCtor).test(toSource(value))}function baseKeys(object){if(!function isPrototype(value){var Ctor=value&&value.constructor,proto="function"==typeof Ctor&&Ctor.prototype||objectProto;return value===proto}(object))return nativeKeys(object);var result=[];for(var key in Object(object))hasOwnProperty.call(object,key)&&"constructor"!=key&&result.push(key);return result}function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=1&bitmask,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength))return!1;var stacked=stack.get(array);if(stacked&&stack.get(other))return stacked==other;var index=-1,result=!0,seen=2&bitmask?new SetCache:void 0;for(stack.set(array,other),stack.set(other,array);++index<arrLength;){var arrValue=array[index],othValue=other[index];if(customizer)var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);if(void 0!==compared){if(compared)continue;result=!1;break}if(seen){if(!arraySome(other,(function(othValue,othIndex){if(key=othIndex,!seen.has(key)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack)))return seen.push(othIndex);var key}))){result=!1;break}}else if(arrValue!==othValue&&!equalFunc(arrValue,othValue,bitmask,customizer,stack)){result=!1;break}}return stack.delete(array),stack.delete(other),result}function getAllKeys(object){return function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:function arrayPush(array,values){for(var index=-1,length=values.length,offset=array.length;++index<length;)array[offset+index]=values[index];return array}(result,symbolsFunc(object))}(object,keys,getSymbols)}function getMapData(map,key){var data=map.__data__;return function isKeyable(value){var type=typeof value;return"string"==type||"number"==type||"symbol"==type||"boolean"==type?"__proto__"!==value:null===value}(key)?data["string"==typeof key?"string":"hash"]:data.map}function getNative(object,key){var value=function getValue(object,key){return null==object?void 0:object[key]}(object,key);return baseIsNative(value)?value:void 0}Hash.prototype.clear=function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{},this.size=0},Hash.prototype.delete=function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];return this.size-=result?1:0,result},Hash.prototype.get=function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return"__lodash_hash_undefined__"===result?void 0:result}return hasOwnProperty.call(data,key)?data[key]:void 0},Hash.prototype.has=function hashHas(key){var data=this.__data__;return nativeCreate?void 0!==data[key]:hasOwnProperty.call(data,key)},Hash.prototype.set=function hashSet(key,value){var data=this.__data__;return this.size+=this.has(key)?0:1,data[key]=nativeCreate&&void 0===value?"__lodash_hash_undefined__":value,this},ListCache.prototype.clear=function listCacheClear(){this.__data__=[],this.size=0},ListCache.prototype.delete=function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);return!(index<0)&&(index==data.length-1?data.pop():splice.call(data,index,1),--this.size,!0)},ListCache.prototype.get=function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?void 0:data[index][1]},ListCache.prototype.has=function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1},ListCache.prototype.set=function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);return index<0?(++this.size,data.push([key,value])):data[index][1]=value,this},MapCache.prototype.clear=function mapCacheClear(){this.size=0,this.__data__={hash:new Hash,map:new(Map||ListCache),string:new Hash}},MapCache.prototype.delete=function mapCacheDelete(key){var result=getMapData(this,key).delete(key);return this.size-=result?1:0,result},MapCache.prototype.get=function mapCacheGet(key){return getMapData(this,key).get(key)},MapCache.prototype.has=function mapCacheHas(key){return getMapData(this,key).has(key)},MapCache.prototype.set=function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;return data.set(key,value),this.size+=data.size==size?0:1,this},SetCache.prototype.add=SetCache.prototype.push=function setCacheAdd(value){return this.__data__.set(value,"__lodash_hash_undefined__"),this},SetCache.prototype.has=function setCacheHas(value){return this.__data__.has(value)},Stack.prototype.clear=function stackClear(){this.__data__=new ListCache,this.size=0},Stack.prototype.delete=function stackDelete(key){var data=this.__data__,result=data.delete(key);return this.size=data.size,result},Stack.prototype.get=function stackGet(key){return this.__data__.get(key)},Stack.prototype.has=function stackHas(key){return this.__data__.has(key)},Stack.prototype.set=function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<199)return pairs.push([key,value]),this.size=++data.size,this;data=this.__data__=new MapCache(pairs)}return data.set(key,value),this.size=data.size,this};var getSymbols=nativeGetSymbols?function(object){return null==object?[]:(object=Object(object),function arrayFilter(array,predicate){for(var index=-1,length=null==array?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];predicate(value,index,array)&&(result[resIndex++]=value)}return result}(nativeGetSymbols(object),(function(symbol){return propertyIsEnumerable.call(object,symbol)})))}:function stubArray(){return[]},getTag=baseGetTag;function isIndex(value,length){return!!(length=null==length?9007199254740991:length)&&("number"==typeof value||reIsUint.test(value))&&value>-1&&value%1==0&&value<length}function toSource(func){if(null!=func){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}function eq(value,other){return value===other||value!=value&&other!=other}(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map)!=mapTag||Promise&&"[object Promise]"!=getTag(Promise.resolve())||Set&&getTag(new Set)!=setTag||WeakMap&&"[object WeakMap]"!=getTag(new WeakMap))&&(getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return"[object Promise]";case setCtorString:return setTag;case weakMapCtorString:return"[object WeakMap]"}return result});var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")},isArray=Array.isArray;var isBuffer=nativeIsBuffer||function stubFalse(){return!1};function isFunction(value){if(!isObject(value))return!1;var tag=baseGetTag(value);return"[object Function]"==tag||"[object GeneratorFunction]"==tag||"[object AsyncFunction]"==tag||"[object Proxy]"==tag}function isLength(value){return"number"==typeof value&&value>-1&&value%1==0&&value<=9007199254740991}function isObject(value){var type=typeof value;return null!=value&&("object"==type||"function"==type)}function isObjectLike(value){return null!=value&&"object"==typeof value}var isTypedArray=nodeIsTypedArray?function baseUnary(func){return function(value){return func(value)}}(nodeIsTypedArray):function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]};function keys(object){return function isArrayLike(value){return null!=value&&isLength(value.length)&&!isFunction(value)}(object)?arrayLikeKeys(object):baseKeys(object)}module.exports=function isEqual(value,other){return baseIsEqual(value,other)}}));const{debug:debug$2}=debug_1,{headers:headerUtils,getPath,getQuery,normalizeUrl:normalizeUrl$1}=requestUtils,debuggableUrlFunc=func=>url=>(debug$2("Actual url:",url),func(url)),stringMatchers={begin:targetString=>debuggableUrlFunc((url=>0===url.indexOf(targetString))),end:targetString=>debuggableUrlFunc((url=>url.substr(-targetString.length)===targetString)),glob:targetString=>{const urlRX=function(glob,opts){if("string"!=typeof glob)throw new TypeError("Expected a string");for(var c,str=String(glob),reStr="",extended=!!opts&&!!opts.extended,globstar=!!opts&&!!opts.globstar,inGroup=!1,flags=opts&&"string"==typeof opts.flags?opts.flags:"",i=0,len=str.length;i<len;i++)switch(c=str[i]){case"/":case"$":case"^":case"+":case".":case"(":case")":case"=":case"!":case"|":reStr+="\\"+c;break;case"?":if(extended){reStr+=".";break}case"[":case"]":if(extended){reStr+=c;break}case"{":if(extended){inGroup=!0,reStr+="(";break}case"}":if(extended){inGroup=!1,reStr+=")";break}case",":if(inGroup){reStr+="|";break}reStr+="\\"+c;break;case"*":for(var prevChar=str[i-1],starCount=1;"*"===str[i+1];)starCount++,i++;var nextChar=str[i+1];globstar?!(starCount>1)||"/"!==prevChar&&void 0!==prevChar||"/"!==nextChar&&void 0!==nextChar?reStr+="([^/]*)":(reStr+="((?:[^/]*(?:/|$))*)",i++):reStr+=".*";break;default:reStr+=c}return flags&&~flags.indexOf("g")||(reStr="^"+reStr+"$"),new RegExp(reStr,flags)}(targetString);return debuggableUrlFunc((url=>urlRX.test(url)))},express:targetString=>{const urlRX=pathToRegexp_1(targetString);return debuggableUrlFunc((url=>urlRX.test(getPath(url))))},path:targetString=>debuggableUrlFunc((url=>getPath(url)===targetString))},getFullUrlMatcher=(route,matcherUrl,query)=>{debug$2("  Matching using full url",matcherUrl);const expectedUrl=normalizeUrl$1(matcherUrl);return debug$2("  Normalised url to:",matcherUrl),route.identifier===matcherUrl&&(debug$2("  Updating route identifier to match normalized url:",matcherUrl),route.identifier=expectedUrl),matcherUrl=>(debug$2("Expected url:",expectedUrl),debug$2("Actual url:",matcherUrl),query&&expectedUrl.indexOf("?")?(debug$2("Ignoring query string when matching url"),0===matcherUrl.indexOf(expectedUrl)):normalizeUrl$1(matcherUrl)===expectedUrl)};var matchers=[{name:"query",matcher:({query:passedQuery})=>{if(debug$2("Generating query parameters matcher"),!passedQuery)return void debug$2("  No query parameters expectations defined - skipping");const expectedQuery=querystring.parse(querystring.stringify(passedQuery));debug$2("  Expected query parameters:",passedQuery);const keys=Object.keys(expectedQuery);return url=>{debug$2("Attempting to match query parameters");const query=querystring.parse(getQuery(url));return debug$2("  Expected query parameters:",expectedQuery),debug$2("  Actual query parameters:",query),keys.every((key=>Array.isArray(query[key])?!!Array.isArray(expectedQuery[key])&&lodash_isequal(query[key].sort(),expectedQuery[key].sort()):query[key]===expectedQuery[key]))}}},{name:"method",matcher:({method:expectedMethod})=>{if(debug$2("Generating method matcher"),expectedMethod)return debug$2("  Expected method:",expectedMethod),(url,{method})=>{debug$2("Attempting to match method");const actualMethod=method?method.toLowerCase():"get";return debug$2("  Expected method:",expectedMethod),debug$2("  Actual method:",actualMethod),expectedMethod===actualMethod};debug$2("  No method expectations defined - skipping")}},{name:"headers",matcher:({headers:expectedHeaders})=>{if(debug$2("Generating header matcher"),!expectedHeaders)return void debug$2("  No header expectations defined - skipping");const expectation=headerUtils.toLowerCase(expectedHeaders);return debug$2("  Expected headers:",expectation),(url,{headers={}})=>{debug$2("Attempting to match headers");const lowerCaseHeaders=headerUtils.toLowerCase(headerUtils.normalize(headers));return debug$2("  Expected headers:",expectation),debug$2("  Actual headers:",lowerCaseHeaders),Object.keys(expectation).every((headerName=>headerUtils.equal(lowerCaseHeaders[headerName],expectation[headerName])))}}},{name:"params",matcher:({params:expectedParams,url:matcherUrl})=>{if(debug$2("Generating path parameters matcher"),!expectedParams)return void debug$2("  No path parameters expectations defined - skipping");if(!/express:/.test(matcherUrl))throw new Error("fetch-mock: matching on params is only possible when using an express: matcher");debug$2("  Expected path parameters:",expectedParams);const expectedKeys=Object.keys(expectedParams),keys=[],re=pathToRegexp_1(matcherUrl.replace(/^express:/,""),keys);return url=>{debug$2("Attempting to match path parameters");const vals=re.exec(getPath(url))||[];vals.shift();const params=keys.reduce(((map,{name},i)=>vals[i]?Object.assign(map,{[name]:vals[i]}):map),{});return debug$2("  Expected path parameters:",expectedParams),debug$2("  Actual path parameters:",params),expectedKeys.every((key=>params[key]===expectedParams[key]))}}},{name:"body",matcher:(route,fetchMock)=>{const matchPartialBody=fetchMock.getOption("matchPartialBody",route),{body:expectedBody}=route;return debug$2("Generating body matcher"),(url,{body,method="get"})=>{if(debug$2("Attempting to match body"),"get"===method.toLowerCase())return debug$2("  GET request - skip matching body"),!0;let sentBody;try{debug$2("  Parsing request body as JSON"),sentBody=JSON.parse(body)}catch(err){debug$2("  Failed to parse request body as JSON",err)}return debug$2("Expected body:",expectedBody),debug$2("Actual body:",sentBody),matchPartialBody&&debug$2("matchPartialBody is true - checking for partial match only"),sentBody&&(matchPartialBody?isSubset_1(sentBody,expectedBody):lodash_isequal(sentBody,expectedBody))}},usesBody:!0},{name:"functionMatcher",matcher:({functionMatcher})=>(debug$2("Detected user defined function matcher",functionMatcher),(...args)=>(debug$2("Calling function matcher with arguments",args),functionMatcher(...args)))},{name:"url",matcher:route=>{debug$2("Generating url matcher");const{url:matcherUrl,query}=route;if("*"===matcherUrl)return debug$2("  Using universal * rule to match any url"),()=>!0;if(matcherUrl instanceof RegExp)return debug$2("  Using regular expression to match url:",matcherUrl),url=>matcherUrl.test(url);if(matcherUrl.href)return debug$2("  Using URL object to match url",matcherUrl),getFullUrlMatcher(route,matcherUrl.href,query);for(const shorthand in stringMatchers)if(0===matcherUrl.indexOf(shorthand+":")){debug$2(`  Using ${shorthand}: pattern to match url`,matcherUrl);const urlFragment=matcherUrl.replace(new RegExp(`^${shorthand}:`),"");return stringMatchers[shorthand](urlFragment)}return getFullUrlMatcher(route,matcherUrl,query)}}];const{debug:debug$3,setDebugNamespace,getDebug:getDebug$2}=debug_1,isUrlMatcher=matcher=>matcher instanceof RegExp||"string"==typeof matcher||"object"==typeof matcher&&"href"in matcher;class Route{constructor(args,fetchMock){this.fetchMock=fetchMock;getDebug$2("compileRoute()")("Compiling route"),this.init(args),this.sanitize(),this.validate(),this.generateMatcher(),this.limit(),this.delayResponse()}validate(){if(!("response"in this))throw new Error("fetch-mock: Each route must define a response");if(!Route.registeredMatchers.some((({name})=>name in this)))throw new Error("fetch-mock: Each route must specify some criteria for matching calls to fetch. To match all calls use '*'")}init(args){const[matcher,response,options={}]=args,routeConfig={};isUrlMatcher(matcher)||(matcher=>"function"==typeof matcher)(matcher)?routeConfig.matcher=matcher:Object.assign(routeConfig,matcher),void 0!==response&&(routeConfig.response=response),Object.assign(routeConfig,options),Object.assign(this,routeConfig)}sanitize(){const debug=getDebug$2("sanitize()");debug("Sanitizing route properties"),this.method&&(debug(`Converting method ${this.method} to lower case`),this.method=this.method.toLowerCase()),isUrlMatcher(this.matcher)&&(debug("Mock uses a url matcher",this.matcher),this.url=this.matcher,delete this.matcher),this.functionMatcher=this.matcher||this.functionMatcher,debug("Setting route.identifier..."),debug(`  route.name is ${this.name}`),debug(`  route.url is ${this.url}`),debug(`  route.functionMatcher is ${this.functionMatcher}`),this.identifier=this.name||this.url||this.functionMatcher,debug(`  -> route.identifier set to ${this.identifier}`)}generateMatcher(){setDebugNamespace("generateMatcher()"),debug$3("Compiling matcher for route");const activeMatchers=Route.registeredMatchers.map((({name,matcher,usesBody})=>this[name]&&{matcher:matcher(this,this.fetchMock),usesBody})).filter((matcher=>Boolean(matcher)));this.usesBody=activeMatchers.some((({usesBody})=>usesBody)),debug$3("Compiled matcher for route"),setDebugNamespace(),this.matcher=(url,options={},request)=>activeMatchers.every((({matcher})=>matcher(url,options,request)))}limit(){const debug=getDebug$2("limit()");if(debug("Limiting number of requests to handle by route"),!this.repeat)return void debug("  No `repeat` value set on route. Will match any number of requests");debug(`  Route set to repeat ${this.repeat} times`);const matcher=this.matcher;let timesLeft=this.repeat;this.matcher=(url,options)=>{if(timesLeft&&matcher(url,options))return timesLeft--,!0},this.reset=()=>timesLeft=this.repeat}delayResponse(){const debug=getDebug$2("delayResponse()");if(debug("Applying response delay settings"),this.delay){debug(`  Wrapping response in delay of ${this.delay} miliseconds`);const response=this.response;this.response=()=>(debug(`Delaying response by ${this.delay} miliseconds`),new Promise((res=>setTimeout((()=>res(response)),this.delay))))}else debug("  No delay set on route. Will respond 'immediately' (but asynchronously)")}static addMatcher(matcher){Route.registeredMatchers.push(matcher)}}Route.registeredMatchers=[],matchers.forEach(Route.addMatcher);var Route_1=Route;const{setDebugPhase:setDebugPhase$2,setDebugNamespace:setDebugNamespace$1,debug:debug$4}=debug_1,{normalizeUrl:normalizeUrl$2}=requestUtils,FetchMock$2={},filterCallsWithMatcher=function(matcher,options={},calls){return({matcher}=new Route_1([Object.assign({matcher,response:"ok"},options)],this)),calls.filter((({url,options})=>matcher(normalizeUrl$2(url),options)))},formatDebug=func=>function(...args){setDebugPhase$2("inspect");const result=func.call(this,...args);return setDebugPhase$2(),result},callObjToArray=obj=>{if(!obj)return;const{url,options,request,identifier,isUnmatched,response}=obj,arr=[url,options];return arr.request=request,arr.identifier=identifier,arr.isUnmatched=isUnmatched,arr.response=response,arr};FetchMock$2.filterCalls=function(nameOrMatcher,options){debug$4("Filtering fetch calls");let calls=this._calls,matcher="*";return[!0,"matched"].includes(nameOrMatcher)?(debug$4(`Filter provided is ${nameOrMatcher}. Returning matched calls only`),calls=calls.filter((({isUnmatched})=>!isUnmatched))):[!1,"unmatched"].includes(nameOrMatcher)?(debug$4(`Filter provided is ${nameOrMatcher}. Returning unmatched calls only`),calls=calls.filter((({isUnmatched})=>isUnmatched))):void 0===nameOrMatcher?debug$4("Filter provided is undefined. Returning all calls"):(nameOrMatcher=>"string"==typeof nameOrMatcher&&/^[\da-zA-Z\-]+$/.test(nameOrMatcher))(nameOrMatcher)?(debug$4("Filter provided, looks like the name of a named route. Returning only calls handled by that route"),calls=calls.filter((({identifier})=>identifier===nameOrMatcher))):(matcher="*"===nameOrMatcher?"*":normalizeUrl$2(nameOrMatcher),this.routes.some((({identifier})=>identifier===matcher))&&(debug$4(`Filter provided, ${nameOrMatcher}, identifies a route. Returning only calls handled by that route`),calls=calls.filter((call=>call.identifier===matcher)))),(options||"*"!==matcher)&&calls.length&&("string"==typeof options&&(options={method:options}),debug$4("Compiling filter and options to route in order to filter all calls",nameOrMatcher),calls=filterCallsWithMatcher.call(this,matcher,options,calls)),debug$4(`Retrieved ${calls.length} calls`),calls.map(callObjToArray)},FetchMock$2.calls=formatDebug((function(nameOrMatcher,options){return debug$4("retrieving matching calls"),this.filterCalls(nameOrMatcher,options)})),FetchMock$2.lastCall=formatDebug((function(nameOrMatcher,options){return debug$4("retrieving last matching call"),[...this.filterCalls(nameOrMatcher,options)].pop()})),FetchMock$2.lastUrl=formatDebug((function(nameOrMatcher,options){return debug$4("retrieving url of last matching call"),(this.lastCall(nameOrMatcher,options)||[])[0]})),FetchMock$2.lastOptions=formatDebug((function(nameOrMatcher,options){return debug$4("retrieving options of last matching call"),(this.lastCall(nameOrMatcher,options)||[])[1]})),FetchMock$2.lastResponse=formatDebug((function(nameOrMatcher,options){debug$4("retrieving respose of last matching call"),console.warn("When doing all the following:\n- using node-fetch\n- responding with a real network response (using spy() or fallbackToNetwork)\n- using `fetchMock.LastResponse()`\n- awaiting the body content\n... the response will hang unless your source code also awaits the response body.\nThis is an unavoidable consequence of the nodejs implementation of streams.\n");const response=(this.lastCall(nameOrMatcher,options)||[]).response;try{return response.clone()}catch(err){return Object.entries(response._fmResults).forEach((([name,result])=>{response[name]=()=>result})),response}})),FetchMock$2.called=formatDebug((function(nameOrMatcher,options){return debug$4("checking if matching call was made"),Boolean(this.filterCalls(nameOrMatcher,options).length)})),FetchMock$2.flush=formatDebug((async function(waitForResponseMethods){setDebugNamespace$1("flush"),debug$4(`flushing all fetch calls. ${waitForResponseMethods?"":"Not "}waiting for response bodies to complete download`);const queuedPromises=this._holdingPromises;this._holdingPromises=[],debug$4(`${queuedPromises.length} fetch calls to be awaited`),await Promise.all(queuedPromises),debug$4("All fetch calls have completed"),waitForResponseMethods&&this._holdingPromises.length&&(debug$4("Awaiting all fetch bodies to download"),await this.flush(waitForResponseMethods),debug$4("All fetch bodies have completed downloading")),setDebugNamespace$1()})),FetchMock$2.done=formatDebug((function(nameOrMatcher){let routesToCheck;setDebugPhase$2("inspect"),setDebugNamespace$1("done"),debug$4("Checking to see if expected calls have been made"),nameOrMatcher&&"boolean"!=typeof nameOrMatcher?(debug$4("Checking to see if expected calls have been made for single route:",nameOrMatcher),routesToCheck=[{identifier:nameOrMatcher}]):(debug$4("Checking to see if expected calls have been made for all routes"),routesToCheck=this.routes);const result=routesToCheck.map((({identifier})=>{if(!this.called(identifier))return debug$4("No calls made for route:",identifier),console.warn(`Warning: ${identifier} not called`),!1;const expectedTimes=(this.routes.find((r=>r.identifier===identifier))||{}).repeat;if(!expectedTimes)return debug$4("Route has been called at least once, and no expectation of more set:",identifier),!0;const actualTimes=this.filterCalls(identifier).length;return debug$4(`Route called ${actualTimes} times:`,identifier),!(expectedTimes>actualTimes)||(debug$4(`Route called ${actualTimes} times, but expected ${expectedTimes}:`,identifier),console.warn(`Warning: ${identifier} only called ${actualTimes} times, but ${expectedTimes} expected`),!1)})).every((isDone=>isDone));return setDebugNamespace$1(),setDebugPhase$2(),result}));var inspecting=FetchMock$2;const{debug:debug$5}=debug_1,FetchMock$3=Object.assign({},fetchHandler,setUpAndTearDown,inspecting);FetchMock$3.addMatcher=function(matcher){Route_1.addMatcher(matcher)},FetchMock$3.config={fallbackToNetwork:!1,includeContentLength:!0,sendAsJson:!0,warnOnFallback:!0,overwriteRoutes:void 0},FetchMock$3.createInstance=function(){debug$5("Creating fetch-mock instance");const instance=Object.create(FetchMock$3);return instance._uncompiledRoutes=(this._uncompiledRoutes||[]).slice(),instance.routes=instance._uncompiledRoutes.map((config=>this.compileRoute(config))),instance.fallbackResponse=this.fallbackResponse||void 0,instance.config=Object.assign({},this.config||FetchMock$3.config),instance._calls=[],instance._holdingPromises=[],instance.bindMethods(),instance},FetchMock$3.compileRoute=function(config){return new Route_1(config,this)},FetchMock$3.bindMethods=function(){this.fetchHandler=FetchMock$3.fetchHandler.bind(this),this.reset=this.restore=FetchMock$3.reset.bind(this),this.resetHistory=FetchMock$3.resetHistory.bind(this),this.resetBehavior=FetchMock$3.resetBehavior.bind(this)},FetchMock$3.sandbox=function(){debug$5("Creating sandboxed fetch-mock instance");const sandbox=Object.assign(((url,options)=>sandbox.fetchHandler(url,options)),FetchMock$3,this.createInstance(),{Headers:this.config.Headers,Request:this.config.Request,Response:this.config.Response});return sandbox.bindMethods(),sandbox.isSandbox=!0,sandbox.default=sandbox,sandbox},FetchMock$3.getOption=function(name,route={}){return name in route?route[name]:this.config[name]};var lib=FetchMock$3;var statusText={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"};const theGlobal="undefined"!=typeof window?window:self,{setUrlImplementation}=requestUtils;setUrlImplementation(theGlobal.URL),lib.global=theGlobal,lib.statusTextMap=statusText,lib.config=Object.assign(lib.config,{Promise:theGlobal.Promise,Request:theGlobal.Request,Response:theGlobal.Response,Headers:theGlobal.Headers});const __WEBPACK_DEFAULT_EXPORT__=lib.createInstance()},"./node_modules/uuid/dist/esm-browser/stringify.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});for(var _validate_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/uuid/dist/esm-browser/validate.js"),byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));const __WEBPACK_DEFAULT_EXPORT__=function stringify(arr){var offset=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,uuid=(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+"-"+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+"-"+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+"-"+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+"-"+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase();if(!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.A)(uuid))throw TypeError("Stringified UUID is invalid");return uuid}},"./node_modules/uuid/dist/esm-browser/v4.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var getRandomValues;__webpack_require__.d(__webpack_exports__,{A:()=>esm_browser_v4});var rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&!(getRandomValues="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}var stringify=__webpack_require__("./node_modules/uuid/dist/esm-browser/stringify.js");const esm_browser_v4=function v4(options,buf,offset){var rnds=(options=options||{}).random||(options.rng||rng)();if(rnds[6]=15&rnds[6]|64,rnds[8]=63&rnds[8]|128,buf){offset=offset||0;for(var i=0;i<16;++i)buf[offset+i]=rnds[i];return buf}return(0,stringify.A)(rnds)}},"./node_modules/uuid/dist/esm-browser/validate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>esm_browser_validate});const regex=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const esm_browser_validate=function validate(uuid){return"string"==typeof uuid&&regex.test(uuid)}}}]);