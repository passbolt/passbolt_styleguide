/*! For license information please see 1532.54e7c110.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpassbolt_styleguide=self.webpackChunkpassbolt_styleguide||[]).push([[1532],{"./src/shared/models/entity/abstract/entityCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entityCollectionError.js"),_entityValidationError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js");class EntityCollection{constructor(dtos=[],options={}){const clone=options?.clone??!0;this._items=[],clone&&(dtos=JSON.parse(JSON.stringify(dtos))),this._props=dtos}toDto(){return JSON.parse(JSON.stringify(this._items))}toJSON(){return this.toDto()}get items(){return this._items}get length(){return this._items.length}[Symbol.iterator](){let i=0;return{next:()=>i<this._items.length?{value:this._items[i++],done:!1}:{done:!0}}}getAll(propName,search){if("string"!=typeof propName)throw new TypeError("EntityCollection excludeAll expects propName to be string.");if("string"!=typeof search)throw new TypeError("EntityCollection excludeAll expects search to be string.");return this._items.filter((item=>Object.prototype.hasOwnProperty.call(item._props,propName)&&item._props[propName]===search))}getFirst(propName,search){if("string"!=typeof propName||"string"!=typeof search)throw new TypeError("EntityCollection getFirst by expect propName and search to be strings");const found=this.getAll(propName,search);if(found&&found.length)return found[0]}extract(propName){if("string"!=typeof propName)throw new TypeError("EntityCollection extract expects propName to be a string.");return this._items.reduce(((accumulator,item)=>(void 0!==item._props[propName]&&accumulator.push(item._props[propName]),accumulator)),[])}push(item){return this._items.push(item),this._items.length}unshift(item){return this._items.unshift(item),this._items.length}filterByPropertyValueIn(propName,needles,excludeUndefined=!0){if("string"!=typeof propName)throw new TypeError("EntityCollection filterByPropertyValueIn expects propName to be a string.");if(!Array.isArray(needles))throw new TypeError("EntityCollection filterByPropertyValueIn expects needles to be an array.");this.filterByCallback((item=>{const isPropertyDefined=Object.prototype.hasOwnProperty.call(item._props,propName);return!(excludeUndefined&&!isPropertyDefined||isPropertyDefined&&!needles.includes(item._props[propName]))}))}filterByCallback(callback){if("function"!=typeof callback)throw new TypeError("EntityCollection filterByCallback expects callback to be a function.");for(let currentIndex=this._items.length-1;currentIndex>=0;currentIndex--)callback(this._items[currentIndex])||this._items.splice(currentIndex,1)}assertUniqueByProperty(propName,message){const ruleId=`unique_${propName}`,propValues=this.extract(propName),uniqueElements=new Set;message=message||`The collection should only contain items with unique values for the property: ${propName}.`,propValues.forEach(((propValue,index)=>{if(uniqueElements.add(propValue),index!==uniqueElements.size-1)throw new _entityCollectionError__WEBPACK_IMPORTED_MODULE_0__.A(index,ruleId,message)}))}assertNotExist(propName,propValue,options={}){if(void 0===propValue)return;let haystackSet=options?.haystackSet;if(!haystackSet){const propValues=this.extract(propName);haystackSet=new Set(propValues)}if(haystackSet.has(propValue)){const error=new _entityValidationError__WEBPACK_IMPORTED_MODULE_1__.A,message=options?.message||`The collection already includes an element that has a property (${propName}) with an identical value.`;throw error.addError(propName,"unique",message),error}}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollection},"./src/shared/models/entity/abstract/entityCollectionError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});class EntityCollectionError extends Error{constructor(position,rule,message){if(super(message=message||"Entity collection error."),"number"!=typeof position)throw new TypeError("EntityCollectionError requires a valid position");if(!rule||"string"!=typeof rule)throw new TypeError("EntityCollectionError requires a valid rule");if(!message||"string"!=typeof message)throw new TypeError("EntityCollectionError requires a valid message");this.position=position,this.rule=rule}}const __WEBPACK_DEFAULT_EXPORT__=EntityCollectionError},"./src/shared/models/entity/gpgkey/external/externalGpgKeyPairEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_entity__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/abstract/entity.js"),_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class ExternalGpgKeyPairEntity extends _abstract_entity__WEBPACK_IMPORTED_MODULE_2__.A{constructor(externalGpgKeyPeyPairDto,options={}){super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_1__.A.validate(ExternalGpgKeyPairEntity.ENTITY_NAME,externalGpgKeyPeyPairDto,ExternalGpgKeyPairEntity.getSchema()),options),this._props.private_key&&(this._private_key=new _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A(this._props.private_key,{clone:!1}),delete this._props.private_key),this._props.public_key&&(this._public_key=new _externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A(this._props.public_key,{clone:!1}),delete this._props.public_key)}static getSchema(){return{type:"object",required:["public_key","private_key"],properties:{public_key:_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema(),private_key:_externalGpgKeyEntity__WEBPACK_IMPORTED_MODULE_0__.A.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return contain?(contain.public_key&&this._public_key&&(result.public_key=this.publicKey.toDto()),contain.private_key&&this._private_key&&(result.private_key=this.privateKey.toDto()),result):result}toJSON(){return this.toDto(ExternalGpgKeyPairEntity.ALL_CONTAIN_OPTIONS)}get publicKey(){return this._public_key}get privateKey(){return this._private_key}static get ENTITY_NAME(){return"externalGpgKeyPairEntity"}static get ALL_CONTAIN_OPTIONS(){return{public_key:!0,private_key:!0}}}const __WEBPACK_DEFAULT_EXPORT__=ExternalGpgKeyPairEntity},"./src/shared/models/entity/gpgkey/externalGpgKeyEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_entity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entity.js"),_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class ExternalGpgKeyEntity extends _abstract_entity__WEBPACK_IMPORTED_MODULE_1__.A{constructor(gpgkeyDto,options={}){const sanitizedGpgkeyDto=ExternalGpgKeyEntity.sanitizeDto(gpgkeyDto);super(_abstract_entitySchema__WEBPACK_IMPORTED_MODULE_0__.A.validate(ExternalGpgKeyEntity.ENTITY_NAME,sanitizedGpgkeyDto,ExternalGpgKeyEntity.getSchema()),options)}static getSchema(){return{type:"object",required:["armored_key"],properties:{armored_key:{type:"string",minLength:1},key_id:{type:"string",minLength:8,maxLength:16},user_ids:{type:"array"},fingerprint:{type:"string",minLength:40,maxLength:40},expires:{anyOf:[{type:"string",format:"date-time"},{type:"string",pattern:"^Infinity$"},{}],nullable:!0},created:{type:"string",format:"date-time"},algorithm:{type:"string"},length:{type:"integer",minimum:1},curve:{type:"string",nullable:!0},private:{type:"boolean"},revoked:{type:"boolean"}}}}static sanitizeDto(dto){const sanitizedDto=JSON.parse(JSON.stringify(dto));if(dto.key&&(sanitizedDto.armored_key=dto.key,delete sanitizedDto.key),dto.keyId&&(sanitizedDto.key_id=dto.keyId,delete sanitizedDto.keyId),dto.userIds&&(sanitizedDto.user_ids=dto.userIds,delete sanitizedDto.userIds),dto.created)try{const date=new Date(sanitizedDto.created);sanitizedDto.created=date.toISOString()}catch(error){delete sanitizedDto.created}if("Never"===dto.expires)sanitizedDto.expires="Infinity";else if(dto.expires&&"Infinity"!==dto.expires)try{const date=new Date(sanitizedDto.expires);sanitizedDto.expires=date.toISOString()}catch(error){delete sanitizedDto.expires,console.error(`ExternalGpgKeyEntity::sanitizeDto Unable to sanitize the key for the user ${dto.user_id}`)}return sanitizedDto}get armoredKey(){return this._props.armored_key}get keyId(){return this._props.key_id}get userIds(){return this._props.user_ids}get fingerprint(){return this._props.fingerprint}get expires(){return this._props.expires}get isValid(){return null!==this.expires}get created(){return this._props.created}get algorithm(){return this._props.algorithm}get length(){return this._props.length}get curve(){return this._props.curve}get revoked(){return this._props.revoked}get private(){return this._props.private}get isExpired(){const expires=this.expires;if(null===expires)return null;if("Infinity"===expires)return!1;const now=Date.now();return new Date(expires)<now}static get ENTITY_NAME(){return"externalGpgKey"}}const __WEBPACK_DEFAULT_EXPORT__=ExternalGpgKeyEntity},"./src/shared/models/entity/metadata/metadataKeyEntity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>metadataKeyEntity});var entityV2=__webpack_require__("./src/shared/models/entity/abstract/entityV2.js"),entityValidationError=__webpack_require__("./src/shared/models/entity/abstract/entityValidationError.js"),roleEntity=__webpack_require__("./src/shared/models/entity/role/roleEntity.js");class GpgkeyEntity extends entityV2.A{static getSchema(){return{type:"object",required:["user_id","armored_key"],properties:{id:{type:"string",format:"uuid"},user_id:{type:"string",format:"uuid"},fingerprint:{type:"string",minLength:40,maxLength:40},armored_key:{type:"string"},deleted:{type:"boolean"},type:{type:"string",nullable:!0},uid:{type:"string"},bits:{type:"integer",nullable:!0},key_id:{type:"string",minLength:8,maxLength:16},key_created:{type:"string",format:"date-time"},expires:{type:"string",format:"date-time",nullable:!0},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"}}}}get id(){return this._props.id||null}get userId(){return this._props.user_id}get armoredKey(){return this._props.armored_key}get fingerprint(){return this._props.fingerprint}get created(){return this._props.created||null}get modified(){return this._props.modified||null}get isDeleted(){return void 0===this._props.deleted?null:this._props.deleted}static get ENTITY_NAME(){return"gpgkey"}}const gpgkeyEntity=GpgkeyEntity;class AvatarUrlEntity extends entityV2.A{static getSchema(){return{type:"object",required:[AvatarUrlEntity.AVATAR_URL_SIZE_MEDIUM,AvatarUrlEntity.AVATAR_URL_SIZE_SMALL],properties:{medium:{type:"string"},small:{type:"string"}}}}get medium(){return this._props.medium}get small(){return this._props.small}static get ENTITY_NAME(){return"AvatarUrl"}static get AVATAR_URL_SIZE_MEDIUM(){return"medium"}static get AVATAR_URL_SIZE_SMALL(){return"small"}}const avatarUrlEntity=AvatarUrlEntity;class AvatarEntity extends entityV2.A{constructor(dto={},options={}){super(dto,options),this._props.url&&(this._url=new avatarUrlEntity(this._props.url,{...options,clone:!1}),delete this._props.url)}static getSchema(){return{type:"object",required:["url"],properties:{id:{type:"string",format:"uuid"},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"},url:avatarUrlEntity.getSchema()}}}get id(){return this._props.id||null}get urlMedium(){return this._url.medium}get urlSmall(){return this._url.small}get created(){return this._props.created||null}get modified(){return this._props.modified||null}toDto(contain){const result=super.toDto(contain);return result.url=this._url.toDto(),result}static get ENTITY_NAME(){return"Avatar"}static get AVATAR_URL_SIZE_MEDIUM(){return"medium"}static get AVATAR_URL_SIZE_SMALL(){return"small"}}const avatarEntity=AvatarEntity;class ProfileEntity extends entityV2.A{constructor(dto={},options={}){super(dto,options),this._props.avatar&&(this._avatar=new avatarEntity(this._props.avatar,{...options,clone:!1}),delete this._props.avatar)}static getSchema(){return{type:"object",required:["first_name","last_name"],properties:{id:{type:"string",format:"uuid"},user_id:{type:"string",format:"uuid"},first_name:{type:"string",minLength:1,maxLength:255},last_name:{type:"string",minLength:1,maxLength:255},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"},avatar:avatarEntity.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return this.avatar&&contain&&contain.avatar&&(result.avatar=this.avatar.toDto()),result}toJSON(){return this.toDto(ProfileEntity.ALL_CONTAIN_OPTIONS)}static get ENTITY_NAME(){return"Profile"}static get ALL_CONTAIN_OPTIONS(){return{avatar:!0}}get id(){return this._props.id||null}get name(){return`${this._props.first_name} ${this._props.last_name}`}get firstName(){return this._props.first_name}get lastName(){return this._props.last_name}get userId(){return this._props.user_id||null}get created(){return this._props.created||null}get modified(){return this._props.modified||null}get avatar(){return this._avatar||null}}const profileEntity=ProfileEntity;class UserEntity extends entityV2.A{constructor(dto,options={}){super(dto,options),this._props.profile&&(this._profile=new profileEntity(this._props.profile,{...options,clone:!1}),delete this._props.profile),this._props.role&&(this._role=new roleEntity.A(this._props.role,{...options,clone:!1}),delete this._props.role),this._props.gpgkey&&(this._gpgkey=new gpgkeyEntity(this._props.gpgkey,{...options,clone:!1}),delete this._props.gpgkey)}marshall(){""===this._props.last_logged_in&&(this._props.last_logged_in=null),super.marshall()}static getSchema(){return{type:"object",required:["username"],properties:{id:{type:"string",format:"uuid"},role_id:{type:"string",format:"uuid"},username:{type:"string"},active:{type:"boolean"},deleted:{type:"boolean"},disabled:{type:"string",format:"date-time",nullable:!0},created:{type:"string",format:"date-time"},modified:{type:"string",format:"date-time"},role:roleEntity.A.getSchema(),profile:profileEntity.getSchema(),gpgkey:gpgkeyEntity.getSchema()}}}toDto(contain){const result=Object.assign({},this._props);return contain?(this.role&&contain.role&&(result.role=this.role.toDto()),this.profile&&contain.profile&&(!0===contain.profile?result.profile=this.profile.toDto():result.profile=this.profile.toDto(contain.profile)),this.gpgkey&&contain.gpgkey&&(result.gpgkey=this.gpgkey.toDto()),result):result}toJSON(){return this.toDto(UserEntity.ALL_CONTAIN_OPTIONS)}get id(){return this._props.id||null}get roleId(){return this._props.role_id||null}get username(){return this._props.username}get isActive(){return void 0===this._props.active?null:this._props.active}get isDeleted(){return void 0===this._props.deleted?null:this._props.deleted}get created(){return this._props.created||null}get modified(){return this._props.modified||null}static get ALL_CONTAIN_OPTIONS(){return{profile:profileEntity.ALL_CONTAIN_OPTIONS,role:!0,gpgkey:!0}}static get ENTITY_NAME(){return"User"}get profile(){return this._profile||null}get role(){return this._role||null}get gpgkey(){return this._gpgkey||null}}const userEntity=UserEntity;var entityV2Collection=__webpack_require__("./src/shared/models/entity/abstract/entityV2Collection.js"),entitySchema=__webpack_require__("./src/shared/models/entity/abstract/entitySchema.js");class MetadataPrivateKeyDataEntity extends entityV2.A{static getSchema(){return{type:"object",required:["object_type","domain","fingerprint","armored_key","passphrase"],properties:{object_type:{type:"string",enum:["PASSBOLT_METADATA_PRIVATE_KEY"]},domain:{type:"string",maxLength:1024},fingerprint:{type:"string",pattern:/^[a-f0-9]{40}$/im},armored_key:{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP PRIVATE KEY BLOCK-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP PRIVATE KEY BLOCK-----([\r\n]*)$/},passphrase:{type:"string",maxLength:1024}}}}get armoredKey(){return this._props.armored_key}get fingerprint(){return this._props.fingerprint}}const metadataPrivateKeyDataEntity=MetadataPrivateKeyDataEntity;class MetadataPrivateKeyEntity extends entityV2.A{constructor(dto,options={}){super(dto),this._props.data&&"string"!=typeof this._props.data&&(this._data=new metadataPrivateKeyDataEntity(this._props.data,{...options,clone:!1}),delete this._props.data)}static getSchema(){return{type:"object",required:["user_id","data"],properties:{id:{type:"string",format:"uuid",nullable:!0},metadata_key_id:{type:"string",format:"uuid",nullable:!0},user_id:{type:"string",format:"uuid",nullable:!0},data_signed_by_current_user:{type:"string",format:"date-time",nullable:!0},data:{anyOf:[{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP MESSAGE-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP MESSAGE-----([\r\n]*)$/},{type:"object"}]},created:{type:"string",format:"date-time"},created_by:{type:"string",format:"uuid"},modified:{type:"string",format:"date-time"},modified_by:{type:"string",format:"uuid"}}}}validateBuildRules(){if(Boolean(this._props.data)&&Boolean(this._data)){const error=new entityValidationError.A,message="The property data and _data cannot be set at the same time";throw error.addError("data","only-one-defined",message),error}}toDto(contain){const result=Object.assign({},this._props),data=this.data;return result.data=data instanceof metadataPrivateKeyDataEntity?data.toDto():data,contain?(this._creator&&contain.creator&&(result.creator=this._creator.toDto(userEntity.ALL_CONTAIN_OPTIONS)),result):result}toDataDto(){return{data:this.toDto().data}}toContentCodeConfirmTrustRequestDto(){const result=this.toDto();return delete result.data,result}toJSON(){return this.toDto(userEntity.ALL_CONTAIN_OPTIONS)}marshall(){}get data(){return this.isDecrypted?this._data:this._props.data}get id(){return this._props.id||null}get metadataKeyId(){return this._props.metadata_key_id||null}get isDecrypted(){return Boolean(this._data)}get userId(){return this._props.user_id}get isDataSignedByCurrentUser(){return this._props.data_signed_by_current_user||null}get modifiedBy(){return this._props.modified_by}get modified(){return this._props.modified}set modified(modified){this._props.modified=modified}set modifiedBy(modifiedBy){this._props.modifiedBy=modifiedBy}set data(data){entitySchema.A.validateProp("data",data,this.cachedSchema.properties.data),"string"==typeof data?(this._props.data=data,delete this._data):(this._data=new metadataPrivateKeyDataEntity(data.toDto(),{clone:!0,validate:!1}),delete this._props.data)}set isDataSignedByCurrentUser(value){entitySchema.A.validateProp("data_signed_by_current_user",value,this.cachedSchema.properties.data_signed_by_current_user),this._props.data_signed_by_current_user=value}static get ALL_CONTAIN_OPTIONS(){return{creator:!0}}}const metadataPrivateKeyEntity=MetadataPrivateKeyEntity;class MetadataPrivateKeysCollection extends entityV2Collection.A{get entityClass(){return metadataPrivateKeyEntity}constructor(dtos=[],options={}){super(dtos,options)}static getSchema(){return{type:"array",items:metadataPrivateKeyEntity.getSchema()}}validateBuildRules(item,options={}){this.assertNotExist("id",item._props.id,{haystackSet:options?.uniqueIdsSetCache}),this.assertNotExist("user_id",item._props.user_id,{haystackSet:options?.uniqueUserIdsSetCache}),this.assertSameMetadataKeyId(item)}assertSameMetadataKeyId(item){if(!item.metadataKeyId)return;const collectionMetadataKeyId=this._items.find((item=>Boolean(item.metadataKeyId)))?.metadataKeyId;if(!collectionMetadataKeyId)return;if(item.metadataKeyId===collectionMetadataKeyId)return;const error=new entityValidationError.A;throw error.addError("metadata_key_id","same_metadata_key","The collection should not contain different metadata key ID."),error}hasDecryptedPrivateKeys(){return this._items.some((item=>item.isDecrypted))}hasEncryptedPrivateKeys(){return this._items.some((item=>!item.isDecrypted))}pushMany(data,entityOptions={},options={}){const uniqueIdsSetCache=new Set(this.extract("id")),uniqueUserIdsSetCache=new Set(this.extract("user_id"));options={onItemPushed:item=>{uniqueIdsSetCache.add(item._props.id),uniqueUserIdsSetCache.add(item._props.user_id)},validateBuildRules:{...options?.validateBuildRules,uniqueIdsSetCache,uniqueUserIdsSetCache},...options},super.pushMany(data,entityOptions,options)}}const metadataPrivateKeysCollection=MetadataPrivateKeysCollection;class MetadataKeyEntity extends entityV2.A{constructor(dto,options={}){super(dto,options),this._props.metadata_private_keys&&(this._metadata_private_keys=new metadataPrivateKeysCollection(this._props.metadata_private_keys,{...options,clone:!1}),delete this._props.metadata_private_keys,this.assertSameMetadataKeyId()),this._props.creator&&(this._creator=new userEntity(this._props.creator,{...options,clone:!1}),delete this._props.creator)}static getSchema(){return{type:"object",required:["fingerprint","armored_key"],properties:{id:{type:"string",format:"uuid",nullable:!0},fingerprint:{type:"string",pattern:/^[a-f0-9]{40}$/im},armored_key:{type:"string",maxLength:1e4,pattern:/^-----BEGIN PGP PUBLIC KEY BLOCK-----([\r\n])([ -9;-~]{1,76}: [ -~]{1,76}([\r\n]))*\n([a-zA-Z0-9\/+=]{1,76}([\r\n]))*=[a-zA-Z0-9\/+=]{4}([\r\n])-----END PGP PUBLIC KEY BLOCK-----([\r\n]*)$/},created:{type:"string",format:"date-time",nullable:!0},created_by:{type:"string",format:"uuid",nullable:!0},modified:{type:"string",format:"date-time",nullable:!0},modified_by:{type:"string",format:"uuid",nullable:!0},deleted:{type:"string",format:"date-time",nullable:!0},expired:{type:"string",format:"date-time",nullable:!0},metadata_private_keys:metadataPrivateKeysCollection.getSchema(),creator:userEntity.getSchema()}}}validateBuildRules(){}assertSameMetadataKeyId(){if(0===(this._metadata_private_keys?.length||0))return;if(this.id!==this._metadata_private_keys.items[0].metadataKeyId){const error=new entityValidationError.A;throw error.addError("id:metadata_private_keys","same_id","`id` and the `metadata_private_keys.id` should be the same"),error}}assertFingerprintPublicAndPrivateKeysMatch(){0!==(this._metadata_private_keys?.length||0)&&this._metadata_private_keys.items.forEach(((metadataPrivateKey,index)=>{if(metadataPrivateKey.isDecrypted&&metadataPrivateKey.data.fingerprint!==this.fingerprint){const error=new entityValidationError.A;throw error.addError(`metadata_private_keys.${index}.fingerprint`,"fingerprint_match","The fingerprint of the metadata private key does not match the fingerprint of the metadata public key"),error}}))}toDto(contain){const result=Object.assign({},this._props);return contain?(this._metadata_private_keys&&contain.metadata_private_keys&&(result.metadata_private_keys=this._metadata_private_keys.toDto()),this._creator&&contain.creator&&(result.creator=this._creator.toDto(userEntity.ALL_CONTAIN_OPTIONS)),result):result}toContentCodeConfirmTrustRequestDto(){const result=this.toDto();return this._metadata_private_keys&&(result.metadata_private_keys=this._metadata_private_keys.items.map((privateKey=>privateKey.toContentCodeConfirmTrustRequestDto()))),this._creator&&(result.creator=this._creator.toDto(userEntity.ALL_CONTAIN_OPTIONS)),result}get armoredKey(){return this._props.armored_key}get id(){return this._props.id||null}get metadataPrivateKeys(){return this._metadata_private_keys||null}get created(){return this._props.created||null}get fingerprint(){return this._props.fingerprint}get expired(){return this._props.expired||null}get creator(){return this._creator||null}static get ALL_CONTAIN_OPTIONS(){return{metadata_private_keys:!0}}}const metadataKeyEntity=MetadataKeyEntity},"./src/shared/models/entity/metadata/metadataKeysCollection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _abstract_collectionValidationError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/abstract/collectionValidationError.js"),_abstract_entityV2Collection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/abstract/entityV2Collection.js"),_metadataKeyEntity__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/metadata/metadataKeyEntity.js");class MetadataKeysCollection extends _abstract_entityV2Collection__WEBPACK_IMPORTED_MODULE_1__.A{get entityClass(){return _metadataKeyEntity__WEBPACK_IMPORTED_MODULE_2__.A}constructor(dtos=[],options={}){super(dtos,options)}static getSchema(){return{type:"array",items:_metadataKeyEntity__WEBPACK_IMPORTED_MODULE_2__.A.getSchema()}}validateBuildRules(item,options={}){this.assertNotExist("id",item._props.id,{haystackSet:options?.uniqueIdsSetCache}),this.assertNotExist("fingerprint",item._props.fingerprint,{haystackSet:options?.uniqueFingerprintsSetCache})}assertFingerprintsPublicAndPrivateKeysMatch(){this._items.forEach(((metadataKey,index)=>{try{metadataKey.assertFingerprintPublicAndPrivateKeysMatch(index)}catch(error){const collectionValidationError=new _abstract_collectionValidationError__WEBPACK_IMPORTED_MODULE_0__.A;throw collectionValidationError.addItemValidationError(index,error),collectionValidationError}}))}getFirstByLatestCreated(){return this.length?this._items.reduce(((latestCreatedItem,item)=>latestCreatedItem.created?item.created&&item.created>latestCreatedItem.created?item:latestCreatedItem:item)):null}toDto(contains={}){return this._items.map((entity=>entity.toDto(contains)))}hasDecryptedKeys(){return this._items.some((metadataKey=>metadataKey.metadataPrivateKeys?.hasDecryptedPrivateKeys()))}hasEncryptedKeys(){return this._items.some((metadataKey=>metadataKey.metadataPrivateKeys?.hasEncryptedPrivateKeys()))}pushMany(data,entityOptions={},options={}){const uniqueIdsSetCache=new Set(this.extract("id")),uniqueFingerprintsSetCache=new Set(this.extract("fingerprint"));options={onItemPushed:item=>{uniqueIdsSetCache.add(item._props.id),uniqueFingerprintsSetCache.add(item._props.fingerprint)},validateBuildRules:{...options?.validateBuildRules,uniqueIdsSetCache,uniqueFingerprintsSetCache},...options},super.pushMany(data,entityOptions,options)}}const __WEBPACK_DEFAULT_EXPORT__=MetadataKeysCollection},"./src/shared/services/serviceWorker/metadata/metadataKeysServiceWorkerService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});var _models_entity_metadata_metadataKeysCollection__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysCollection.js"),_models_entity_gpgkey_external_externalGpgKeyPairEntity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/gpgkey/external/externalGpgKeyPairEntity.js"),_models_entity_metadata_metadataKeyEntity__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/shared/models/entity/metadata/metadataKeyEntity.js");const __WEBPACK_DEFAULT_EXPORT__=class MetadataKeysServiceWorkerService{constructor(port){this.port=port}async findAll(){const metadataKeysDto=await this.port.request("passbolt.metadata.find-all-non-deleted-metadata-keys");return new _models_entity_metadata_metadataKeysCollection__WEBPACK_IMPORTED_MODULE_0__.A(metadataKeysDto)}async generateKeyPair(){const externalGpgKeyPairDto=await this.port.request("passbolt.metadata.generate-metadata-key");return new _models_entity_gpgkey_external_externalGpgKeyPairEntity__WEBPACK_IMPORTED_MODULE_1__.A(externalGpgKeyPairDto)}async createKey(metadataKeyPair){if(!(metadataKeyPair instanceof _models_entity_gpgkey_external_externalGpgKeyPairEntity__WEBPACK_IMPORTED_MODULE_1__.A))throw new TypeError("The parameter `metadataKeyPair` should be of type ExternalGpgKeyPairEntity.");const metadataKeyDto=await this.port.request("passbolt.metadata.create-key",metadataKeyPair.toDto({public_key:!0,private_key:!0}));return new _models_entity_metadata_metadataKeyEntity__WEBPACK_IMPORTED_MODULE_2__.A(metadataKeyDto)}}},"./src/shared/services/serviceWorker/metadata/metadataSettingsServiceWorkerService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});var _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/models/entity/metadata/metadataTypesSettingsEntity.js"),_models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/shared/models/entity/metadata/metadataKeysSettingsEntity.js");const __WEBPACK_DEFAULT_EXPORT__=class MetadataSettingsServiceWorkerService{constructor(port){this.port=port}async findKeysSettings(){const settingsDto=await this.port.request("passbolt.metadata.find-metadata-keys-settings");return new _models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__.A(settingsDto)}async findTypesSettings(){const settingsDto=await this.port.request("passbolt.metadata.find-metadata-types-settings");return new _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__.Ay(settingsDto)}async saveTypesSettings(formSettings){if(!(formSettings instanceof _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__.Ay))throw new TypeError("The 'settings' property should be of type 'MetadataTypesSettingsEntity'.");const savedSettingsDto=await this.port.request("passbolt.metadata.save-metadata-types-settings",formSettings.toDto());return new _models_entity_metadata_metadataTypesSettingsEntity__WEBPACK_IMPORTED_MODULE_0__.Ay(savedSettingsDto)}async saveKeysSettings(settings){if(!(settings instanceof _models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__.A))throw new TypeError("The 'settings' property should be of type 'MetadataKeysSettingsEntity'.");const savedSettingsDto=await this.port.request("passbolt.metadata.save-metadata-keys-settings",settings.toDto());return new _models_entity_metadata_metadataKeysSettingsEntity__WEBPACK_IMPORTED_MODULE_1__.A(savedSettingsDto)}}},"./src/shared/utils/portals.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>createSafePortal});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-dom/index.js");function createSafePortal(children,domNode,key){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,domNode&&(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(children,domNode,key))}createSafePortal.__docgenInfo={description:'Create a portal in a "safe" mode.\n"Safe" mode only means that if the given HTML element doesn\'t exist, the method doesn\'t crash.\nIt will simply ignore the rendering if it happens.\n@param {ReactNode} children the elements to render in the portal\n@param {Element | DocumentFragment} domNode the target where to render the children.\n@param {null | string} [key] a React compatible key to be passed to `createPortal` if any\n@returns {JSX}',methods:[],displayName:"createSafePortal"}}}]);